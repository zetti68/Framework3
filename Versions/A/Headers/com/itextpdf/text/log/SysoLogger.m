//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/log/SysoLogger.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/log/SysoLogger.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/log/Level.h"
#include "com/itextpdf/text/log/Logger.h"
#include "com/itextpdf/text/log/SysoLogger.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"


#line 51
@implementation ComItextpdfTextLogSysoLogger


#line 59
- (instancetype)init {
  return
#line 60
  [self initComItextpdfTextLogSysoLoggerWithInt:1];
}


#line 67
- (instancetype)initComItextpdfTextLogSysoLoggerWithInt:(jint)packageReduce {
  if (self = [super init]) {
    
#line 68
    self->shorten__ = packageReduce;
  }
  return self;
}

- (instancetype)initWithInt:(jint)packageReduce {
  return [self initComItextpdfTextLogSysoLoggerWithInt:
#line 67
packageReduce];
}


#line 75
- (instancetype)initWithNSString:(NSString *)klass
                         withInt:(jint)shorten {
  if (self = [super init]) {
    
#line 76
    self->shorten__ = shorten;
    
#line 77
    self->name_ = klass;
  }
  return self;
}


#line 80
- (id<ComItextpdfTextLogLogger>)getLoggerWithIOSClass:(IOSClass *)klass {
  
#line 81
  return [[ComItextpdfTextLogSysoLogger alloc] initWithNSString:[((IOSClass *) nil_chk(klass)) getName] withInt:shorten__];
}


#line 87
- (id<ComItextpdfTextLogLogger>)getLoggerWithNSString:(NSString *)name {
  
#line 88
  return [[ComItextpdfTextLogSysoLogger alloc] initWithNSString:@"[itext]" withInt:0];
}


#line 91
- (jboolean)isLoggingWithComItextpdfTextLogLevelEnum:(ComItextpdfTextLogLevelEnum *)level {
  
#line 92
  return YES;
}


#line 95
- (void)warnWithNSString:(NSString *)message {
  
#line 96
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[NSString formatWithNSString:@"%s WARN  %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self shortenWithNSString:name_], message } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
}


#line 103
- (NSString *)shortenWithNSString:(NSString *)className_ {
  
#line 104
  if (shorten__ != 0) {
    JavaLangStringBuilder *target = [[JavaLangStringBuilder alloc] init];
    NSString *name = className_;
    jint fromIndex = [((NSString *) nil_chk(className_)) indexOf:'.'];
    while (fromIndex != -1) {
      jint parseTo = (fromIndex < shorten__) ? (fromIndex) : (shorten__);
      (void) [target appendWithNSString:[((NSString *) nil_chk(name)) substring:0 endIndex:parseTo]];
      (void) [target appendWithChar:'.'];
      name = [name substring:fromIndex + 1];
      fromIndex = [((NSString *) nil_chk(name)) indexOf:'.'];
    }
    (void) [target appendWithNSString:[className_ substring:[className_ lastIndexOf:'.'] + 1]];
    return [target description];
  }
  return className_;
}


#line 121
- (void)traceWithNSString:(NSString *)message {
  
#line 122
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[NSString formatWithNSString:@"%s TRACE %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self shortenWithNSString:name_], message } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
}


#line 125
- (void)debugWithNSString:(NSString *)message {
  
#line 126
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[NSString formatWithNSString:@"%s DEBUG %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self shortenWithNSString:name_], message } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
}


#line 129
- (void)infoWithNSString:(NSString *)message {
  
#line 130
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[NSString formatWithNSString:@"%s INFO  %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [self shortenWithNSString:name_], message } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
}


#line 133
- (void)errorWithNSString:(NSString *)message {
  
#line 134
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[NSString formatWithNSString:@"%s ERROR %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name_, message } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
}


#line 137
- (void)errorWithNSString:(NSString *)message
    withJavaLangException:(JavaLangException *)e {
  
#line 138
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[NSString formatWithNSString:@"%s ERROR %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name_, message } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
  [((JavaLangException *) nil_chk(e)) printStackTraceWithJavaIoPrintStream:JavaLangSystem_get_out_()];
}

- (void)copyAllFieldsTo:(ComItextpdfTextLogSysoLogger *)other {
  [super copyAllFieldsTo:other];
  other->name_ = name_;
  other->shorten__ = shorten__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SysoLogger", NULL, 0x1, NULL },
    { "initWithInt:", "SysoLogger", NULL, 0x1, NULL },
    { "initWithNSString:withInt:", "SysoLogger", NULL, 0x4, NULL },
    { "getLoggerWithIOSClass:", "getLogger", "Lcom.itextpdf.text.log.Logger;", 0x1, NULL },
    { "getLoggerWithNSString:", "getLogger", "Lcom.itextpdf.text.log.Logger;", 0x1, NULL },
    { "isLoggingWithComItextpdfTextLogLevelEnum:", "isLogging", "Z", 0x1, NULL },
    { "warnWithNSString:", "warn", "V", 0x1, NULL },
    { "shortenWithNSString:", "shorten", "Ljava.lang.String;", 0x2, NULL },
    { "traceWithNSString:", "trace", "V", 0x1, NULL },
    { "debugWithNSString:", "debug", "V", 0x1, NULL },
    { "infoWithNSString:", "info", "V", 0x1, NULL },
    { "errorWithNSString:", "error", "V", 0x1, NULL },
    { "errorWithNSString:withJavaLangException:", "error", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "shorten__", "shorten", 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextLogSysoLogger = { "SysoLogger", "com.itextpdf.text.log", NULL, 0x1, 13, methods, 2, fields, 0, NULL};
  return &_ComItextpdfTextLogSysoLogger;
}

@end

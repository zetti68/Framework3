//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/log/LoggerFactory.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/log/LoggerFactory.java"

#include "IOSClass.h"
#include "com/itextpdf/text/log/Logger.h"
#include "com/itextpdf/text/log/LoggerFactory.h"
#include "com/itextpdf/text/log/NoOpLogger.h"

BOOL ComItextpdfTextLogLoggerFactory_initialized = NO;


#line 54
@implementation ComItextpdfTextLogLoggerFactory

ComItextpdfTextLogLoggerFactory * ComItextpdfTextLogLoggerFactory_myself_;


#line 66
+ (id<ComItextpdfTextLogLogger>)getLoggerWithIOSClass:(IOSClass *)klass {
  
#line 67
  return [((id<ComItextpdfTextLogLogger>) nil_chk(((ComItextpdfTextLogLoggerFactory *) nil_chk(ComItextpdfTextLogLoggerFactory_myself_))->logger__)) getLoggerWithIOSClass:klass];
}


#line 74
+ (id<ComItextpdfTextLogLogger>)getLoggerWithNSString:(NSString *)name {
  
#line 75
  return [((id<ComItextpdfTextLogLogger>) nil_chk(((ComItextpdfTextLogLoggerFactory *) nil_chk(ComItextpdfTextLogLoggerFactory_myself_))->logger__)) getLoggerWithNSString:name];
}


#line 81
+ (ComItextpdfTextLogLoggerFactory *)getInstance {
  
#line 82
  return ComItextpdfTextLogLoggerFactory_myself_;
}

- (instancetype)init {
  if (self = [super init]) {
    logger__ =
#line 85
    [[ComItextpdfTextLogNoOpLogger alloc] init];
  }
  return self;
}


#line 95
- (void)setLoggerWithComItextpdfTextLogLogger:(id<ComItextpdfTextLogLogger>)logger {
  self->logger__ = logger;
}


#line 104
- (id<ComItextpdfTextLogLogger>)logger {
  
#line 105
  return logger__;
}

- (void)copyAllFieldsTo:(ComItextpdfTextLogLoggerFactory *)other {
  [super copyAllFieldsTo:other];
  other->logger__ = logger__;
}

+ (void)initialize {
  if (self == [ComItextpdfTextLogLoggerFactory class]) {
    {
      
#line 57
      ComItextpdfTextLogLoggerFactory_myself_ = [[ComItextpdfTextLogLoggerFactory alloc] init];
    }
    ComItextpdfTextLogLoggerFactory_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getLoggerWithIOSClass:", "getLogger", "Lcom.itextpdf.text.log.Logger;", 0x9, NULL },
    { "getLoggerWithNSString:", "getLogger", "Lcom.itextpdf.text.log.Logger;", 0x9, NULL },
    { "getInstance", NULL, "Lcom.itextpdf.text.log.LoggerFactory;", 0x9, NULL },
    { "init", "LoggerFactory", NULL, 0x2, NULL },
    { "setLoggerWithComItextpdfTextLogLogger:", "setLogger", "V", 0x1, NULL },
    { "logger", NULL, "Lcom.itextpdf.text.log.Logger;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "myself_", NULL, 0xa, "Lcom.itextpdf.text.log.LoggerFactory;", &ComItextpdfTextLogLoggerFactory_myself_,  },
    { "logger__", "logger", 0x2, "Lcom.itextpdf.text.log.Logger;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextLogLoggerFactory = { "LoggerFactory", "com.itextpdf.text.log", NULL, 0x1, 6, methods, 2, fields, 0, NULL};
  return &_ComItextpdfTextLogLoggerFactory;
}

@end

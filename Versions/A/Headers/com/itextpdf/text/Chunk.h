//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/Chunk.java
//

#ifndef _ComItextpdfTextChunk_H_
#define _ComItextpdfTextChunk_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/Element.h"
#include "com/itextpdf/text/pdf/interfaces/IAccessibleElement.h"

@class ComItextpdfTextAccessibleElementId;
@class ComItextpdfTextBaseColor;
@class ComItextpdfTextFont;
@class ComItextpdfTextImage;
@class ComItextpdfTextPdfPdfAction;
@class ComItextpdfTextPdfPdfAnnotation;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class JavaLangStringBuffer;
@class JavaNetURL;
@class JavaUtilHashMap;
@protocol ComItextpdfTextElementListener;
@protocol ComItextpdfTextPdfDrawDrawInterface;
@protocol ComItextpdfTextPdfHyphenationEvent;
@protocol ComItextpdfTextSplitCharacter;
@protocol JavaUtilList;

@interface ComItextpdfTextChunk : NSObject < ComItextpdfTextElement, ComItextpdfTextPdfInterfacesIAccessibleElement > {
 @public
  JavaLangStringBuffer *content_;
  ComItextpdfTextFont *font_;
  JavaUtilHashMap *attributes_;
  ComItextpdfTextPdfPdfName *role_;
  JavaUtilHashMap *accessibleAttributes_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithChar:(jchar)c;

- (instancetype)initWithChar:(jchar)c
     withComItextpdfTextFont:(ComItextpdfTextFont *)font;

- (instancetype)initWithComItextpdfTextChunk:(ComItextpdfTextChunk *)ck;

- (instancetype)initWithComItextpdfTextPdfDrawDrawInterface:(id<ComItextpdfTextPdfDrawDrawInterface>)separator;

- (instancetype)initWithComItextpdfTextPdfDrawDrawInterface:(id<ComItextpdfTextPdfDrawDrawInterface>)separator
                                                withBoolean:(jboolean)vertical;

- (instancetype)initWithComItextpdfTextPdfDrawDrawInterface:(id<ComItextpdfTextPdfDrawDrawInterface>)separator
                                                  withFloat:(jfloat)tabPosition;

- (instancetype)initWithComItextpdfTextPdfDrawDrawInterface:(id<ComItextpdfTextPdfDrawDrawInterface>)separator
                                                  withFloat:(jfloat)tabPosition
                                                withBoolean:(jboolean)newline;

- (instancetype)initWithComItextpdfTextImage:(ComItextpdfTextImage *)image
                                   withFloat:(jfloat)offsetX
                                   withFloat:(jfloat)offsetY;

- (instancetype)initWithComItextpdfTextImage:(ComItextpdfTextImage *)image
                                   withFloat:(jfloat)offsetX
                                   withFloat:(jfloat)offsetY
                                 withBoolean:(jboolean)changeLeading;

- (instancetype)initWithNSString:(NSString *)content;

- (instancetype)initWithNSString:(NSString *)content
         withComItextpdfTextFont:(ComItextpdfTextFont *)font;

- (JavaLangStringBuffer *)appendWithNSString:(NSString *)string;

+ (ComItextpdfTextChunk *)createTabspace;

+ (ComItextpdfTextChunk *)createTabspaceWithFloat:(jfloat)spacing;

+ (ComItextpdfTextChunk *)createWhitespaceWithNSString:(NSString *)content;

+ (ComItextpdfTextChunk *)createWhitespaceWithNSString:(NSString *)content
                                           withBoolean:(jboolean)preserve;

- (ComItextpdfTextPdfPdfObject *)getAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key;

- (JavaUtilHashMap *)getAccessibleAttributes;

- (JavaUtilHashMap *)getAttributes;

- (jfloat)getCharacterSpacing;

- (id<JavaUtilList>)getChunks;

- (NSString *)getContent;

- (ComItextpdfTextFont *)getFont;

- (jfloat)getHorizontalScaling;

- (id<ComItextpdfTextPdfHyphenationEvent>)getHyphenation;

- (ComItextpdfTextAccessibleElementId *)getId;

- (ComItextpdfTextImage *)getImage;

- (ComItextpdfTextPdfPdfName *)getRole;

- (NSString *)getTextExpansion;

- (jfloat)getTextRise;

- (jfloat)getWidthPoint;

- (jfloat)getWordSpacing;

- (jboolean)hasAttributes;

- (jboolean)isContent;

- (jboolean)isEmpty;

- (jboolean)isInline;

- (jboolean)isNestable;

- (jboolean)isTabspace;

- (jboolean)isWhitespace;

- (jboolean)processWithComItextpdfTextElementListener:(id<ComItextpdfTextElementListener>)listener;

- (void)setAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                            withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (ComItextpdfTextChunk *)setActionWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (ComItextpdfTextChunk *)setAnchorWithNSString:(NSString *)url;

- (ComItextpdfTextChunk *)setAnchorWithJavaNetURL:(JavaNetURL *)url;

- (ComItextpdfTextChunk *)setAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annotation;

- (void)setAttributesWithJavaUtilHashMap:(JavaUtilHashMap *)attributes;

- (ComItextpdfTextChunk *)setBackgroundWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color;

- (ComItextpdfTextChunk *)setBackgroundWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color
                                                          withFloat:(jfloat)extraLeft
                                                          withFloat:(jfloat)extraBottom
                                                          withFloat:(jfloat)extraRight
                                                          withFloat:(jfloat)extraTop;

- (ComItextpdfTextChunk *)setCharacterSpacingWithFloat:(jfloat)charSpace;

- (void)setFontWithComItextpdfTextFont:(ComItextpdfTextFont *)font;

- (ComItextpdfTextChunk *)setGenericTagWithNSString:(NSString *)text;

- (ComItextpdfTextChunk *)setHorizontalScalingWithFloat:(jfloat)scale_;

- (ComItextpdfTextChunk *)setHyphenationWithComItextpdfTextPdfHyphenationEvent:(id<ComItextpdfTextPdfHyphenationEvent>)hyphenation;

- (void)setIdWithComItextpdfTextAccessibleElementId:(ComItextpdfTextAccessibleElementId *)id_;

- (ComItextpdfTextChunk *)setLineHeightWithFloat:(jfloat)lineheight;

- (ComItextpdfTextChunk *)setLocalDestinationWithNSString:(NSString *)name;

- (ComItextpdfTextChunk *)setLocalGotoWithNSString:(NSString *)name;

- (ComItextpdfTextChunk *)setNewPage;

- (ComItextpdfTextChunk *)setRemoteGotoWithNSString:(NSString *)filename
                                            withInt:(jint)page;

- (ComItextpdfTextChunk *)setRemoteGotoWithNSString:(NSString *)filename
                                       withNSString:(NSString *)name;

- (void)setRoleWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)role;

- (ComItextpdfTextChunk *)setSkewWithFloat:(jfloat)alpha
                                 withFloat:(jfloat)beta;

- (ComItextpdfTextChunk *)setSplitCharacterWithComItextpdfTextSplitCharacter:(id<ComItextpdfTextSplitCharacter>)splitCharacter;

- (void)setTextExpansionWithNSString:(NSString *)value;

- (ComItextpdfTextChunk *)setTextRenderModeWithInt:(jint)mode
                                         withFloat:(jfloat)strokeWidth
                      withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)strokeColor;

- (ComItextpdfTextChunk *)setTextRiseWithFloat:(jfloat)rise;

- (ComItextpdfTextChunk *)setUnderlineWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color
                                                         withFloat:(jfloat)thickness
                                                         withFloat:(jfloat)thicknessMul
                                                         withFloat:(jfloat)yPosition
                                                         withFloat:(jfloat)yPositionMul
                                                           withInt:(jint)cap;

- (ComItextpdfTextChunk *)setUnderlineWithFloat:(jfloat)thickness
                                      withFloat:(jfloat)yPosition;

- (ComItextpdfTextChunk *)setWordSpacingWithFloat:(jfloat)wordSpace;

- (NSString *)description;

- (jint)type;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextChunk)

J2OBJC_FIELD_SETTER(ComItextpdfTextChunk, content_, JavaLangStringBuffer *)
J2OBJC_FIELD_SETTER(ComItextpdfTextChunk, font_, ComItextpdfTextFont *)
J2OBJC_FIELD_SETTER(ComItextpdfTextChunk, attributes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextChunk, role_, ComItextpdfTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComItextpdfTextChunk, accessibleAttributes_, JavaUtilHashMap *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_OBJECT_REPLACEMENT_CHARACTER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, OBJECT_REPLACEMENT_CHARACTER_, NSString *)

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_NEWLINE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, NEWLINE_, ComItextpdfTextChunk *)

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_NEXTPAGE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, NEXTPAGE_, ComItextpdfTextChunk *)

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_TABBING_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, TABBING_, ComItextpdfTextChunk *)

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_SPACETABBING_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, SPACETABBING_, ComItextpdfTextChunk *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_SEPARATOR_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, SEPARATOR_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_TAB_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, TAB_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_TABSETTINGS_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, TABSETTINGS_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_HSCALE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, HSCALE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_UNDERLINE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, UNDERLINE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_SUBSUPSCRIPT_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, SUBSUPSCRIPT_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_SKEW_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, SKEW_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_BACKGROUND_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, BACKGROUND_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_TEXTRENDERMODE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, TEXTRENDERMODE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_SPLITCHARACTER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, SPLITCHARACTER_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_HYPHENATION_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, HYPHENATION_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_REMOTEGOTO_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, REMOTEGOTO_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_LOCALGOTO_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, LOCALGOTO_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_LOCALDESTINATION_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, LOCALDESTINATION_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_GENERICTAG_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, GENERICTAG_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_LINEHEIGHT_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, LINEHEIGHT_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_IMAGE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, IMAGE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_ACTION_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, ACTION_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_NEWPAGE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, NEWPAGE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_PDFANNOTATION_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, PDFANNOTATION_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_COLOR_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, COLOR_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_ENCODING_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, ENCODING_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_CHAR_SPACING_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, CHAR_SPACING_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_WORD_SPACING_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, WORD_SPACING_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextChunk_WHITESPACE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextChunk, WHITESPACE_, NSString *)

FOUNDATION_EXPORT void ComItextpdfTextChunk_init(ComItextpdfTextChunk *self);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithComItextpdfTextChunk_(ComItextpdfTextChunk *self, ComItextpdfTextChunk *ck);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithComItextpdfTextChunk_(ComItextpdfTextChunk *ck) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithNSString_withComItextpdfTextFont_(ComItextpdfTextChunk *self, NSString *content, ComItextpdfTextFont *font);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithNSString_withComItextpdfTextFont_(NSString *content, ComItextpdfTextFont *font) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithNSString_(ComItextpdfTextChunk *self, NSString *content);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithNSString_(NSString *content) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithChar_withComItextpdfTextFont_(ComItextpdfTextChunk *self, jchar c, ComItextpdfTextFont *font);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithChar_withComItextpdfTextFont_(jchar c, ComItextpdfTextFont *font) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithChar_(ComItextpdfTextChunk *self, jchar c);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithChar_(jchar c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithComItextpdfTextImage_withFloat_withFloat_(ComItextpdfTextChunk *self, ComItextpdfTextImage *image, jfloat offsetX, jfloat offsetY);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithComItextpdfTextImage_withFloat_withFloat_(ComItextpdfTextImage *image, jfloat offsetX, jfloat offsetY) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_(ComItextpdfTextChunk *self, id<ComItextpdfTextPdfDrawDrawInterface> separator);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_(id<ComItextpdfTextPdfDrawDrawInterface> separator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_withBoolean_(ComItextpdfTextChunk *self, id<ComItextpdfTextPdfDrawDrawInterface> separator, jboolean vertical);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_withBoolean_(id<ComItextpdfTextPdfDrawDrawInterface> separator, jboolean vertical) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_withFloat_(ComItextpdfTextChunk *self, id<ComItextpdfTextPdfDrawDrawInterface> separator, jfloat tabPosition);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_withFloat_(id<ComItextpdfTextPdfDrawDrawInterface> separator, jfloat tabPosition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_withFloat_withBoolean_(ComItextpdfTextChunk *self, id<ComItextpdfTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithComItextpdfTextPdfDrawDrawInterface_withFloat_withBoolean_(id<ComItextpdfTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextChunk_initWithComItextpdfTextImage_withFloat_withFloat_withBoolean_(ComItextpdfTextChunk *self, ComItextpdfTextImage *image, jfloat offsetX, jfloat offsetY, jboolean changeLeading);

FOUNDATION_EXPORT ComItextpdfTextChunk *new_ComItextpdfTextChunk_initWithComItextpdfTextImage_withFloat_withFloat_withBoolean_(ComItextpdfTextImage *image, jfloat offsetX, jfloat offsetY, jboolean changeLeading) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_createWhitespaceWithNSString_(NSString *content);

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_createWhitespaceWithNSString_withBoolean_(NSString *content, jboolean preserve);

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_createTabspace();

FOUNDATION_EXPORT ComItextpdfTextChunk *ComItextpdfTextChunk_createTabspaceWithFloat_(jfloat spacing);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextChunk)

#endif // _ComItextpdfTextChunk_H_

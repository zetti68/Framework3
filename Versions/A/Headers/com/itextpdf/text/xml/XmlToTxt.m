//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/XmlToTxt.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/XmlToTxt.java"

#include "IOSClass.h"
#include "com/itextpdf/text/xml/XmlToTxt.h"
#include "com/itextpdf/text/xml/simpleparser/SimpleXMLParser.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Map.h"


#line 58
@implementation ComItextpdfTextXmlXmlToTxt


#line 70
+ (NSString *)parseWithJavaIoInputStream:(JavaIoInputStream *)is {
  
#line 71
  ComItextpdfTextXmlXmlToTxt *handler = [[ComItextpdfTextXmlXmlToTxt alloc] init];
  [ComItextpdfTextXmlSimpleparserSimpleXMLParser parseWithComItextpdfTextXmlSimpleparserSimpleXMLDocHandler:handler withComItextpdfTextXmlSimpleparserSimpleXMLDocHandlerComment:nil withJavaIoReader:[[JavaIoInputStreamReader alloc] initWithJavaIoInputStream:is] withBoolean:YES];
  return [handler description];
}


#line 79
- (instancetype)init {
  if (self = [super init]) {
    
#line 80
    buf_ = [[JavaLangStringBuffer alloc] init];
  }
  return self;
}

- (NSString *)description {
  
#line 87
  return [((JavaLangStringBuffer *) nil_chk(buf_)) description];
}


#line 93
- (void)startElementWithNSString:(NSString *)tag
                 withJavaUtilMap:(id<JavaUtilMap>)h {
}


#line 99
- (void)endElementWithNSString:(NSString *)tag {
}


#line 105
- (void)startDocument {
}


#line 111
- (void)endDocument {
}


#line 117
- (void)textWithNSString:(NSString *)str {
  
#line 118
  (void) [((JavaLangStringBuffer *) nil_chk(buf_)) appendWithNSString:str];
}

- (void)copyAllFieldsTo:(ComItextpdfTextXmlXmlToTxt *)other {
  [super copyAllFieldsTo:other];
  other->buf_ = buf_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "parseWithJavaIoInputStream:", "parse", "Ljava.lang.String;", 0x9, "Ljava.io.IOException;" },
    { "init", "XmlToTxt", NULL, 0x4, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "startElementWithNSString:withJavaUtilMap:", "startElement", "V", 0x1, NULL },
    { "endElementWithNSString:", "endElement", "V", 0x1, NULL },
    { "startDocument", NULL, "V", 0x1, NULL },
    { "endDocument", NULL, "V", 0x1, NULL },
    { "textWithNSString:", "text", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "buf_", NULL, 0x4, "Ljava.lang.StringBuffer;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextXmlXmlToTxt = { "XmlToTxt", "com.itextpdf.text.xml", NULL, 0x1, 8, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextXmlXmlToTxt;
}

@end

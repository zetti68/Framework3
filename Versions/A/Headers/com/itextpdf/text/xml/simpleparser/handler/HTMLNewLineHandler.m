//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/simpleparser/handler/HTMLNewLineHandler.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/simpleparser/handler/HTMLNewLineHandler.java"

#include "com/itextpdf/text/xml/simpleparser/handler/HTMLNewLineHandler.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"


#line 59
@implementation ComItextpdfTextXmlSimpleparserHandlerHTMLNewLineHandler


#line 68
- (instancetype)init {
  if (self = [super init]) {
    newLineTags_ =
#line 61
    [[JavaUtilHashSet alloc] init];
    
#line 69
    [newLineTags_ addWithId:@"p"];
    
#line 70
    [newLineTags_ addWithId:@"blockquote"];
    
#line 71
    [newLineTags_ addWithId:@"br"];
  }
  return self;
}


#line 81
- (jboolean)isNewLineTagWithNSString:(NSString *)tag {
  
#line 82
  return [((id<JavaUtilSet>) nil_chk(newLineTags_)) containsWithId:tag];
}

- (void)copyAllFieldsTo:(ComItextpdfTextXmlSimpleparserHandlerHTMLNewLineHandler *)other {
  [super copyAllFieldsTo:other];
  other->newLineTags_ = newLineTags_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "HTMLNewLineHandler", NULL, 0x1, NULL },
    { "isNewLineTagWithNSString:", "isNewLineTag", "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "newLineTags_", NULL, 0x12, "Ljava.util.Set;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextXmlSimpleparserHandlerHTMLNewLineHandler = { "HTMLNewLineHandler", "com.itextpdf.text.xml.simpleparser.handler", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextXmlSimpleparserHandlerHTMLNewLineHandler;
}

@end

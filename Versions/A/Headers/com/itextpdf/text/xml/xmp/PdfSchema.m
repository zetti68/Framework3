//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/xmp/PdfSchema.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/xmp/PdfSchema.java"

#include "IOSClass.h"
#include "com/itextpdf/text/Version.h"
#include "com/itextpdf/text/xml/xmp/PdfSchema.h"
#include "com/itextpdf/text/xml/xmp/XmpSchema.h"
#include "java/lang/Deprecated.h"


#line 53
@implementation ComItextpdfTextXmlXmpPdfSchema

NSString * ComItextpdfTextXmlXmpPdfSchema_DEFAULT_XPATH_ID_ = 
#line 57
@"pdf";
NSString * ComItextpdfTextXmlXmpPdfSchema_DEFAULT_XPATH_URI_ = 
#line 59
@"http://ns.adobe.com/pdf/1.3/";
NSString * ComItextpdfTextXmlXmpPdfSchema_KEYWORDS_ = 
#line 62
@"pdf:Keywords";
NSString * ComItextpdfTextXmlXmpPdfSchema_VERSION_ = @"pdf:PDFVersion";
NSString * ComItextpdfTextXmlXmpPdfSchema_PRODUCER_ = 
#line 66
@"pdf:Producer";

- (instancetype)init {
  if (self =
#line 70
  [super initWithNSString:JreStrcat("$$$$C", @"xmlns:", ComItextpdfTextXmlXmpPdfSchema_DEFAULT_XPATH_ID_, @"=\"", ComItextpdfTextXmlXmpPdfSchema_DEFAULT_XPATH_URI_, '"')]) {
    
#line 71
    [self addProducerWithNSString:[((ComItextpdfTextVersion *) nil_chk([ComItextpdfTextVersion getInstance])) getVersion]];
  }
  return self;
}


#line 78
- (void)addKeywordsWithNSString:(NSString *)keywords {
  
#line 79
  (void) [self setPropertyWithNSString:ComItextpdfTextXmlXmpPdfSchema_KEYWORDS_ withNSString:keywords];
}


#line 86
- (void)addProducerWithNSString:(NSString *)producer {
  
#line 87
  (void) [self setPropertyWithNSString:ComItextpdfTextXmlXmpPdfSchema_PRODUCER_ withNSString:producer];
}


#line 94
- (void)addVersionWithNSString:(NSString *)version_ {
  
#line 95
  (void) [self setPropertyWithNSString:ComItextpdfTextXmlXmpPdfSchema_VERSION_ withNSString:version_];
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PdfSchema", NULL, 0x1, NULL },
    { "addKeywordsWithNSString:", "addKeywords", "V", 0x1, NULL },
    { "addProducerWithNSString:", "addProducer", "V", 0x1, NULL },
    { "addVersionWithNSString:", "addVersion", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = ComItextpdfTextXmlXmpPdfSchema_serialVersionUID },
    { "DEFAULT_XPATH_ID_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextXmlXmpPdfSchema_DEFAULT_XPATH_ID_,  },
    { "DEFAULT_XPATH_URI_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextXmlXmpPdfSchema_DEFAULT_XPATH_URI_,  },
    { "KEYWORDS_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextXmlXmpPdfSchema_KEYWORDS_,  },
    { "VERSION_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextXmlXmpPdfSchema_VERSION_,  },
    { "PRODUCER_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextXmlXmpPdfSchema_PRODUCER_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextXmlXmpPdfSchema = { "PdfSchema", "com.itextpdf.text.xml.xmp", NULL, 0x1, 4, methods, 6, fields, 0, NULL};
  return &_ComItextpdfTextXmlXmpPdfSchema;
}

@end

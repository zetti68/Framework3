//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/xmp/XmpSchema.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/xml/xmp/XmpSchema.java"

#include "IOSClass.h"
#include "com/itextpdf/text/xml/XMLUtil.h"
#include "com/itextpdf/text/xml/xmp/LangAlt.h"
#include "com/itextpdf/text/xml/xmp/XmpArray.h"
#include "com/itextpdf/text/xml/xmp/XmpSchema.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Enumeration.h"


#line 56
@implementation ComItextpdfTextXmlXmpXmpSchema


#line 66
- (instancetype)initWithNSString:(NSString *)xmlns {
  if (self =
#line 67
  [super init]) {
    
#line 68
    self->xmlns_ = xmlns;
  }
  return self;
}

- (NSString *)description {
  
#line 76
  JavaLangStringBuffer *buf = [[JavaLangStringBuffer alloc] init];
  for (id<JavaUtilEnumeration> e = [self propertyNames]; [((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]; ) {
    [self processWithJavaLangStringBuffer:buf withId:[e nextElement]];
  }
  return [buf description];
}

- (void)processWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                 withId:(id)p {
  
#line 88
  (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithChar:'<'];
  (void) [buf appendWithId:p];
  (void) [buf appendWithChar:'>'];
  (void) [buf appendWithId:[self getWithId:p]];
  (void) [buf appendWithNSString:@"</"];
  (void) [buf appendWithId:p];
  (void) [buf appendWithChar:'>'];
}


#line 99
- (NSString *)getXmlns {
  return xmlns_;
}


#line 108
- (id)addPropertyWithNSString:(NSString *)key
                 withNSString:(NSString *)value {
  
#line 109
  return [self setPropertyWithNSString:key withNSString:value];
}


#line 116
- (id)setPropertyWithNSString:(NSString *)key
                 withNSString:(NSString *)value {
  
#line 117
  return [super setPropertyWithNSString:key withNSString:[ComItextpdfTextXmlXMLUtil escapeXMLWithNSString:value withBoolean:NO]];
}


#line 127
- (id)setPropertyWithNSString:(NSString *)key
withComItextpdfTextXmlXmpXmpArray:(ComItextpdfTextXmlXmpXmpArray *)value {
  
#line 128
  return [super setPropertyWithNSString:key withNSString:[((ComItextpdfTextXmlXmpXmpArray *) nil_chk(value)) description]];
}


#line 138
- (id)setPropertyWithNSString:(NSString *)key
withComItextpdfTextXmlXmpLangAlt:(ComItextpdfTextXmlXmpLangAlt *)value {
  
#line 139
  return [super setPropertyWithNSString:key withNSString:[((ComItextpdfTextXmlXmpLangAlt *) nil_chk(value)) description]];
}


#line 147
+ (NSString *)escapeWithNSString:(NSString *)content {
  
#line 148
  return [ComItextpdfTextXmlXMLUtil escapeXMLWithNSString:content withBoolean:NO];
}

- (void)copyAllFieldsTo:(ComItextpdfTextXmlXmpXmpSchema *)other {
  [super copyAllFieldsTo:other];
  other->xmlns_ = xmlns_;
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "XmpSchema", NULL, 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "processWithJavaLangStringBuffer:withId:", "process", "V", 0x4, NULL },
    { "getXmlns", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "addPropertyWithNSString:withNSString:", "addProperty", "Ljava.lang.Object;", 0x1, NULL },
    { "setPropertyWithNSString:withNSString:", "setProperty", "Ljava.lang.Object;", 0x1, NULL },
    { "setPropertyWithNSString:withComItextpdfTextXmlXmpXmpArray:", "setProperty", "Ljava.lang.Object;", 0x1, NULL },
    { "setPropertyWithNSString:withComItextpdfTextXmlXmpLangAlt:", "setProperty", "Ljava.lang.Object;", 0x1, NULL },
    { "escapeWithNSString:", "escape", "Ljava.lang.String;", 0x9, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = ComItextpdfTextXmlXmpXmpSchema_serialVersionUID },
    { "xmlns_", NULL, 0x4, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextXmlXmpXmpSchema = { "XmpSchema", "com.itextpdf.text.xml.xmp", NULL, 0x401, 9, methods, 2, fields, 0, NULL};
  return &_ComItextpdfTextXmlXmpXmpSchema;
}

@end

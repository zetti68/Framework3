//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/io/ArrayRandomAccessSource.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/io/ArrayRandomAccessSource.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/io/ArrayRandomAccessSource.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/System.h"


#line 51
@implementation ComItextpdfTextIoArrayRandomAccessSource


#line 54
- (instancetype)initWithByteArray:(IOSByteArray *)array {
  if (self = [super init]) {
    
#line 55
    if (array == nil) @throw [[JavaLangNullPointerException alloc] init];
    
#line 56
    self->array_ = array;
  }
  return self;
}


#line 59
- (jint)getWithLong:(jlong)offset {
  
#line 60
  if (offset >= ((IOSByteArray *) nil_chk(array_))->size_) return -1;
  return (jint) 0xff & IOSByteArray_Get(array_, (jint) offset);
}


#line 64
- (jint)getWithLong:(jlong)offset
      withByteArray:(IOSByteArray *)bytes
            withInt:(jint)off
            withInt:(jint)len {
  
#line 65
  if (array_ == nil) @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"Already closed"];
  
#line 67
  if (offset >= ((IOSByteArray *) nil_chk(array_))->size_)
#line 68
  return -1;
  
#line 70
  if (offset + len > array_->size_)
#line 71
  len = (jint) (array_->size_ - offset);
  
#line 73
  [JavaLangSystem arraycopyWithId:array_ withInt:(jint) offset withId:bytes withInt:off withInt:len];
  
#line 75
  return len;
}


#line 79
- (jlong)length {
  
#line 80
  return ((IOSByteArray *) nil_chk(array_))->size_;
}


#line 83
- (void)close {
  
#line 84
  array_ = nil;
}

- (void)copyAllFieldsTo:(ComItextpdfTextIoArrayRandomAccessSource *)other {
  [super copyAllFieldsTo:other];
  other->array_ = array_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithByteArray:", "ArrayRandomAccessSource", NULL, 0x1, NULL },
    { "getWithLong:", "get", "I", 0x1, NULL },
    { "getWithLong:withByteArray:withInt:withInt:", "get", "I", 0x1, NULL },
    { "length", NULL, "J", 0x1, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x2, "[B", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextIoArrayRandomAccessSource = { "ArrayRandomAccessSource", "com.itextpdf.text.io", NULL, 0x0, 5, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextIoArrayRandomAccessSource;
}

@end

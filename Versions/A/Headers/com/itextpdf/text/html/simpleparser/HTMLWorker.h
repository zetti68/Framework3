//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/html/simpleparser/HTMLWorker.java
//

#ifndef _ComItextpdfTextHtmlSimpleparserHTMLWorker_H_
#define _ComItextpdfTextHtmlSimpleparserHTMLWorker_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/DocListener.h"
#include "com/itextpdf/text/xml/simpleparser/SimpleXMLDocHandler.h"

@class ComItextpdfTextChunk;
@class ComItextpdfTextHtmlSimpleparserCellWrapper;
@class ComItextpdfTextHtmlSimpleparserStyleSheet;
@class ComItextpdfTextImage;
@class ComItextpdfTextList;
@class ComItextpdfTextListItem;
@class ComItextpdfTextParagraph;
@class ComItextpdfTextPdfDrawLineSeparator;
@class ComItextpdfTextRectangle;
@class JavaIoReader;
@class JavaUtilHashMap;
@class JavaUtilStack;
@protocol ComItextpdfTextElement;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface ComItextpdfTextHtmlSimpleparserHTMLWorker : NSObject < ComItextpdfTextXmlSimpleparserSimpleXMLDocHandler, ComItextpdfTextDocListener > {
 @public
  id<ComItextpdfTextDocListener> document_;
  id<JavaUtilMap> tags_;
  JavaUtilStack *stack_;
  ComItextpdfTextParagraph *currentParagraph_;
  jboolean skipText_;
  id<JavaUtilList> objectList_;
}

#pragma mark Public

- (instancetype)initWithComItextpdfTextDocListener:(id<ComItextpdfTextDocListener>)document;

- (instancetype)initWithComItextpdfTextDocListener:(id<ComItextpdfTextDocListener>)document
                                   withJavaUtilMap:(id<JavaUtilMap>)tags
     withComItextpdfTextHtmlSimpleparserStyleSheet:(ComItextpdfTextHtmlSimpleparserStyleSheet *)style;

- (jboolean)addWithComItextpdfTextElement:(id<ComItextpdfTextElement>)element;

- (void)carriageReturn;

- (void)close;

- (ComItextpdfTextHtmlSimpleparserCellWrapper *)createCellWithNSString:(NSString *)tag;

- (ComItextpdfTextChunk *)createChunkWithNSString:(NSString *)content;

- (ComItextpdfTextImage *)createImageWithJavaUtilMap:(id<JavaUtilMap>)attrs;

- (ComItextpdfTextPdfDrawLineSeparator *)createLineSeparatorWithJavaUtilMap:(id<JavaUtilMap>)attrs;

- (ComItextpdfTextList *)createListWithNSString:(NSString *)tag;

- (ComItextpdfTextListItem *)createListItem;

- (ComItextpdfTextParagraph *)createParagraph;

- (void)endDocument;

- (void)endElementWithNSString:(NSString *)tag;

- (void)flushContent;

- (id<JavaUtilMap>)getInterfaceProps;

- (jboolean)isInsidePRE;

- (jboolean)isPendingLI;

- (jboolean)isPendingTD;

- (jboolean)isPendingTR;

- (jboolean)isSkipText;

- (void)newLine OBJC_METHOD_FAMILY_NONE;

- (jboolean)newPage OBJC_METHOD_FAMILY_NONE;

- (void)open;

- (void)parseWithJavaIoReader:(JavaIoReader *)reader;

+ (id<JavaUtilList>)parseToListWithJavaIoReader:(JavaIoReader *)reader
  withComItextpdfTextHtmlSimpleparserStyleSheet:(ComItextpdfTextHtmlSimpleparserStyleSheet *)style;

+ (id<JavaUtilList>)parseToListWithJavaIoReader:(JavaIoReader *)reader
  withComItextpdfTextHtmlSimpleparserStyleSheet:(ComItextpdfTextHtmlSimpleparserStyleSheet *)style
                            withJavaUtilHashMap:(JavaUtilHashMap *)providers;

+ (id<JavaUtilList>)parseToListWithJavaIoReader:(JavaIoReader *)reader
  withComItextpdfTextHtmlSimpleparserStyleSheet:(ComItextpdfTextHtmlSimpleparserStyleSheet *)style
                                withJavaUtilMap:(id<JavaUtilMap>)tags
                            withJavaUtilHashMap:(JavaUtilHashMap *)providers;

- (void)popTableState;

- (void)processImageWithComItextpdfTextImage:(ComItextpdfTextImage *)img
                             withJavaUtilMap:(id<JavaUtilMap>)attrs;

- (void)processLink;

- (void)processList;

- (void)processListItem;

- (void)processRow;

- (void)processTable;

- (void)pushTableState;

- (void)pushToStackWithComItextpdfTextElement:(id<ComItextpdfTextElement>)element;

- (void)resetPageCount;

- (void)setInsidePREWithBoolean:(jboolean)insidePRE;

- (void)setInterfacePropsWithJavaUtilHashMap:(JavaUtilHashMap *)providers;

- (jboolean)setMarginMirroringWithBoolean:(jboolean)marginMirroring;

- (jboolean)setMarginMirroringTopBottomWithBoolean:(jboolean)marginMirroring;

- (jboolean)setMarginsWithFloat:(jfloat)marginLeft
                      withFloat:(jfloat)marginRight
                      withFloat:(jfloat)marginTop
                      withFloat:(jfloat)marginBottom;

- (void)setPageCountWithInt:(jint)pageN;

- (jboolean)setPageSizeWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)pageSize;

- (void)setPendingLIWithBoolean:(jboolean)pendingLI;

- (void)setPendingTDWithBoolean:(jboolean)pendingTD;

- (void)setPendingTRWithBoolean:(jboolean)pendingTR;

- (void)setProvidersWithJavaUtilMap:(id<JavaUtilMap>)providers;

- (void)setSkipTextWithBoolean:(jboolean)skipText;

- (void)setStyleSheetWithComItextpdfTextHtmlSimpleparserStyleSheet:(ComItextpdfTextHtmlSimpleparserStyleSheet *)style;

- (void)setSupportedTagsWithJavaUtilMap:(id<JavaUtilMap>)tags;

- (void)startDocument;

- (void)startElementWithNSString:(NSString *)tag
                 withJavaUtilMap:(id<JavaUtilMap>)attrs;

- (void)textWithNSString:(NSString *)content;

- (void)updateChainWithNSString:(NSString *)tag;

- (void)updateChainWithNSString:(NSString *)tag
                withJavaUtilMap:(id<JavaUtilMap>)attrs;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextHtmlSimpleparserHTMLWorker)

J2OBJC_FIELD_SETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, document_, id<ComItextpdfTextDocListener>)
J2OBJC_FIELD_SETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, tags_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, stack_, JavaUtilStack *)
J2OBJC_FIELD_SETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, currentParagraph_, ComItextpdfTextParagraph *)
J2OBJC_FIELD_SETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, objectList_, id<JavaUtilList>)

FOUNDATION_EXPORT NSString *ComItextpdfTextHtmlSimpleparserHTMLWorker_IMG_PROVIDER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, IMG_PROVIDER_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextHtmlSimpleparserHTMLWorker_IMG_PROCESSOR_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, IMG_PROCESSOR_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextHtmlSimpleparserHTMLWorker_IMG_STORE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, IMG_STORE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextHtmlSimpleparserHTMLWorker_IMG_BASEURL_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, IMG_BASEURL_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextHtmlSimpleparserHTMLWorker_FONT_PROVIDER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, FONT_PROVIDER_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextHtmlSimpleparserHTMLWorker_LINK_PROVIDER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextHtmlSimpleparserHTMLWorker, LINK_PROVIDER_, NSString *)

FOUNDATION_EXPORT void ComItextpdfTextHtmlSimpleparserHTMLWorker_initWithComItextpdfTextDocListener_(ComItextpdfTextHtmlSimpleparserHTMLWorker *self, id<ComItextpdfTextDocListener> document);

FOUNDATION_EXPORT ComItextpdfTextHtmlSimpleparserHTMLWorker *new_ComItextpdfTextHtmlSimpleparserHTMLWorker_initWithComItextpdfTextDocListener_(id<ComItextpdfTextDocListener> document) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextHtmlSimpleparserHTMLWorker_initWithComItextpdfTextDocListener_withJavaUtilMap_withComItextpdfTextHtmlSimpleparserStyleSheet_(ComItextpdfTextHtmlSimpleparserHTMLWorker *self, id<ComItextpdfTextDocListener> document, id<JavaUtilMap> tags, ComItextpdfTextHtmlSimpleparserStyleSheet *style);

FOUNDATION_EXPORT ComItextpdfTextHtmlSimpleparserHTMLWorker *new_ComItextpdfTextHtmlSimpleparserHTMLWorker_initWithComItextpdfTextDocListener_withJavaUtilMap_withComItextpdfTextHtmlSimpleparserStyleSheet_(id<ComItextpdfTextDocListener> document, id<JavaUtilMap> tags, ComItextpdfTextHtmlSimpleparserStyleSheet *style) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<JavaUtilList> ComItextpdfTextHtmlSimpleparserHTMLWorker_parseToListWithJavaIoReader_withComItextpdfTextHtmlSimpleparserStyleSheet_(JavaIoReader *reader, ComItextpdfTextHtmlSimpleparserStyleSheet *style);

FOUNDATION_EXPORT id<JavaUtilList> ComItextpdfTextHtmlSimpleparserHTMLWorker_parseToListWithJavaIoReader_withComItextpdfTextHtmlSimpleparserStyleSheet_withJavaUtilHashMap_(JavaIoReader *reader, ComItextpdfTextHtmlSimpleparserStyleSheet *style, JavaUtilHashMap *providers);

FOUNDATION_EXPORT id<JavaUtilList> ComItextpdfTextHtmlSimpleparserHTMLWorker_parseToListWithJavaIoReader_withComItextpdfTextHtmlSimpleparserStyleSheet_withJavaUtilMap_withJavaUtilHashMap_(JavaIoReader *reader, ComItextpdfTextHtmlSimpleparserStyleSheet *style, id<JavaUtilMap> tags, JavaUtilHashMap *providers);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextHtmlSimpleparserHTMLWorker)

#endif // _ComItextpdfTextHtmlSimpleparserHTMLWorker_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/html/simpleparser/ElementFactory.java
//

#ifndef _ComItextpdfTextHtmlSimpleparserElementFactory_H_
#define _ComItextpdfTextHtmlSimpleparserElementFactory_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextChunk;
@class ComItextpdfTextFont;
@class ComItextpdfTextHtmlSimpleparserChainedProperties;
@class ComItextpdfTextImage;
@class ComItextpdfTextList;
@class ComItextpdfTextListItem;
@class ComItextpdfTextParagraph;
@class ComItextpdfTextPdfDrawLineSeparator;
@class JavaUtilHashMap;
@protocol ComItextpdfTextDocListener;
@protocol ComItextpdfTextFontProvider;
@protocol ComItextpdfTextHtmlSimpleparserImageProvider;
@protocol ComItextpdfTextPdfHyphenationEvent;
@protocol JavaUtilMap;

@interface ComItextpdfTextHtmlSimpleparserElementFactory : NSObject

#pragma mark Public

- (instancetype)init;

- (ComItextpdfTextChunk *)createChunkWithNSString:(NSString *)content
withComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain;

- (ComItextpdfTextImage *)createImageWithNSString:(NSString *)src
                                  withJavaUtilMap:(id<JavaUtilMap>)attrs
withComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain
                   withComItextpdfTextDocListener:(id<ComItextpdfTextDocListener>)document
 withComItextpdfTextHtmlSimpleparserImageProvider:(id<ComItextpdfTextHtmlSimpleparserImageProvider>)img_provider
                              withJavaUtilHashMap:(JavaUtilHashMap *)img_store
                                     withNSString:(NSString *)img_baseurl;

- (ComItextpdfTextPdfDrawLineSeparator *)createLineSeparatorWithJavaUtilMap:(id<JavaUtilMap>)attrs
                                                                  withFloat:(jfloat)offset;

- (ComItextpdfTextList *)createListWithNSString:(NSString *)tag
withComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain;

- (ComItextpdfTextListItem *)createListItemWithComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain;

- (ComItextpdfTextParagraph *)createParagraphWithComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain;

- (ComItextpdfTextFont *)getFontWithComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain;

- (id<ComItextpdfTextFontProvider>)getFontProvider;

- (id<ComItextpdfTextPdfHyphenationEvent>)getHyphenationWithComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain;

- (void)setFontProviderWithComItextpdfTextFontProvider:(id<ComItextpdfTextFontProvider>)provider;

#pragma mark Protected

+ (void)setParagraphLeadingWithComItextpdfTextParagraph:(ComItextpdfTextParagraph *)paragraph
                                           withNSString:(NSString *)leading;

- (void)updateElementWithComItextpdfTextParagraph:(ComItextpdfTextParagraph *)paragraph
withComItextpdfTextHtmlSimpleparserChainedProperties:(ComItextpdfTextHtmlSimpleparserChainedProperties *)chain;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextHtmlSimpleparserElementFactory)

FOUNDATION_EXPORT void ComItextpdfTextHtmlSimpleparserElementFactory_init(ComItextpdfTextHtmlSimpleparserElementFactory *self);

FOUNDATION_EXPORT ComItextpdfTextHtmlSimpleparserElementFactory *new_ComItextpdfTextHtmlSimpleparserElementFactory_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextHtmlSimpleparserElementFactory_setParagraphLeadingWithComItextpdfTextParagraph_withNSString_(ComItextpdfTextParagraph *paragraph, NSString *leading);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextHtmlSimpleparserElementFactory)

#endif // _ComItextpdfTextHtmlSimpleparserElementFactory_H_

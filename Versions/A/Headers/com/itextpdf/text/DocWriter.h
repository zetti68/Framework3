//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/DocWriter.java
//

#ifndef _ComItextpdfTextDocWriter_H_
#define _ComItextpdfTextDocWriter_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/DocListener.h"

@class ComItextpdfTextDocument;
@class ComItextpdfTextPdfOutputStreamCounter;
@class ComItextpdfTextRectangle;
@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaUtilProperties;
@protocol ComItextpdfTextElement;

#define ComItextpdfTextDocWriter_NEWLINE 10
#define ComItextpdfTextDocWriter_TAB 9
#define ComItextpdfTextDocWriter_LT 60
#define ComItextpdfTextDocWriter_SPACE 32
#define ComItextpdfTextDocWriter_EQUALS 61
#define ComItextpdfTextDocWriter_QUOTE 34
#define ComItextpdfTextDocWriter_GT 62
#define ComItextpdfTextDocWriter_FORWARD 47

@interface ComItextpdfTextDocWriter : NSObject < ComItextpdfTextDocListener > {
 @public
  ComItextpdfTextRectangle *pageSize_;
  ComItextpdfTextDocument *document_;
  ComItextpdfTextPdfOutputStreamCounter *os_;
  jboolean open__;
  jboolean pause__;
  jboolean closeStream_;
}

#pragma mark Public

- (jboolean)addWithComItextpdfTextElement:(id<ComItextpdfTextElement>)element;

- (void)close;

- (void)flush;

+ (IOSByteArray *)getISOBytesWithNSString:(NSString *)text;

- (jboolean)isCloseStream;

- (jboolean)isPaused;

- (jboolean)newPage OBJC_METHOD_FAMILY_NONE;

- (void)open;

- (void)pause;

- (void)resetPageCount;

- (void)resume;

- (void)setCloseStreamWithBoolean:(jboolean)closeStream;

- (jboolean)setMarginMirroringWithBoolean:(jboolean)MarginMirroring;

- (jboolean)setMarginMirroringTopBottomWithBoolean:(jboolean)MarginMirroring;

- (jboolean)setMarginsWithFloat:(jfloat)marginLeft
                      withFloat:(jfloat)marginRight
                      withFloat:(jfloat)marginTop
                      withFloat:(jfloat)marginBottom;

- (void)setPageCountWithInt:(jint)pageN;

- (jboolean)setPageSizeWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)pageSize;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithComItextpdfTextDocument:(ComItextpdfTextDocument *)document
                         withJavaIoOutputStream:(JavaIoOutputStream *)os;

- (void)addTabsWithInt:(jint)indent;

- (void)writeWithNSString:(NSString *)string;

- (void)writeWithNSString:(NSString *)key
             withNSString:(NSString *)value;

- (void)writeEnd;

- (void)writeEndWithNSString:(NSString *)tag;

- (jboolean)writeMarkupAttributesWithJavaUtilProperties:(JavaUtilProperties *)markup;

- (void)writeStartWithNSString:(NSString *)tag;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextDocWriter)

J2OBJC_FIELD_SETTER(ComItextpdfTextDocWriter, pageSize_, ComItextpdfTextRectangle *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocWriter, document_, ComItextpdfTextDocument *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocWriter, os_, ComItextpdfTextPdfOutputStreamCounter *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, NEWLINE, jbyte)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, TAB, jbyte)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, LT, jbyte)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, SPACE, jbyte)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, EQUALS, jbyte)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, QUOTE, jbyte)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, GT, jbyte)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocWriter, FORWARD, jbyte)

FOUNDATION_EXPORT void ComItextpdfTextDocWriter_init(ComItextpdfTextDocWriter *self);

FOUNDATION_EXPORT void ComItextpdfTextDocWriter_initWithComItextpdfTextDocument_withJavaIoOutputStream_(ComItextpdfTextDocWriter *self, ComItextpdfTextDocument *document, JavaIoOutputStream *os);

FOUNDATION_EXPORT IOSByteArray *ComItextpdfTextDocWriter_getISOBytesWithNSString_(NSString *text);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextDocWriter)

#endif // _ComItextpdfTextDocWriter_H_

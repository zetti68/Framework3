//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/Paragraph.java
//

#ifndef _ComItextpdfTextParagraph_H_
#define _ComItextpdfTextParagraph_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/Phrase.h"
#include "com/itextpdf/text/api/Indentable.h"
#include "com/itextpdf/text/api/Spaceable.h"
#include "com/itextpdf/text/pdf/interfaces/IAccessibleElement.h"

@class ComItextpdfTextAccessibleElementId;
@class ComItextpdfTextChunk;
@class ComItextpdfTextFont;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class JavaUtilHashMap;
@protocol ComItextpdfTextElement;
@protocol JavaUtilList;

@interface ComItextpdfTextParagraph : ComItextpdfTextPhrase < ComItextpdfTextApiIndentable, ComItextpdfTextApiSpaceable, ComItextpdfTextPdfInterfacesIAccessibleElement > {
 @public
  jint alignment_;
  jfloat indentationLeft_;
  jfloat indentationRight_;
  jfloat spacingBefore__;
  jfloat spacingAfter__;
  jboolean keeptogether_;
  ComItextpdfTextPdfPdfName *role_;
  JavaUtilHashMap *accessibleAttributes_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk;

- (instancetype)initWithFloat:(jfloat)leading;

- (instancetype)initWithFloat:(jfloat)leading
     withComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk;

- (instancetype)initWithFloat:(jfloat)leading
                 withNSString:(NSString *)string;

- (instancetype)initWithFloat:(jfloat)leading
                 withNSString:(NSString *)string
      withComItextpdfTextFont:(ComItextpdfTextFont *)font;

- (instancetype)initWithComItextpdfTextPhrase:(ComItextpdfTextPhrase *)phrase;

- (instancetype)initWithNSString:(NSString *)string;

- (instancetype)initWithNSString:(NSString *)string
         withComItextpdfTextFont:(ComItextpdfTextFont *)font;

- (jboolean)addWithComItextpdfTextElement:(id<ComItextpdfTextElement>)o;

- (jboolean)addWithId:(id<ComItextpdfTextElement>)o;

- (id<JavaUtilList>)breakUp;

- (ComItextpdfTextParagraph *)cloneShallowWithBoolean:(jboolean)spacingBefore;

- (ComItextpdfTextPdfPdfObject *)getAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key;

- (JavaUtilHashMap *)getAccessibleAttributes;

- (jint)getAlignment;

- (jfloat)getExtraParagraphSpace;

- (jfloat)getFirstLineIndent;

- (ComItextpdfTextAccessibleElementId *)getId;

- (jfloat)getIndentationLeft;

- (jfloat)getIndentationRight;

- (jboolean)getKeepTogether;

- (ComItextpdfTextPdfPdfName *)getRole;

- (jfloat)getSpacingAfter;

- (jfloat)getSpacingBefore;

- (jboolean)isInline;

- (void)setAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                            withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (void)setAlignmentWithInt:(jint)alignment;

- (void)setExtraParagraphSpaceWithFloat:(jfloat)extraParagraphSpace;

- (void)setFirstLineIndentWithFloat:(jfloat)firstLineIndent;

- (void)setIdWithComItextpdfTextAccessibleElementId:(ComItextpdfTextAccessibleElementId *)id_;

- (void)setIndentationLeftWithFloat:(jfloat)indentation;

- (void)setIndentationRightWithFloat:(jfloat)indentation;

- (void)setKeepTogetherWithBoolean:(jboolean)keeptogether;

- (void)setRoleWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)role;

- (void)setSpacingAfterWithFloat:(jfloat)spacing;

- (void)setSpacingBeforeWithFloat:(jfloat)spacing;

- (jfloat)spacingAfter;

- (jfloat)spacingBefore;

- (jint)type;

#pragma mark Package-Private


@end

J2OBJC_STATIC_INIT(ComItextpdfTextParagraph)

J2OBJC_FIELD_SETTER(ComItextpdfTextParagraph, role_, ComItextpdfTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComItextpdfTextParagraph, accessibleAttributes_, JavaUtilHashMap *)

FOUNDATION_EXPORT void ComItextpdfTextParagraph_init(ComItextpdfTextParagraph *self);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithFloat_(ComItextpdfTextParagraph *self, jfloat leading);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithFloat_(jfloat leading) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithComItextpdfTextChunk_(ComItextpdfTextParagraph *self, ComItextpdfTextChunk *chunk);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithComItextpdfTextChunk_(ComItextpdfTextChunk *chunk) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithFloat_withComItextpdfTextChunk_(ComItextpdfTextParagraph *self, jfloat leading, ComItextpdfTextChunk *chunk);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithFloat_withComItextpdfTextChunk_(jfloat leading, ComItextpdfTextChunk *chunk) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithNSString_(ComItextpdfTextParagraph *self, NSString *string);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithNSString_withComItextpdfTextFont_(ComItextpdfTextParagraph *self, NSString *string, ComItextpdfTextFont *font);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithNSString_withComItextpdfTextFont_(NSString *string, ComItextpdfTextFont *font) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithFloat_withNSString_(ComItextpdfTextParagraph *self, jfloat leading, NSString *string);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithFloat_withNSString_(jfloat leading, NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithFloat_withNSString_withComItextpdfTextFont_(ComItextpdfTextParagraph *self, jfloat leading, NSString *string, ComItextpdfTextFont *font);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithFloat_withNSString_withComItextpdfTextFont_(jfloat leading, NSString *string, ComItextpdfTextFont *font) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextParagraph_initWithComItextpdfTextPhrase_(ComItextpdfTextParagraph *self, ComItextpdfTextPhrase *phrase);

FOUNDATION_EXPORT ComItextpdfTextParagraph *new_ComItextpdfTextParagraph_initWithComItextpdfTextPhrase_(ComItextpdfTextPhrase *phrase) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextParagraph)

#endif // _ComItextpdfTextParagraph_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/MarkedSection.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/MarkedSection.java"

#include "IOSClass.h"
#include "com/itextpdf/text/DocumentException.h"
#include "com/itextpdf/text/Element.h"
#include "com/itextpdf/text/ElementListener.h"
#include "com/itextpdf/text/MarkedObject.h"
#include "com/itextpdf/text/MarkedSection.h"
#include "com/itextpdf/text/Paragraph.h"
#include "com/itextpdf/text/Section.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Properties.h"


#line 60
@implementation ComItextpdfTextMarkedSection


#line 69
- (instancetype)initWithComItextpdfTextSection:(ComItextpdfTextSection *)section {
  if (self =
#line 70
  [super init]) {
    title_ =
#line 63
    nil;
    
#line 71
    if (((ComItextpdfTextSection *) nil_chk(section))->title_ != nil) {
      title_ = [[ComItextpdfTextMarkedObject alloc] initWithComItextpdfTextElement:section->title_];
      [section setTitleWithComItextpdfTextParagraph:nil];
    }
    
#line 75
    self->element_ = section;
  }
  return self;
}


#line 87
- (void)addWithInt:(jint)index
withComItextpdfTextElement:(id<ComItextpdfTextElement>)o {
  
#line 88
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) addWithInt:index withId:o];
}


#line 100
- (jboolean)addWithComItextpdfTextElement:(id<ComItextpdfTextElement>)o {
  
#line 101
  return [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) addWithId:o];
}


#line 112
- (jboolean)processWithComItextpdfTextElementListener:(id<ComItextpdfTextElementListener>)listener {
  
#line 113
  @try {
    id<ComItextpdfTextElement> element;
    for (id<JavaUtilIterator> i = [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(self->element_, [ComItextpdfTextSection class])))) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
      element = [i next];
      [((id<ComItextpdfTextElementListener>) nil_chk(listener)) addWithComItextpdfTextElement:element];
    }
    return YES;
  }
  @catch (ComItextpdfTextDocumentException *de) {
    return NO;
  }
}


#line 134
- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  
#line 135
  return [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) addAllWithJavaUtilCollection:collection];
}


#line 145
- (ComItextpdfTextMarkedSection *)addSectionWithFloat:(jfloat)indentation
                                              withInt:(jint)numberDepth {
  
#line 146
  ComItextpdfTextMarkedSection *section = [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) addMarkedSection];
  [((ComItextpdfTextMarkedSection *) nil_chk(section)) setIndentationWithFloat:indentation];
  [section setNumberDepthWithInt:numberDepth];
  return section;
}


#line 158
- (ComItextpdfTextMarkedSection *)addSectionWithFloat:(jfloat)indentation {
  
#line 159
  ComItextpdfTextMarkedSection *section = [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) addMarkedSection];
  [((ComItextpdfTextMarkedSection *) nil_chk(section)) setIndentationWithFloat:indentation];
  return section;
}


#line 170
- (ComItextpdfTextMarkedSection *)addSectionWithInt:(jint)numberDepth {
  
#line 171
  ComItextpdfTextMarkedSection *section = [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) addMarkedSection];
  [((ComItextpdfTextMarkedSection *) nil_chk(section)) setNumberDepthWithInt:numberDepth];
  return section;
}


#line 181
- (ComItextpdfTextMarkedSection *)addSection {
  
#line 182
  return [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) addMarkedSection];
}


#line 192
- (void)setTitleWithComItextpdfTextMarkedObject:(ComItextpdfTextMarkedObject *)title {
  
#line 193
  if ([(id) ((ComItextpdfTextMarkedObject *) nil_chk(title))->element_ isKindOfClass:[ComItextpdfTextParagraph class]])
#line 194
  self->title_ = title;
}


#line 202
- (ComItextpdfTextMarkedObject *)getTitle {
  
#line 203
  ComItextpdfTextParagraph *result = [ComItextpdfTextSection constructTitleWithComItextpdfTextParagraph:(ComItextpdfTextParagraph *) check_class_cast(((ComItextpdfTextMarkedObject *) nil_chk(title_))->element_, [ComItextpdfTextParagraph class]) withJavaUtilArrayList:((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class]))))->numbers_ withInt:((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class]))))->numberDepth_ withInt:((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class]))))->numberStyle_];
  ComItextpdfTextMarkedObject *mo = [[ComItextpdfTextMarkedObject alloc] initWithComItextpdfTextElement:result];
  mo->markupAttributes_ = title_->markupAttributes_;
  return mo;
}


#line 218
- (void)setNumberDepthWithInt:(jint)numberDepth {
  
#line 219
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) setNumberDepthWithInt:numberDepth];
}


#line 227
- (void)setIndentationLeftWithFloat:(jfloat)indentation {
  
#line 228
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) setIndentationLeftWithFloat:indentation];
}


#line 236
- (void)setIndentationRightWithFloat:(jfloat)indentation {
  
#line 237
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) setIndentationRightWithFloat:indentation];
}


#line 245
- (void)setIndentationWithFloat:(jfloat)indentation {
  
#line 246
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) setIndentationWithFloat:indentation];
}


#line 253
- (void)setBookmarkOpenWithBoolean:(jboolean)bookmarkOpen {
  
#line 254
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) setBookmarkOpenWithBoolean:bookmarkOpen];
}


#line 261
- (void)setTriggerNewPageWithBoolean:(jboolean)triggerNewPage {
  
#line 262
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) setTriggerNewPageWithBoolean:triggerNewPage];
}


#line 270
- (void)setBookmarkTitleWithNSString:(NSString *)bookmarkTitle {
  
#line 271
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) setBookmarkTitleWithNSString:bookmarkTitle];
}


#line 278
- (void)newPage {
  
#line 279
  [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) newPage];
}


#line 285
- (jfloat)getIndentationLeft {
  
#line 286
  return [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) getIndentationLeft];
}


#line 292
- (jfloat)getIndentationRight {
  
#line 293
  return [((ComItextpdfTextSection *) nil_chk(((ComItextpdfTextSection *) check_class_cast(element_, [ComItextpdfTextSection class])))) getIndentationRight];
}

- (void)copyAllFieldsTo:(ComItextpdfTextMarkedSection *)other {
  [super copyAllFieldsTo:other];
  other->title_ = title_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextSection:", "MarkedSection", NULL, 0x1, NULL },
    { "addWithInt:withComItextpdfTextElement:", "add", "V", 0x1, NULL },
    { "addWithComItextpdfTextElement:", "add", "Z", 0x1, NULL },
    { "processWithComItextpdfTextElementListener:", "process", "Z", 0x1, NULL },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL },
    { "addSectionWithFloat:withInt:", "addSection", "Lcom.itextpdf.text.MarkedSection;", 0x1, NULL },
    { "addSectionWithFloat:", "addSection", "Lcom.itextpdf.text.MarkedSection;", 0x1, NULL },
    { "addSectionWithInt:", "addSection", "Lcom.itextpdf.text.MarkedSection;", 0x1, NULL },
    { "addSection", NULL, "Lcom.itextpdf.text.MarkedSection;", 0x1, NULL },
    { "setTitleWithComItextpdfTextMarkedObject:", "setTitle", "V", 0x1, NULL },
    { "getTitle", NULL, "Lcom.itextpdf.text.MarkedObject;", 0x1, NULL },
    { "setNumberDepthWithInt:", "setNumberDepth", "V", 0x1, NULL },
    { "setIndentationLeftWithFloat:", "setIndentationLeft", "V", 0x1, NULL },
    { "setIndentationRightWithFloat:", "setIndentationRight", "V", 0x1, NULL },
    { "setIndentationWithFloat:", "setIndentation", "V", 0x1, NULL },
    { "setBookmarkOpenWithBoolean:", "setBookmarkOpen", "V", 0x1, NULL },
    { "setTriggerNewPageWithBoolean:", "setTriggerNewPage", "V", 0x1, NULL },
    { "setBookmarkTitleWithNSString:", "setBookmarkTitle", "V", 0x1, NULL },
    { "newPage", NULL, "V", 0x1, NULL },
    { "getIndentationLeft", NULL, "F", 0x1, NULL },
    { "getIndentationRight", NULL, "F", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "title_", NULL, 0x4, "Lcom.itextpdf.text.MarkedObject;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextMarkedSection = { "MarkedSection", "com.itextpdf.text", NULL, 0x1, 21, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextMarkedSection;
}

@end

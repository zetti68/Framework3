//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/TabSettings.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/TabSettings.java"

#include "com/itextpdf/text/TabSettings.h"
#include "com/itextpdf/text/TabStop.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"


#line 50
@implementation ComItextpdfTextTabSettings


#line 53
+ (ComItextpdfTextTabStop *)getTabStopNewInstanceWithFloat:(jfloat)currentPosition
                            withComItextpdfTextTabSettings:(ComItextpdfTextTabSettings *)tabSettings {
  
#line 54
  if (tabSettings != nil)
#line 55
  return [tabSettings getTabStopNewInstanceWithFloat:currentPosition];
  return [ComItextpdfTextTabStop newInstanceWithFloat:currentPosition withFloat:ComItextpdfTextTabSettings_DEFAULT_TAB_INTERVAL];
}


#line 62
- (instancetype)init {
  if (self = [super init]) {
    tabStops_ =
#line 59
    [[JavaUtilArrayList alloc] init];
    tabInterval_ =
#line 60
    ComItextpdfTextTabSettings_DEFAULT_TAB_INTERVAL;
  }
  return self;
}


#line 64
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)tabStops {
  if (self = [super init]) {
    tabStops_ =
#line 59
    [[JavaUtilArrayList alloc] init];
    tabInterval_ =
#line 60
    ComItextpdfTextTabSettings_DEFAULT_TAB_INTERVAL;
    
#line 65
    self->tabStops_ = tabStops;
  }
  return self;
}


#line 68
- (instancetype)initWithFloat:(jfloat)tabInterval {
  if (self = [super init]) {
    tabStops_ =
#line 59
    [[JavaUtilArrayList alloc] init];
    tabInterval_ =
#line 60
    ComItextpdfTextTabSettings_DEFAULT_TAB_INTERVAL;
    
#line 69
    self->tabInterval_ = tabInterval;
  }
  return self;
}


#line 72
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)tabStops
                           withFloat:(jfloat)tabInterval {
  if (self = [super init]) {
    tabStops_ =
#line 59
    [[JavaUtilArrayList alloc] init];
    tabInterval_ =
#line 60
    ComItextpdfTextTabSettings_DEFAULT_TAB_INTERVAL;
    
#line 73
    self->tabStops_ = tabStops;
    
#line 74
    self->tabInterval_ = tabInterval;
  }
  return self;
}


#line 77
- (id<JavaUtilList>)getTabStops {
  
#line 78
  return tabStops_;
}


#line 81
- (void)setTabStopsWithJavaUtilList:(id<JavaUtilList>)tabStops {
  
#line 82
  self->tabStops_ = tabStops;
}


#line 85
- (jfloat)getTabInterval {
  
#line 86
  return tabInterval_;
}


#line 89
- (void)setTabIntervalWithFloat:(jfloat)tabInterval {
  
#line 90
  self->tabInterval_ = tabInterval;
}


#line 93
- (ComItextpdfTextTabStop *)getTabStopNewInstanceWithFloat:(jfloat)currentPosition {
  
#line 94
  ComItextpdfTextTabStop *tabStop = nil;
  if (tabStops_ != nil) {
    for (ComItextpdfTextTabStop * __strong currentTabStop in tabStops_) {
      if ([((ComItextpdfTextTabStop *) nil_chk(currentTabStop)) getPosition] - currentPosition > 0.001) {
        tabStop = [[ComItextpdfTextTabStop alloc] initWithComItextpdfTextTabStop:currentTabStop];
        break;
      }
    }
  }
  
#line 104
  if (tabStop == nil) {
    tabStop = [ComItextpdfTextTabStop newInstanceWithFloat:currentPosition withFloat:tabInterval_];
  }
  
#line 108
  return tabStop;
}

- (void)copyAllFieldsTo:(ComItextpdfTextTabSettings *)other {
  [super copyAllFieldsTo:other];
  other->tabInterval_ = tabInterval_;
  other->tabStops_ = tabStops_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getTabStopNewInstanceWithFloat:withComItextpdfTextTabSettings:", "getTabStopNewInstance", "Lcom.itextpdf.text.TabStop;", 0x9, NULL },
    { "init", "TabSettings", NULL, 0x1, NULL },
    { "initWithJavaUtilList:", "TabSettings", NULL, 0x1, NULL },
    { "initWithFloat:", "TabSettings", NULL, 0x1, NULL },
    { "initWithJavaUtilList:withFloat:", "TabSettings", NULL, 0x1, NULL },
    { "getTabStops", NULL, "Ljava.util.List;", 0x1, NULL },
    { "setTabStopsWithJavaUtilList:", "setTabStops", "V", 0x1, NULL },
    { "getTabInterval", NULL, "F", 0x1, NULL },
    { "setTabIntervalWithFloat:", "setTabInterval", "V", 0x1, NULL },
    { "getTabStopNewInstanceWithFloat:", "getTabStopNewInstance", "Lcom.itextpdf.text.TabStop;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_TAB_INTERVAL_", NULL, 0x19, "F", NULL, .constantValue.asFloat = ComItextpdfTextTabSettings_DEFAULT_TAB_INTERVAL },
    { "tabStops_", NULL, 0x2, "Ljava.util.List;", NULL,  },
    { "tabInterval_", NULL, 0x2, "F", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextTabSettings = { "TabSettings", "com.itextpdf.text", NULL, 0x1, 10, methods, 3, fields, 0, NULL};
  return &_ComItextpdfTextTabSettings;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/ListItem.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/ListItem.java"

#include "com/itextpdf/text/Chunk.h"
#include "com/itextpdf/text/Element.h"
#include "com/itextpdf/text/Font.h"
#include "com/itextpdf/text/ListBody.h"
#include "com/itextpdf/text/ListItem.h"
#include "com/itextpdf/text/ListLabel.h"
#include "com/itextpdf/text/Paragraph.h"
#include "com/itextpdf/text/Phrase.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "java/util/List.h"


#line 101
@implementation ComItextpdfTextListItem


#line 122
- (instancetype)init {
  if (self =
#line 123
  [super init]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 124
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 132
- (instancetype)initWithFloat:(jfloat)leading {
  if (self =
#line 133
  [super initWithFloat:leading]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 134
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 142
- (instancetype)initWithComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk {
  if (self =
#line 143
  [super initWithComItextpdfTextChunk:chunk]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 144
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 152
- (instancetype)initWithNSString:(NSString *)string {
  if (self =
#line 153
  [super initWithNSString:string]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 154
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 164
- (instancetype)initWithNSString:(NSString *)string
         withComItextpdfTextFont:(ComItextpdfTextFont *)font {
  if (self =
#line 165
  [super initWithNSString:string withComItextpdfTextFont:font]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 166
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 176
- (instancetype)initWithFloat:(jfloat)leading
     withComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk {
  if (self =
#line 177
  [super initWithFloat:leading withComItextpdfTextChunk:chunk]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 178
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 188
- (instancetype)initWithFloat:(jfloat)leading
                 withNSString:(NSString *)string {
  if (self =
#line 189
  [super initWithFloat:leading withNSString:string]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 190
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 201
- (instancetype)initWithFloat:(jfloat)leading
                 withNSString:(NSString *)string
      withComItextpdfTextFont:(ComItextpdfTextFont *)font {
  if (self =
#line 202
  [super initWithFloat:leading withNSString:string withComItextpdfTextFont:font]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 203
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 211
- (instancetype)initWithComItextpdfTextPhrase:(ComItextpdfTextPhrase *)phrase {
  if (self =
#line 212
  [super initWithComItextpdfTextPhrase:phrase]) {
    listBody_ =
#line 114
    nil;
    listLabel_ =
#line 115
    nil;
    
#line 213
    [self setRoleWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LI_()];
  }
  return self;
}


#line 224
- (jint)type {
  
#line 225
  return ComItextpdfTextElement_LISTITEM;
}


#line 235
- (void)setListSymbolWithComItextpdfTextChunk:(ComItextpdfTextChunk *)symbol {
  
#line 236
  if (self->symbol_ == nil) {
    self->symbol_ = symbol;
    if ([((ComItextpdfTextFont *) nil_chk([((ComItextpdfTextChunk *) nil_chk(self->symbol_)) getFont])) isStandardFont]) {
      [self->symbol_ setFontWithComItextpdfTextFont:font_];
    }
  }
}


#line 250
- (void)setIndentationLeftWithFloat:(jfloat)indentation
                        withBoolean:(jboolean)autoindent {
  
#line 251
  if (autoindent) {
    [self setIndentationLeftWithFloat:[((ComItextpdfTextChunk *) nil_chk([self getListSymbol])) getWidthPoint]];
  }
  else {
    [self setIndentationLeftWithFloat:indentation];
  }
}


#line 264
- (void)adjustListSymbolFont {
  
#line 265
  id<JavaUtilList> cks = [self getChunks];
  if (![((id<JavaUtilList>) nil_chk(cks)) isEmpty] && symbol_ != nil)
#line 267
  [symbol_ setFontWithComItextpdfTextFont:[((ComItextpdfTextChunk *) nil_chk([cks getWithInt:0])) getFont]];
}


#line 277
- (ComItextpdfTextChunk *)getListSymbol {
  
#line 278
  return symbol_;
}


#line 281
- (ComItextpdfTextListBody *)getListBody {
  
#line 282
  if (listBody_ == nil)
#line 283
  listBody_ = [[ComItextpdfTextListBody alloc] initWithComItextpdfTextListItem:self];
  return listBody_;
}


#line 287
- (ComItextpdfTextListLabel *)getListLabel {
  
#line 288
  if (listLabel_ == nil)
#line 289
  listLabel_ = [[ComItextpdfTextListLabel alloc] initWithComItextpdfTextListItem:self];
  return listLabel_;
}

- (void)copyAllFieldsTo:(ComItextpdfTextListItem *)other {
  [super copyAllFieldsTo:other];
  other->listBody_ = listBody_;
  other->listLabel_ = listLabel_;
  other->symbol_ = symbol_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ListItem", NULL, 0x1, NULL },
    { "initWithFloat:", "ListItem", NULL, 0x1, NULL },
    { "initWithComItextpdfTextChunk:", "ListItem", NULL, 0x1, NULL },
    { "initWithNSString:", "ListItem", NULL, 0x1, NULL },
    { "initWithNSString:withComItextpdfTextFont:", "ListItem", NULL, 0x1, NULL },
    { "initWithFloat:withComItextpdfTextChunk:", "ListItem", NULL, 0x1, NULL },
    { "initWithFloat:withNSString:", "ListItem", NULL, 0x1, NULL },
    { "initWithFloat:withNSString:withComItextpdfTextFont:", "ListItem", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPhrase:", "ListItem", NULL, 0x1, NULL },
    { "type", NULL, "I", 0x1, NULL },
    { "setListSymbolWithComItextpdfTextChunk:", "setListSymbol", "V", 0x1, NULL },
    { "setIndentationLeftWithFloat:withBoolean:", "setIndentationLeft", "V", 0x1, NULL },
    { "adjustListSymbolFont", NULL, "V", 0x1, NULL },
    { "getListSymbol", NULL, "Lcom.itextpdf.text.Chunk;", 0x1, NULL },
    { "getListBody", NULL, "Lcom.itextpdf.text.ListBody;", 0x1, NULL },
    { "getListLabel", NULL, "Lcom.itextpdf.text.ListLabel;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = ComItextpdfTextListItem_serialVersionUID },
    { "symbol_", NULL, 0x4, "Lcom.itextpdf.text.Chunk;", NULL,  },
    { "listBody_", NULL, 0x2, "Lcom.itextpdf.text.ListBody;", NULL,  },
    { "listLabel_", NULL, 0x2, "Lcom.itextpdf.text.ListLabel;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextListItem = { "ListItem", "com.itextpdf.text", NULL, 0x1, 16, methods, 4, fields, 0, NULL};
  return &_ComItextpdfTextListItem;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/BaseColor.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/BaseColor.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"

BOOL ComItextpdfTextBaseColor_initialized = NO;


#line 53
@implementation ComItextpdfTextBaseColor

ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_WHITE_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_LIGHT_GRAY_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_GRAY_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_DARK_GRAY_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_BLACK_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_RED_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_PINK_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_ORANGE_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_YELLOW_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_GREEN_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_MAGENTA_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_CYAN_;
ComItextpdfTextBaseColor * ComItextpdfTextBaseColor_BLUE_;


#line 77
- (instancetype)initComItextpdfTextBaseColorWithInt:(jint)red
                                            withInt:(jint)green
                                            withInt:(jint)blue
                                            withInt:(jint)alpha {
  if (self = [super init]) {
    
#line 78
    [ComItextpdfTextBaseColor validateWithInt:red];
    
#line 79
    [ComItextpdfTextBaseColor validateWithInt:green];
    
#line 80
    [ComItextpdfTextBaseColor validateWithInt:blue];
    
#line 81
    [ComItextpdfTextBaseColor validateWithInt:alpha];
    
#line 82
    value_ = (LShift32((alpha & (jint) 0xFF), 24)) | (LShift32((red & (jint) 0xFF), 16)) | (LShift32((green & (jint) 0xFF), 8)) | (LShift32((blue & (jint) 0xFF), 0));
  }
  return self;
}

- (instancetype)initWithInt:(jint)red
                    withInt:(jint)green
                    withInt:(jint)blue
                    withInt:(jint)alpha {
  return [self initComItextpdfTextBaseColorWithInt:
#line 77
red withInt:green withInt:blue withInt:alpha];
}


#line 90
- (instancetype)initWithInt:(jint)red
                    withInt:(jint)green
                    withInt:(jint)blue {
  return
#line 91
  [self initComItextpdfTextBaseColorWithInt:red withInt:green withInt:blue withInt:255];
}


#line 101
- (instancetype)initComItextpdfTextBaseColorWithFloat:(jfloat)red
                                            withFloat:(jfloat)green
                                            withFloat:(jfloat)blue
                                            withFloat:(jfloat)alpha {
  return
#line 102
  [self initComItextpdfTextBaseColorWithInt:J2ObjCFpToInt((red * 255 + .5)) withInt:J2ObjCFpToInt((green * 255 + .5)) withInt:J2ObjCFpToInt((blue * 255 + .5)) withInt:J2ObjCFpToInt((alpha * 255 + .5))];
}

- (instancetype)initWithFloat:(jfloat)red
                    withFloat:(jfloat)green
                    withFloat:(jfloat)blue
                    withFloat:(jfloat)alpha {
  return [self initComItextpdfTextBaseColorWithFloat:
#line 101
red withFloat:green withFloat:blue withFloat:alpha];
}


#line 111
- (instancetype)initWithFloat:(jfloat)red
                    withFloat:(jfloat)green
                    withFloat:(jfloat)blue {
  return
#line 112
  [self initComItextpdfTextBaseColorWithFloat:red withFloat:green withFloat:blue withFloat:1.0f];
}


#line 118
- (instancetype)initWithInt:(jint)argb {
  if (self = [super init]) {
    
#line 119
    value_ = argb;
  }
  return self;
}


#line 125
- (jint)getRGB {
  
#line 126
  return value_;
}


#line 132
- (jint)getRed {
  
#line 133
  return (RShift32([self getRGB], 16)) & (jint) 0xFF;
}


#line 139
- (jint)getGreen {
  
#line 140
  return (RShift32([self getRGB], 8)) & (jint) 0xFF;
}


#line 146
- (jint)getBlue {
  
#line 147
  return (RShift32([self getRGB], 0)) & (jint) 0xFF;
}


#line 153
- (jint)getAlpha {
  
#line 154
  return (RShift32([self getRGB], 24)) & (jint) 0xff;
}


#line 161
- (ComItextpdfTextBaseColor *)brighter {
  
#line 162
  jint r = [self getRed];
  jint g = [self getGreen];
  jint b = [self getBlue];
  
#line 166
  jint i = J2ObjCFpToInt((1.0 / (1.0 - ComItextpdfTextBaseColor_FACTOR)));
  if (r == 0 && g == 0 && b == 0) {
    return [[ComItextpdfTextBaseColor alloc] initWithInt:i withInt:i withInt:i];
  }
  if (r > 0 && r < i)
#line 171
  r = i;
  if (g > 0 && g < i)
#line 173
  g = i;
  if (b > 0 && b < i)
#line 175
  b = i;
  
#line 177
  return [[ComItextpdfTextBaseColor alloc] initWithInt:[JavaLangMath minWithInt:J2ObjCFpToInt((r / ComItextpdfTextBaseColor_FACTOR)) withInt:255] withInt:
#line 178
  [JavaLangMath minWithInt:J2ObjCFpToInt((g / ComItextpdfTextBaseColor_FACTOR)) withInt:255] withInt:
#line 179
  [JavaLangMath minWithInt:J2ObjCFpToInt((b / ComItextpdfTextBaseColor_FACTOR)) withInt:255]];
}


#line 186
- (ComItextpdfTextBaseColor *)darker {
  
#line 187
  return [[ComItextpdfTextBaseColor alloc] initWithInt:[JavaLangMath maxWithInt:J2ObjCFpToInt(([self getRed] * ComItextpdfTextBaseColor_FACTOR)) withInt:0] withInt:
#line 188
  [JavaLangMath maxWithInt:J2ObjCFpToInt(([self getGreen] * ComItextpdfTextBaseColor_FACTOR)) withInt:0] withInt:
#line 189
  [JavaLangMath maxWithInt:J2ObjCFpToInt(([self getBlue] * ComItextpdfTextBaseColor_FACTOR)) withInt:0]];
}

- (jboolean)isEqual:(id)obj {
  
#line 194
  return [obj isKindOfClass:[ComItextpdfTextBaseColor class]] && ((ComItextpdfTextBaseColor *) nil_chk(((ComItextpdfTextBaseColor *) check_class_cast(obj, [ComItextpdfTextBaseColor class]))))->value_ == self->value_;
}

- (NSUInteger)hash {
  
#line 199
  return value_;
}


#line 203
+ (void)validateWithInt:(jint)value {
  
#line 204
  if (value < 0 || value > 255)
#line 205
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"color.value.outside.range.0.255" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
}

- (NSString *)description {
  
#line 213
  return JreStrcat("$$C", @"Color value[", [JavaLangInteger toStringWithInt:value_ withInt:16], ']');
}

- (void)copyAllFieldsTo:(ComItextpdfTextBaseColor *)other {
  [super copyAllFieldsTo:other];
  other->value_ = value_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextBaseColor class]) {
    ComItextpdfTextBaseColor_WHITE_ =
#line 54
    [[ComItextpdfTextBaseColor alloc] initWithInt:255 withInt:255 withInt:255];
    ComItextpdfTextBaseColor_LIGHT_GRAY_ =
#line 55
    [[ComItextpdfTextBaseColor alloc] initWithInt:192 withInt:192 withInt:192];
    ComItextpdfTextBaseColor_GRAY_ =
#line 56
    [[ComItextpdfTextBaseColor alloc] initWithInt:128 withInt:128 withInt:128];
    ComItextpdfTextBaseColor_DARK_GRAY_ =
#line 57
    [[ComItextpdfTextBaseColor alloc] initWithInt:64 withInt:64 withInt:64];
    ComItextpdfTextBaseColor_BLACK_ =
#line 58
    [[ComItextpdfTextBaseColor alloc] initWithInt:0 withInt:0 withInt:0];
    ComItextpdfTextBaseColor_RED_ =
#line 59
    [[ComItextpdfTextBaseColor alloc] initWithInt:255 withInt:0 withInt:0];
    ComItextpdfTextBaseColor_PINK_ =
#line 60
    [[ComItextpdfTextBaseColor alloc] initWithInt:255 withInt:175 withInt:175];
    ComItextpdfTextBaseColor_ORANGE_ =
#line 61
    [[ComItextpdfTextBaseColor alloc] initWithInt:255 withInt:200 withInt:0];
    ComItextpdfTextBaseColor_YELLOW_ =
#line 62
    [[ComItextpdfTextBaseColor alloc] initWithInt:255 withInt:255 withInt:0];
    ComItextpdfTextBaseColor_GREEN_ =
#line 63
    [[ComItextpdfTextBaseColor alloc] initWithInt:0 withInt:255 withInt:0];
    ComItextpdfTextBaseColor_MAGENTA_ =
#line 64
    [[ComItextpdfTextBaseColor alloc] initWithInt:255 withInt:0 withInt:255];
    ComItextpdfTextBaseColor_CYAN_ =
#line 65
    [[ComItextpdfTextBaseColor alloc] initWithInt:0 withInt:255 withInt:255];
    ComItextpdfTextBaseColor_BLUE_ =
#line 66
    [[ComItextpdfTextBaseColor alloc] initWithInt:0 withInt:0 withInt:255];
    ComItextpdfTextBaseColor_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withInt:withInt:", "BaseColor", NULL, 0x1, NULL },
    { "initWithInt:withInt:withInt:", "BaseColor", NULL, 0x1, NULL },
    { "initWithFloat:withFloat:withFloat:withFloat:", "BaseColor", NULL, 0x1, NULL },
    { "initWithFloat:withFloat:withFloat:", "BaseColor", NULL, 0x1, NULL },
    { "initWithInt:", "BaseColor", NULL, 0x1, NULL },
    { "getRGB", NULL, "I", 0x1, NULL },
    { "getRed", NULL, "I", 0x1, NULL },
    { "getGreen", NULL, "I", 0x1, NULL },
    { "getBlue", NULL, "I", 0x1, NULL },
    { "getAlpha", NULL, "I", 0x1, NULL },
    { "brighter", NULL, "Lcom.itextpdf.text.BaseColor;", 0x1, NULL },
    { "darker", NULL, "Lcom.itextpdf.text.BaseColor;", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "validateWithInt:", "validate", "V", 0xa, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "WHITE_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_WHITE_,  },
    { "LIGHT_GRAY_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_LIGHT_GRAY_,  },
    { "GRAY_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_GRAY_,  },
    { "DARK_GRAY_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_DARK_GRAY_,  },
    { "BLACK_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_BLACK_,  },
    { "RED_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_RED_,  },
    { "PINK_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_PINK_,  },
    { "ORANGE_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_ORANGE_,  },
    { "YELLOW_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_YELLOW_,  },
    { "GREEN_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_GREEN_,  },
    { "MAGENTA_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_MAGENTA_,  },
    { "CYAN_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_CYAN_,  },
    { "BLUE_", NULL, 0x19, "Lcom.itextpdf.text.BaseColor;", &ComItextpdfTextBaseColor_BLUE_,  },
    { "FACTOR_", NULL, 0x1a, "D", NULL, .constantValue.asDouble = ComItextpdfTextBaseColor_FACTOR },
    { "value_", NULL, 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextBaseColor = { "BaseColor", "com.itextpdf.text", NULL, 0x1, 16, methods, 15, fields, 0, NULL};
  return &_ComItextpdfTextBaseColor;
}

@end

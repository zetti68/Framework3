//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/exceptions/InvalidPdfException.java
//

#ifndef _ComItextpdfTextExceptionsInvalidPdfException_H_
#define _ComItextpdfTextExceptionsInvalidPdfException_H_

#include "J2ObjC_header.h"
#include "java/io/IOException.h"

@class JavaLangThrowable;

@interface ComItextpdfTextExceptionsInvalidPdfException : JavaIoIOException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextExceptionsInvalidPdfException)

FOUNDATION_EXPORT void ComItextpdfTextExceptionsInvalidPdfException_initWithNSString_(ComItextpdfTextExceptionsInvalidPdfException *self, NSString *message);

FOUNDATION_EXPORT ComItextpdfTextExceptionsInvalidPdfException *new_ComItextpdfTextExceptionsInvalidPdfException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextExceptionsInvalidPdfException_initWithNSString_withJavaLangThrowable_(ComItextpdfTextExceptionsInvalidPdfException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComItextpdfTextExceptionsInvalidPdfException *new_ComItextpdfTextExceptionsInvalidPdfException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextExceptionsInvalidPdfException)

#endif // _ComItextpdfTextExceptionsInvalidPdfException_H_

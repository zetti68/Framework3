//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfDestination.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfDestination.java"

#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfDestination.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNull.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "java/lang/RuntimeException.h"
#include "java/util/StringTokenizer.h"


#line 53
@implementation ComItextpdfTextPdfPdfDestination


#line 98
- (instancetype)initWithInt:(jint)type {
  if (self =
#line 99
  [super init]) {
    status_ =
#line 84
    NO;
    
#line 100
    if (type == ComItextpdfTextPdfPdfDestination_FITB) {
      [self addWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_FITB_()];
    }
    else {
      [self addWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_FIT_()];
    }
  }
  return self;
}


#line 123
- (instancetype)initWithInt:(jint)type
                  withFloat:(jfloat)parameter {
  if (self =
#line 124
  [super initWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:parameter]]) {
    status_ =
#line 84
    NO;
    
#line 125
    switch (type) {
      default:
      [self addFirstWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_FITH_()];
      break;
      case ComItextpdfTextPdfPdfDestination_FITV:
      [self addFirstWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_FITV_()];
      break;
      case ComItextpdfTextPdfPdfDestination_FITBH:
      [self addFirstWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_FITBH_()];
      break;
      case ComItextpdfTextPdfPdfDestination_FITBV:
      [self addFirstWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_FITBV_()];
    }
  }
  return self;
}


#line 152
- (instancetype)initWithInt:(jint)type
                  withFloat:(jfloat)left
                  withFloat:(jfloat)top
                  withFloat:(jfloat)zoom {
  if (self =
#line 153
  [super initWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_XYZ_()]) {
    status_ =
#line 84
    NO;
    
#line 154
    if (left < 0)
#line 155
    [self addWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfNull_get_PDFNULL_()];
    else
#line 157
    [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:left]];
    
#line 158
    if (top < 0)
#line 159
    [self addWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfNull_get_PDFNULL_()];
    else
#line 161
    [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:top]];
    
#line 162
    [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:zoom]];
  }
  return self;
}


#line 181
- (instancetype)initWithInt:(jint)type
                  withFloat:(jfloat)left
                  withFloat:(jfloat)bottom
                  withFloat:(jfloat)right
                  withFloat:(jfloat)top {
  if (self =
#line 182
  [super initWithComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_FITR_()]) {
    status_ =
#line 84
    NO;
    
#line 183
    [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:left]];
    [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:bottom]];
    
#line 185
    [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:right]];
    
#line 186
    [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:top]];
  }
  return self;
}


#line 196
- (instancetype)initWithNSString:(NSString *)dest {
  if (self =
#line 197
  [super init]) {
    status_ =
#line 84
    NO;
    
#line 198
    JavaUtilStringTokenizer *tokens = [[JavaUtilStringTokenizer alloc] initWithNSString:dest];
    
#line 199
    if ([tokens hasMoreTokens]) {
      [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfName alloc] initWithNSString:[tokens nextToken]]];
    }
    
#line 202
    while ([tokens hasMoreTokens]) {
      NSString *token = [tokens nextToken];
      if ([@"null" isEqual:token])
#line 205
      [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNull alloc] init]];
      else {
        @try {
          [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithNSString:token]];
        }
        @catch (
#line 209
        JavaLangRuntimeException *e) {
          [self addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNull alloc] init]];
        }
      }
    }
  }
  return self;
}


#line 224
- (jboolean)hasPage {
  
#line 225
  return status_;
}


#line 234
- (jboolean)addPageWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)page {
  
#line 235
  if (!status_) {
    [self addFirstWithComItextpdfTextPdfPdfObject:page];
    status_ = YES;
    return YES;
  }
  return NO;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfDestination *)other {
  [super copyAllFieldsTo:other];
  other->status_ = status_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "PdfDestination", NULL, 0x1, NULL },
    { "initWithInt:withFloat:", "PdfDestination", NULL, 0x1, NULL },
    { "initWithInt:withFloat:withFloat:withFloat:", "PdfDestination", NULL, 0x1, NULL },
    { "initWithInt:withFloat:withFloat:withFloat:withFloat:", "PdfDestination", NULL, 0x1, NULL },
    { "initWithNSString:", "PdfDestination", NULL, 0x1, NULL },
    { "hasPage", NULL, "Z", 0x1, NULL },
    { "addPageWithComItextpdfTextPdfPdfIndirectReference:", "addPage", "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "XYZ_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_XYZ },
    { "FIT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_FIT },
    { "FITH_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_FITH },
    { "FITV_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_FITV },
    { "FITR_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_FITR },
    { "FITB_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_FITB },
    { "FITBH_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_FITBH },
    { "FITBV_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfDestination_FITBV },
    { "status_", NULL, 0x2, "Z", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfDestination = { "PdfDestination", "com.itextpdf.text.pdf", NULL, 0x1, 7, methods, 9, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfDestination;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodePostnet.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodePostnet.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/pdf/Barcode.h"
#include "com/itextpdf/text/pdf/BarcodePostnet.h"
#include "com/itextpdf/text/pdf/PdfContentByte.h"
#include "java/lang/System.h"

BOOL ComItextpdfTextPdfBarcodePostnet_initialized = NO;


#line 61
@implementation ComItextpdfTextPdfBarcodePostnet

IOSObjectArray * ComItextpdfTextPdfBarcodePostnet_BARS_;


#line 80
- (instancetype)init {
  if (self = [super init]) {
    
#line 81
    n_ = 72.0f / 22.0f;
    
#line 82
    x_ = 0.02f * 72.0f;
    
#line 83
    barHeight_ = 0.125f * 72.0f;
    
#line 84
    size_ = 0.05f * 72.0f;
    
#line 85
    codeType_ = ComItextpdfTextPdfBarcode_POSTNET;
  }
  return self;
}


#line 92
+ (IOSByteArray *)getBarsPostnetWithNSString:(NSString *)text {
  
#line 93
  jint total = 0;
  for (jint k = ((jint) [((NSString *) nil_chk(text)) length]) - 1; k >= 0; --k) {
    jint n = [text charAtWithInt:k] - '0';
    total += n;
  }
  text = JreStrcat("$C", text, (jchar) (((10 - (total % 10)) % 10) + '0'));
  IOSByteArray *bars = [IOSByteArray arrayWithLength:((jint) [text length]) * 5 + 2];
  *IOSByteArray_GetRef(bars, 0) = 1;
  *IOSByteArray_GetRef(bars, bars->size_ - 1) = 1;
  for (jint k = 0; k < ((jint) [text length]); ++k) {
    jint c = [text charAtWithInt:k] - '0';
    [JavaLangSystem arraycopyWithId:IOSObjectArray_Get(nil_chk(ComItextpdfTextPdfBarcodePostnet_BARS_), c) withInt:0 withId:bars withInt:k * 5 + 1 withInt:5];
  }
  return bars;
}


#line 113
- (ComItextpdfTextRectangle *)getBarcodeSize {
  
#line 114
  jfloat width = ((((jint) [((NSString *) nil_chk(code_)) length]) + 1) * 5 + 1) * n_ + x_;
  return [[ComItextpdfTextRectangle alloc] initWithFloat:width withFloat:barHeight_];
}


#line 154
- (ComItextpdfTextRectangle *)placeBarcodeWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb
                                                  withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)barColor
                                                  withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)textColor {
  
#line 155
  if (barColor != nil)
#line 156
  [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) setColorFillWithComItextpdfTextBaseColor:barColor];
  IOSByteArray *bars = [ComItextpdfTextPdfBarcodePostnet getBarsPostnetWithNSString:code_];
  jbyte flip = 1;
  if (codeType_ == ComItextpdfTextPdfBarcode_PLANET) {
    flip = 0;
    *IOSByteArray_GetRef(nil_chk(bars), 0) = 0;
    *IOSByteArray_GetRef(bars, bars->size_ - 1) = 0;
  }
  jfloat startX = 0;
  for (jint k = 0; k < ((IOSByteArray *) nil_chk(bars))->size_; ++k) {
    [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) rectangleWithFloat:startX withFloat:0 withFloat:x_ - inkSpreading_ withFloat:IOSByteArray_Get(bars, k) == flip ? barHeight_ : size_];
    startX += n_;
  }
  [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) fill];
  return [self getBarcodeSize];
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfBarcodePostnet class]) {
    ComItextpdfTextPdfBarcodePostnet_BARS_ = [IOSObjectArray arrayWithObjects:(id[]){ [IOSByteArray arrayWithBytes:(jbyte[]){
#line 67
      1, 1, 0, 0, 0 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 68
        0, 0, 0, 1, 1 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 69
          0, 0, 1, 0, 1 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 70
            0, 0, 1, 1, 0 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 71
              0, 1, 0, 0, 1 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 72
                0, 1, 0, 1, 0 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 73
                  0, 1, 1, 0, 0 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 74
                    1, 0, 0, 0, 1 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 75
                      1, 0, 0, 1, 0 } count:5], [IOSByteArray arrayWithBytes:(jbyte[]){
#line 76
                        1, 0, 1, 0, 0 } count:5] } count:10 type:[IOSByteArray iosClass]];
                        ComItextpdfTextPdfBarcodePostnet_initialized = YES;
                      }
                    }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BarcodePostnet", NULL, 0x1, NULL },
    { "getBarsPostnetWithNSString:", "getBarsPostnet", "[B", 0x9, NULL },
    { "getBarcodeSize", NULL, "Lcom.itextpdf.text.Rectangle;", 0x1, NULL },
    { "placeBarcodeWithComItextpdfTextPdfPdfContentByte:withComItextpdfTextBaseColor:withComItextpdfTextBaseColor:", "placeBarcode", "Lcom.itextpdf.text.Rectangle;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BARS_", NULL, 0x1a, "[[B", &ComItextpdfTextPdfBarcodePostnet_BARS_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodePostnet = { "BarcodePostnet", "com.itextpdf.text.pdf", NULL, 0x1, 4, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodePostnet;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BaseFont.java
//

#ifndef _ComItextpdfTextPdfBaseFont_H_
#define _ComItextpdfTextPdfBaseFont_H_

@class ComItextpdfTextPdfIntHashtable;
@class ComItextpdfTextPdfPRIndirectReference;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfWriter;
@class IOSByteArray;
@class IOSCharArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@class JavaUtilHashMap;

#import "JreEmulation.h"
#include "com/itextpdf/text/pdf/PdfStream.h"

#define ComItextpdfTextPdfBaseFont_ASCENT 1
#define ComItextpdfTextPdfBaseFont_AWT_ASCENT 9
#define ComItextpdfTextPdfBaseFont_AWT_DESCENT 10
#define ComItextpdfTextPdfBaseFont_AWT_LEADING 11
#define ComItextpdfTextPdfBaseFont_AWT_MAXADVANCE 12
#define ComItextpdfTextPdfBaseFont_BBOXLLX 5
#define ComItextpdfTextPdfBaseFont_BBOXLLY 6
#define ComItextpdfTextPdfBaseFont_BBOXURX 7
#define ComItextpdfTextPdfBaseFont_BBOXURY 8
#define ComItextpdfTextPdfBaseFont_CACHED YES
#define ComItextpdfTextPdfBaseFont_CAPHEIGHT 2
#define ComItextpdfTextPdfBaseFont_CID_NEWLINE 0x7fff
#define ComItextpdfTextPdfBaseFont_DESCENT 3
#define ComItextpdfTextPdfBaseFont_EMBEDDED YES
#define ComItextpdfTextPdfBaseFont_FONT_TYPE_CJK 2
#define ComItextpdfTextPdfBaseFont_FONT_TYPE_DOCUMENT 4
#define ComItextpdfTextPdfBaseFont_FONT_TYPE_T1 0
#define ComItextpdfTextPdfBaseFont_FONT_TYPE_T3 5
#define ComItextpdfTextPdfBaseFont_FONT_TYPE_TT 1
#define ComItextpdfTextPdfBaseFont_FONT_TYPE_TTUNI 3
#define ComItextpdfTextPdfBaseFont_FONT_WEIGHT 23
#define ComItextpdfTextPdfBaseFont_ITALICANGLE 4
#define ComItextpdfTextPdfBaseFont_NOT_CACHED NO
#define ComItextpdfTextPdfBaseFont_NOT_EMBEDDED NO
#define ComItextpdfTextPdfBaseFont_PARAGRAPH_SEPARATOR 0x2029
#define ComItextpdfTextPdfBaseFont_STRIKETHROUGH_POSITION 15
#define ComItextpdfTextPdfBaseFont_STRIKETHROUGH_THICKNESS 16
#define ComItextpdfTextPdfBaseFont_SUBSCRIPT_OFFSET 18
#define ComItextpdfTextPdfBaseFont_SUBSCRIPT_SIZE 17
#define ComItextpdfTextPdfBaseFont_SUPERSCRIPT_OFFSET 20
#define ComItextpdfTextPdfBaseFont_SUPERSCRIPT_SIZE 19
#define ComItextpdfTextPdfBaseFont_UNDERLINE_POSITION 13
#define ComItextpdfTextPdfBaseFont_UNDERLINE_THICKNESS 14
#define ComItextpdfTextPdfBaseFont_WEIGHT_CLASS 21
#define ComItextpdfTextPdfBaseFont_WIDTH_CLASS 22

@interface ComItextpdfTextPdfBaseFont : NSObject {
 @public
  JavaUtilArrayList *subsetRanges_;
  jint fontType_;
  IOSIntArray *widths_;
  IOSObjectArray *differences_;
  IOSCharArray *unicodeDifferences_;
  IOSObjectArray *charBBoxes_;
  NSString *encoding_;
  jboolean embedded_;
  jint compressionLevel_;
  jboolean fontSpecific_;
  jboolean forceWidthsOutput_;
  jboolean directTextToByte_;
  jboolean subset_;
  jboolean fastWinansi_;
  ComItextpdfTextPdfIntHashtable *specialMap_;
  jboolean vertical_;
}

- (instancetype)init;

+ (ComItextpdfTextPdfBaseFont *)createFont;

+ (ComItextpdfTextPdfBaseFont *)createFontWithNSString:(NSString *)name
                                          withNSString:(NSString *)encoding
                                           withBoolean:(jboolean)embedded;

+ (ComItextpdfTextPdfBaseFont *)createFontWithNSString:(NSString *)name
                                          withNSString:(NSString *)encoding
                                           withBoolean:(jboolean)embedded
                                           withBoolean:(jboolean)forceRead;

+ (ComItextpdfTextPdfBaseFont *)createFontWithNSString:(NSString *)name
                                          withNSString:(NSString *)encoding
                                           withBoolean:(jboolean)embedded
                                           withBoolean:(jboolean)cached
                                         withByteArray:(IOSByteArray *)ttfAfm
                                         withByteArray:(IOSByteArray *)pfb;

+ (ComItextpdfTextPdfBaseFont *)createFontWithNSString:(NSString *)name
                                          withNSString:(NSString *)encoding
                                           withBoolean:(jboolean)embedded
                                           withBoolean:(jboolean)cached
                                         withByteArray:(IOSByteArray *)ttfAfm
                                         withByteArray:(IOSByteArray *)pfb
                                           withBoolean:(jboolean)noThrow;

+ (ComItextpdfTextPdfBaseFont *)createFontWithNSString:(NSString *)name
                                          withNSString:(NSString *)encoding
                                           withBoolean:(jboolean)embedded
                                           withBoolean:(jboolean)cached
                                         withByteArray:(IOSByteArray *)ttfAfm
                                         withByteArray:(IOSByteArray *)pfb
                                           withBoolean:(jboolean)noThrow
                                           withBoolean:(jboolean)forceRead;

+ (ComItextpdfTextPdfBaseFont *)createFontWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)fontRef;

- (jboolean)isVertical;

+ (NSString *)getBaseNameWithNSString:(NSString *)name;

+ (NSString *)normalizeEncodingWithNSString:(NSString *)enc;

- (void)createEncoding;

- (jint)getRawWidthWithInt:(jint)c
              withNSString:(NSString *)name;

- (jint)getKerningWithInt:(jint)char1
                  withInt:(jint)char2;

- (jboolean)setKerningWithInt:(jint)char1
                      withInt:(jint)char2
                      withInt:(jint)kern;

- (jint)getWidthWithInt:(jint)char1;

- (jint)getWidthWithNSString:(NSString *)text;

- (jint)getDescentWithNSString:(NSString *)text;

- (jint)getAscentWithNSString:(NSString *)text;

- (jfloat)getDescentPointWithNSString:(NSString *)text
                            withFloat:(jfloat)fontSize;

- (jfloat)getAscentPointWithNSString:(NSString *)text
                           withFloat:(jfloat)fontSize;

- (jfloat)getWidthPointKernedWithNSString:(NSString *)text
                                withFloat:(jfloat)fontSize;

- (jfloat)getWidthPointWithNSString:(NSString *)text
                          withFloat:(jfloat)fontSize;

- (jfloat)getWidthPointWithInt:(jint)char1
                     withFloat:(jfloat)fontSize;

- (IOSByteArray *)convertToBytesWithNSString:(NSString *)text;

- (IOSByteArray *)convertToBytesWithInt:(jint)char1;

- (void)writeFontWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
      withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                               withNSObjectArray:(IOSObjectArray *)params;

- (ComItextpdfTextPdfPdfStream *)getFullFontStream;

- (NSString *)getEncoding;

- (jfloat)getFontDescriptorWithInt:(jint)key
                         withFloat:(jfloat)fontSize;

- (void)setFontDescriptorWithInt:(jint)key
                       withFloat:(jfloat)value;

- (jint)getFontType;

- (jboolean)isEmbedded;

- (jboolean)isFontSpecific;

+ (NSString *)createSubsetPrefix;

- (jchar)getUnicodeDifferencesWithInt:(jint)index;

- (NSString *)getPostscriptFontName;

- (void)setPostscriptFontNameWithNSString:(NSString *)name;

- (IOSObjectArray *)getFullFontName;

- (IOSObjectArray *)getAllNameEntries;

+ (IOSObjectArray *)getFullFontNameWithNSString:(NSString *)name
                                   withNSString:(NSString *)encoding
                                  withByteArray:(IOSByteArray *)ttfAfm;

+ (IOSObjectArray *)getAllFontNamesWithNSString:(NSString *)name
                                   withNSString:(NSString *)encoding
                                  withByteArray:(IOSByteArray *)ttfAfm;

+ (IOSObjectArray *)getAllNameEntriesWithNSString:(NSString *)name
                                     withNSString:(NSString *)encoding
                                    withByteArray:(IOSByteArray *)ttfAfm;

- (IOSObjectArray *)getFamilyFontName;

- (IOSObjectArray *)getCodePagesSupported;

+ (IOSObjectArray *)enumerateTTCNamesWithNSString:(NSString *)ttcFile;

+ (IOSObjectArray *)enumerateTTCNamesWithByteArray:(IOSByteArray *)ttcArray;

- (IOSIntArray *)getWidths;

- (IOSObjectArray *)getDifferences;

- (IOSCharArray *)getUnicodeDifferences;

- (jboolean)isForceWidthsOutput;

- (void)setForceWidthsOutputWithBoolean:(jboolean)forceWidthsOutput;

- (jboolean)isDirectTextToByte;

- (void)setDirectTextToByteWithBoolean:(jboolean)directTextToByte;

- (jboolean)isSubset;

- (void)setSubsetWithBoolean:(jboolean)subset;

- (jint)getUnicodeEquivalentWithInt:(jint)c;

- (jint)getCidCodeWithInt:(jint)c;

- (jboolean)hasKernPairs;

- (jboolean)charExistsWithInt:(jint)c;

- (jboolean)setCharAdvanceWithInt:(jint)c
                          withInt:(jint)advance;

+ (void)addFontWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)fontRef
                      withComItextpdfTextPdfIntHashtable:(ComItextpdfTextPdfIntHashtable *)hits
                                   withJavaUtilArrayList:(JavaUtilArrayList *)fonts;

+ (void)recourseFontsWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)page
                      withComItextpdfTextPdfIntHashtable:(ComItextpdfTextPdfIntHashtable *)hits
                                   withJavaUtilArrayList:(JavaUtilArrayList *)fonts
                                                 withInt:(jint)level;

+ (JavaUtilArrayList *)getDocumentFontsWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

+ (JavaUtilArrayList *)getDocumentFontsWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                               withInt:(jint)page;

- (IOSIntArray *)getCharBBoxWithInt:(jint)c;

- (IOSIntArray *)getRawCharBBoxWithInt:(jint)c
                          withNSString:(NSString *)name;

- (void)correctArabicAdvance;

- (void)addSubsetRangeWithIntArray:(IOSIntArray *)range;

- (jint)getCompressionLevel;

- (void)setCompressionLevelWithInt:(jint)compressionLevel;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBaseFont *)other;

@end

FOUNDATION_EXPORT BOOL ComItextpdfTextPdfBaseFont_initialized;
J2OBJC_STATIC_INIT(ComItextpdfTextPdfBaseFont)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, subsetRanges_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, widths_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, differences_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, unicodeDifferences_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, charBBoxes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, encoding_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, specialMap_, ComItextpdfTextPdfIntHashtable *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_COURIER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, COURIER_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_COURIER_BOLD_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, COURIER_BOLD_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_COURIER_OBLIQUE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, COURIER_OBLIQUE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_COURIER_BOLDOBLIQUE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, COURIER_BOLDOBLIQUE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_HELVETICA_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, HELVETICA_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_HELVETICA_BOLD_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, HELVETICA_BOLD_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_HELVETICA_OBLIQUE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, HELVETICA_OBLIQUE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_HELVETICA_BOLDOBLIQUE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, HELVETICA_BOLDOBLIQUE_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_SYMBOL_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, SYMBOL_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_TIMES_ROMAN_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, TIMES_ROMAN_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_TIMES_BOLD_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, TIMES_BOLD_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_TIMES_ITALIC_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, TIMES_ITALIC_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_TIMES_BOLDITALIC_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, TIMES_BOLDITALIC_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_ZAPFDINGBATS_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, ZAPFDINGBATS_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, ASCENT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CAPHEIGHT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, DESCENT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, ITALICANGLE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, BBOXLLX, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, BBOXLLY, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, BBOXURX, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, BBOXURY, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, AWT_ASCENT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, AWT_DESCENT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, AWT_LEADING, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, AWT_MAXADVANCE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, UNDERLINE_POSITION, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, UNDERLINE_THICKNESS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, STRIKETHROUGH_POSITION, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, STRIKETHROUGH_THICKNESS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, SUBSCRIPT_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, SUBSCRIPT_OFFSET, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, SUPERSCRIPT_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, SUPERSCRIPT_OFFSET, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, WEIGHT_CLASS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, WIDTH_CLASS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, FONT_WEIGHT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, FONT_TYPE_T1, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, FONT_TYPE_TT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, FONT_TYPE_CJK, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, FONT_TYPE_TTUNI, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, FONT_TYPE_DOCUMENT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, FONT_TYPE_T3, jint)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_IDENTITY_H_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, IDENTITY_H_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_IDENTITY_V_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, IDENTITY_V_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_CP1250_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CP1250_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_CP1252_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CP1252_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_CP1257_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CP1257_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_WINANSI_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, WINANSI_, NSString *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_MACROMAN_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, MACROMAN_, NSString *)

FOUNDATION_EXPORT IOSIntArray *ComItextpdfTextPdfBaseFont_CHAR_RANGE_LATIN_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CHAR_RANGE_LATIN_, IOSIntArray *)

FOUNDATION_EXPORT IOSIntArray *ComItextpdfTextPdfBaseFont_CHAR_RANGE_ARABIC_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CHAR_RANGE_ARABIC_, IOSIntArray *)

FOUNDATION_EXPORT IOSIntArray *ComItextpdfTextPdfBaseFont_CHAR_RANGE_HEBREW_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CHAR_RANGE_HEBREW_, IOSIntArray *)

FOUNDATION_EXPORT IOSIntArray *ComItextpdfTextPdfBaseFont_CHAR_RANGE_CYRILLIC_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CHAR_RANGE_CYRILLIC_, IOSIntArray *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, EMBEDDED, jboolean)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, NOT_EMBEDDED, jboolean)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CACHED, jboolean)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, NOT_CACHED, jboolean)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_RESOURCE_PATH_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, RESOURCE_PATH_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, CID_NEWLINE, jchar)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, PARAGRAPH_SEPARATOR, jchar)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfBaseFont_notdef_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, notdef_, NSString *)

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfBaseFont_fontCache_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, fontCache_, JavaUtilHashMap *)
J2OBJC_STATIC_FIELD_SETTER(ComItextpdfTextPdfBaseFont, fontCache_, JavaUtilHashMap *)

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfBaseFont_BuiltinFonts14_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfBaseFont, BuiltinFonts14_, JavaUtilHashMap *)

@interface ComItextpdfTextPdfBaseFont_StreamFont : ComItextpdfTextPdfPdfStream {
}

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                     withIntArray:(IOSIntArray *)lengths
                          withInt:(jint)compressionLevel;

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                     withNSString:(NSString *)subType
                          withInt:(jint)compressionLevel;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfBaseFont_StreamFont_init() {}

#endif // _ComItextpdfTextPdfBaseFont_H_

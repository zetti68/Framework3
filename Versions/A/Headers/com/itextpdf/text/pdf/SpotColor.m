//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/SpotColor.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/SpotColor.java"

#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/pdf/ExtendedColor.h"
#include "com/itextpdf/text/pdf/PdfSpotColor.h"
#include "com/itextpdf/text/pdf/SpotColor.h"
#include "java/lang/Float.h"


#line 51
@implementation ComItextpdfTextPdfSpotColor


#line 57
- (instancetype)initWithComItextpdfTextPdfPdfSpotColor:(ComItextpdfTextPdfPdfSpotColor *)spot
                                             withFloat:(jfloat)tint {
  if (self =
#line 58
  [super initWithInt:ComItextpdfTextPdfExtendedColor_TYPE_SEPARATION withFloat:
#line 59
  ([((ComItextpdfTextBaseColor *) nil_chk([((ComItextpdfTextPdfPdfSpotColor *) nil_chk(spot)) getAlternativeCS])) getRed] / 255.0f - 1.0f) * tint + 1 withFloat:
#line 60
  ([((ComItextpdfTextBaseColor *) nil_chk([spot getAlternativeCS])) getGreen] / 255.0f - 1.0f) * tint + 1 withFloat:
#line 61
  ([((ComItextpdfTextBaseColor *) nil_chk([spot getAlternativeCS])) getBlue] / 255.0f - 1.0f) * tint + 1]) {
    
#line 62
    self->spot_ = spot;
    
#line 63
    self->tint_ = tint;
  }
  return self;
}


#line 66
- (ComItextpdfTextPdfPdfSpotColor *)getPdfSpotColor {
  
#line 67
  return spot_;
}


#line 70
- (jfloat)getTint {
  
#line 71
  return tint_;
}

- (jboolean)isEqual:(id)obj {
  
#line 75
  return [obj isKindOfClass:[ComItextpdfTextPdfSpotColor class]] && [((ComItextpdfTextPdfPdfSpotColor *) nil_chk((((ComItextpdfTextPdfSpotColor *) nil_chk(((ComItextpdfTextPdfSpotColor *) check_class_cast(obj, [ComItextpdfTextPdfSpotColor class]))))->spot_))) isEqual:self->spot_] && ((ComItextpdfTextPdfSpotColor *) nil_chk(((ComItextpdfTextPdfSpotColor *) check_class_cast(obj, [ComItextpdfTextPdfSpotColor class]))))->tint_ == self->tint_;
}

- (NSUInteger)hash {
  
#line 79
  return ((jint) [((ComItextpdfTextPdfPdfSpotColor *) nil_chk(spot_)) hash]) ^ [JavaLangFloat floatToIntBitsWithFloat:tint_];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfSpotColor *)other {
  [super copyAllFieldsTo:other];
  other->spot_ = spot_;
  other->tint_ = tint_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfSpotColor:withFloat:", "SpotColor", NULL, 0x1, NULL },
    { "getPdfSpotColor", NULL, "Lcom.itextpdf.text.pdf.PdfSpotColor;", 0x1, NULL },
    { "getTint", NULL, "F", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = ComItextpdfTextPdfSpotColor_serialVersionUID },
    { "spot_", NULL, 0x0, "Lcom.itextpdf.text.pdf.PdfSpotColor;", NULL,  },
    { "tint_", NULL, 0x0, "F", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfSpotColor = { "SpotColor", "com.itextpdf.text.pdf", NULL, 0x1, 5, methods, 3, fields, 0, NULL};
  return &_ComItextpdfTextPdfSpotColor;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfEncryption.java
//

#ifndef _ComItextpdfTextPdfPdfEncryption_H_
#define _ComItextpdfTextPdfPdfEncryption_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextPdfOutputStreamEncryption;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfPublicKeySecurityHandler;
@class ComItextpdfTextPdfStandardDecryption;
@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaSecurityCertCertificate;
@class JavaSecurityMessageDigest;

#define ComItextpdfTextPdfPdfEncryption_STANDARD_ENCRYPTION_40 2
#define ComItextpdfTextPdfPdfEncryption_STANDARD_ENCRYPTION_128 3
#define ComItextpdfTextPdfPdfEncryption_AES_128 4
#define ComItextpdfTextPdfPdfEncryption_AES_256 5

@interface ComItextpdfTextPdfPdfEncryption : NSObject {
 @public
  IOSByteArray *key_;
  jint keySize_;
  IOSByteArray *mkey_;
  IOSByteArray *extra_;
  IOSByteArray *ownerKey_;
  IOSByteArray *userKey_;
  IOSByteArray *oeKey_;
  IOSByteArray *ueKey_;
  IOSByteArray *perms_;
  ComItextpdfTextPdfPdfPublicKeySecurityHandler *publicKeyHandler_;
  jint permissions_;
  IOSByteArray *documentID_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithComItextpdfTextPdfPdfEncryption:(ComItextpdfTextPdfPdfEncryption *)enc;

- (void)addRecipientWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert
                                            withInt:(jint)permission;

- (jint)calculateStreamSizeWithInt:(jint)n;

- (IOSByteArray *)computeUserPasswordWithByteArray:(IOSByteArray *)ownerPassword;

+ (IOSByteArray *)createDocumentId;

+ (ComItextpdfTextPdfPdfObject *)createInfoIdWithByteArray:(IOSByteArray *)id_
                                               withBoolean:(jboolean)modified;

- (IOSByteArray *)decryptByteArrayWithByteArray:(IOSByteArray *)b;

- (IOSByteArray *)encryptByteArrayWithByteArray:(IOSByteArray *)b;

- (jint)getCryptoMode;

- (ComItextpdfTextPdfStandardDecryption *)getDecryptor;

- (ComItextpdfTextPdfPdfDictionary *)getEncryptionDictionary;

- (ComItextpdfTextPdfOutputStreamEncryption *)getEncryptionStreamWithJavaIoOutputStream:(JavaIoOutputStream *)os;

- (ComItextpdfTextPdfPdfObject *)getFileIDWithBoolean:(jboolean)modified;

- (jint)getPermissions;

- (jboolean)isEmbeddedFilesOnly;

- (jboolean)isMetadataEncrypted;

- (jboolean)readKeyWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)enc
                                         withByteArray:(IOSByteArray *)password;

- (void)setCryptoModeWithInt:(jint)mode
                     withInt:(jint)kl;

- (void)setHashKeyWithInt:(jint)number
                  withInt:(jint)generation;

- (void)setKeyWithByteArray:(IOSByteArray *)key;

+ (void)setMD5WithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)pMD5;

- (void)setupAllKeysWithByteArray:(IOSByteArray *)userPassword
                    withByteArray:(IOSByteArray *)ownerPassword
                          withInt:(jint)permissions;

- (void)setupByEncryptionKeyWithByteArray:(IOSByteArray *)key
                                  withInt:(jint)keylength;

- (void)setupByOwnerPasswordWithByteArray:(IOSByteArray *)documentID
                            withByteArray:(IOSByteArray *)ownerPassword
                            withByteArray:(IOSByteArray *)userKey
                            withByteArray:(IOSByteArray *)ownerKey
                                  withInt:(jint)permissions;

- (void)setupByUserPasswordWithByteArray:(IOSByteArray *)documentID
                           withByteArray:(IOSByteArray *)userPassword
                           withByteArray:(IOSByteArray *)ownerKey
                                 withInt:(jint)permissions;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfEncryption)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, key_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, mkey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, extra_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, ownerKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, userKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, oeKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, ueKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, perms_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, publicKeyHandler_, ComItextpdfTextPdfPdfPublicKeySecurityHandler *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, documentID_, IOSByteArray *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, STANDARD_ENCRYPTION_40, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, STANDARD_ENCRYPTION_128, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, AES_128, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, AES_256, jint)

FOUNDATION_EXPORT jlong ComItextpdfTextPdfPdfEncryption_seq_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, seq_, jlong)
J2OBJC_STATIC_FIELD_REF_GETTER(ComItextpdfTextPdfPdfEncryption, seq_, jlong)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryption_setMD5WithJavaSecurityMessageDigest_(JavaSecurityMessageDigest *pMD5);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryption_init(ComItextpdfTextPdfPdfEncryption *self);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfEncryption *new_ComItextpdfTextPdfPdfEncryption_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryption_initWithComItextpdfTextPdfPdfEncryption_(ComItextpdfTextPdfPdfEncryption *self, ComItextpdfTextPdfPdfEncryption *enc);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfEncryption *new_ComItextpdfTextPdfPdfEncryption_initWithComItextpdfTextPdfPdfEncryption_(ComItextpdfTextPdfPdfEncryption *enc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IOSByteArray *ComItextpdfTextPdfPdfEncryption_createDocumentId();

FOUNDATION_EXPORT ComItextpdfTextPdfPdfObject *ComItextpdfTextPdfPdfEncryption_createInfoIdWithByteArray_withBoolean_(IOSByteArray *id_, jboolean modified);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfEncryption)

#endif // _ComItextpdfTextPdfPdfEncryption_H_

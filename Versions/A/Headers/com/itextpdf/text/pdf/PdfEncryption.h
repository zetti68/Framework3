//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfEncryption.java
//

#ifndef _ComItextpdfTextPdfPdfEncryption_H_
#define _ComItextpdfTextPdfPdfEncryption_H_

@class ComItextpdfTextPdfOutputStreamEncryption;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfPublicKeySecurityHandler;
@class ComItextpdfTextPdfStandardDecryption;
@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaSecurityCertCertificate;
@class JavaSecurityMessageDigest;

#import "JreEmulation.h"

#define ComItextpdfTextPdfPdfEncryption_AES_128 4
#define ComItextpdfTextPdfPdfEncryption_AES_256 5
#define ComItextpdfTextPdfPdfEncryption_KEY_SALT_OFFSET 40
#define ComItextpdfTextPdfPdfEncryption_OU_LENGHT 48
#define ComItextpdfTextPdfPdfEncryption_SALT_LENGHT 8
#define ComItextpdfTextPdfPdfEncryption_STANDARD_ENCRYPTION_128 3
#define ComItextpdfTextPdfPdfEncryption_STANDARD_ENCRYPTION_40 2
#define ComItextpdfTextPdfPdfEncryption_VALIDATION_SALT_OFFSET 32

@interface ComItextpdfTextPdfPdfEncryption : NSObject {
 @public
  IOSByteArray *key_;
  jint keySize_;
  IOSByteArray *mkey_;
  IOSByteArray *extra_;
  IOSByteArray *ownerKey_;
  IOSByteArray *userKey_;
  IOSByteArray *oeKey_;
  IOSByteArray *ueKey_;
  IOSByteArray *perms_;
  ComItextpdfTextPdfPdfPublicKeySecurityHandler *publicKeyHandler_;
  jint permissions_;
  IOSByteArray *documentID_;
  jint revision_;
  jint keyLength_;
  jboolean encryptMetadata_;
  jboolean embeddedFilesOnly_;
  jint cryptoMode_;
}

+ (void)setMD5WithJavaSecurityMessageDigest:(JavaSecurityMessageDigest *)pMD5;

- (instancetype)init;

- (instancetype)initWithComItextpdfTextPdfPdfEncryption:(ComItextpdfTextPdfPdfEncryption *)enc;

- (void)setCryptoModeWithInt:(jint)mode
                     withInt:(jint)kl;

- (jint)getCryptoMode;

- (jboolean)isMetadataEncrypted;

- (jint)getPermissions;

- (jboolean)isEmbeddedFilesOnly;

- (IOSByteArray *)padPasswordWithByteArray:(IOSByteArray *)userPassword;

- (IOSByteArray *)computeOwnerKeyWithByteArray:(IOSByteArray *)userPad
                                 withByteArray:(IOSByteArray *)ownerPad;

- (void)setupGlobalEncryptionKeyWithByteArray:(IOSByteArray *)documentID
                                withByteArray:(IOSByteArray *)userPad
                                withByteArray:(IOSByteArray *)ownerKey
                                      withInt:(jint)permissions;

- (void)setupUserKey;

- (void)setupAllKeysWithByteArray:(IOSByteArray *)userPassword
                    withByteArray:(IOSByteArray *)ownerPassword
                          withInt:(jint)permissions;

- (jboolean)readKeyWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)enc
                                         withByteArray:(IOSByteArray *)password;

+ (jboolean)compareArrayWithByteArray:(IOSByteArray *)a
                        withByteArray:(IOSByteArray *)b
                              withInt:(jint)len;

+ (IOSByteArray *)createDocumentId;

- (void)setupByUserPasswordWithByteArray:(IOSByteArray *)documentID
                           withByteArray:(IOSByteArray *)userPassword
                           withByteArray:(IOSByteArray *)ownerKey
                                 withInt:(jint)permissions;

- (void)setupByUserPadWithByteArray:(IOSByteArray *)documentID
                      withByteArray:(IOSByteArray *)userPad
                      withByteArray:(IOSByteArray *)ownerKey
                            withInt:(jint)permissions;

- (void)setupByOwnerPasswordWithByteArray:(IOSByteArray *)documentID
                            withByteArray:(IOSByteArray *)ownerPassword
                            withByteArray:(IOSByteArray *)userKey
                            withByteArray:(IOSByteArray *)ownerKey
                                  withInt:(jint)permissions;

- (void)setupByOwnerPadWithByteArray:(IOSByteArray *)documentID
                       withByteArray:(IOSByteArray *)ownerPad
                       withByteArray:(IOSByteArray *)userKey
                       withByteArray:(IOSByteArray *)ownerKey
                             withInt:(jint)permissions;

- (void)setKeyWithByteArray:(IOSByteArray *)key;

- (void)setupByEncryptionKeyWithByteArray:(IOSByteArray *)key
                                  withInt:(jint)keylength;

- (void)setHashKeyWithInt:(jint)number
                  withInt:(jint)generation;

+ (ComItextpdfTextPdfPdfObject *)createInfoIdWithByteArray:(IOSByteArray *)id_
                                               withBoolean:(jboolean)modified;

- (ComItextpdfTextPdfPdfDictionary *)getEncryptionDictionary;

- (ComItextpdfTextPdfPdfObject *)getFileIDWithBoolean:(jboolean)modified;

- (ComItextpdfTextPdfOutputStreamEncryption *)getEncryptionStreamWithJavaIoOutputStream:(JavaIoOutputStream *)os;

- (jint)calculateStreamSizeWithInt:(jint)n;

- (IOSByteArray *)encryptByteArrayWithByteArray:(IOSByteArray *)b;

- (ComItextpdfTextPdfStandardDecryption *)getDecryptor;

- (IOSByteArray *)decryptByteArrayWithByteArray:(IOSByteArray *)b;

- (void)addRecipientWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert
                                            withInt:(jint)permission;

- (IOSByteArray *)computeUserPasswordWithByteArray:(IOSByteArray *)ownerPassword;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfEncryption *)other;

@end

FOUNDATION_EXPORT BOOL ComItextpdfTextPdfPdfEncryption_initialized;
J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfEncryption)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, key_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, mkey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, extra_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, ownerKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, userKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, oeKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, ueKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, perms_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, publicKeyHandler_, ComItextpdfTextPdfPdfPublicKeySecurityHandler *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, documentID_, IOSByteArray *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, STANDARD_ENCRYPTION_40, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, STANDARD_ENCRYPTION_128, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, AES_128, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, AES_256, jint)

FOUNDATION_EXPORT IOSByteArray *ComItextpdfTextPdfPdfEncryption_pad_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, pad_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *ComItextpdfTextPdfPdfEncryption_salt_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, salt_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *ComItextpdfTextPdfPdfEncryption_metadataPad_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, metadataPad_, IOSByteArray *)

FOUNDATION_EXPORT JavaSecurityMessageDigest *ComItextpdfTextPdfPdfEncryption_sMD5_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, sMD5_, JavaSecurityMessageDigest *)
J2OBJC_STATIC_FIELD_SETTER(ComItextpdfTextPdfPdfEncryption, sMD5_, JavaSecurityMessageDigest *)

FOUNDATION_EXPORT jlong ComItextpdfTextPdfPdfEncryption_seq_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, seq_, jlong)
J2OBJC_STATIC_FIELD_REF_GETTER(ComItextpdfTextPdfPdfEncryption, seq_, jlong)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, VALIDATION_SALT_OFFSET, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, KEY_SALT_OFFSET, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, SALT_LENGHT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfEncryption, OU_LENGHT, jint)

#endif // _ComItextpdfTextPdfPdfEncryption_H_

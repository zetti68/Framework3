//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/TrueTypeFontUnicode.java
//

#ifndef _ComItextpdfTextPdfTrueTypeFontUnicode_H_
#define _ComItextpdfTextPdfTrueTypeFontUnicode_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/TrueTypeFont.h"
#include "java/util/Comparator.h"

@class ComItextpdfTextPdfFontsOtfLanguageEnum;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfStream;
@class ComItextpdfTextPdfPdfWriter;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@protocol JavaUtilMap;

@interface ComItextpdfTextPdfTrueTypeFontUnicode : ComItextpdfTextPdfTrueTypeFont < JavaUtilComparator >

#pragma mark Public

- (jboolean)charExistsWithInt:(jint)c;

- (jint)compareWithId:(IOSIntArray *)o1
               withId:(IOSIntArray *)o2;

- (IOSByteArray *)convertToBytesWithNSString:(NSString *)text;

- (IOSIntArray *)getCharBBoxWithInt:(jint)c;

- (ComItextpdfTextPdfPdfDictionary *)getCIDFontType2WithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)fontDescriptor
                                                                                  withNSString:(NSString *)subsetPrefix
                                                                             withNSObjectArray:(IOSObjectArray *)metrics;

- (ComItextpdfTextPdfPdfDictionary *)getFontBaseTypeWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)descendant
                                                                                  withNSString:(NSString *)subsetPrefix
                                                    withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)toUnicode;

- (ComItextpdfTextPdfPdfStream *)getFullFontStream;

- (IOSIntArray *)getMetricsTTWithInt:(jint)c;

- (ComItextpdfTextPdfPdfStream *)getToUnicodeWithNSObjectArray:(IOSObjectArray *)metrics;

- (jint)getWidthWithInt:(jint)char1;

- (jint)getWidthWithNSString:(NSString *)text;

- (jboolean)setCharAdvanceWithInt:(jint)c
                          withInt:(jint)advance;

#pragma mark Protected

- (id<JavaUtilMap>)getGlyphSubstitutionMap;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)ttFile
                    withNSString:(NSString *)enc
                     withBoolean:(jboolean)emb
                   withByteArray:(IOSByteArray *)ttfAfm
                     withBoolean:(jboolean)forceRead;

- (IOSByteArray *)convertToBytesWithInt:(jint)char1;

- (ComItextpdfTextPdfFontsOtfLanguageEnum *)getSupportedLanguage;

- (void)processWithByteArray:(IOSByteArray *)ttfAfm
                 withBoolean:(jboolean)preload;

+ (NSString *)toHexWithInt:(jint)n;

- (void)writeFontWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
      withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                               withNSObjectArray:(IOSObjectArray *)params;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfTrueTypeFontUnicode)

FOUNDATION_EXPORT void ComItextpdfTextPdfTrueTypeFontUnicode_initWithNSString_withNSString_withBoolean_withByteArray_withBoolean_(ComItextpdfTextPdfTrueTypeFontUnicode *self, NSString *ttFile, NSString *enc, jboolean emb, IOSByteArray *ttfAfm, jboolean forceRead);

FOUNDATION_EXPORT ComItextpdfTextPdfTrueTypeFontUnicode *new_ComItextpdfTextPdfTrueTypeFontUnicode_initWithNSString_withNSString_withBoolean_withByteArray_withBoolean_(NSString *ttFile, NSString *enc, jboolean emb, IOSByteArray *ttfAfm, jboolean forceRead) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfTrueTypeFontUnicode_toHexWithInt_(jint n);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfTrueTypeFontUnicode)

#endif // _ComItextpdfTextPdfTrueTypeFontUnicode_H_

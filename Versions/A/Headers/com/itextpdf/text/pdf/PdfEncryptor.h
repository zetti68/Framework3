//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfEncryptor.java
//

#ifndef _ComItextpdfTextPdfPdfEncryptor_H_
#define _ComItextpdfTextPdfPdfEncryptor_H_

@class ComItextpdfTextPdfPdfReader;
@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaUtilHashMap;

#import "JreEmulation.h"

@interface ComItextpdfTextPdfPdfEncryptor : NSObject {
}

- (instancetype)init;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                 withByteArray:(IOSByteArray *)userPassword
                                 withByteArray:(IOSByteArray *)ownerPassword
                                       withInt:(jint)permissions
                                   withBoolean:(jboolean)strength128Bits;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                 withByteArray:(IOSByteArray *)userPassword
                                 withByteArray:(IOSByteArray *)ownerPassword
                                       withInt:(jint)permissions
                                   withBoolean:(jboolean)strength128Bits
                           withJavaUtilHashMap:(JavaUtilHashMap *)newInfo;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                   withBoolean:(jboolean)strength
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                   withBoolean:(jboolean)strength
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions
                           withJavaUtilHashMap:(JavaUtilHashMap *)newInfo;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                       withInt:(jint)type
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions
                           withJavaUtilHashMap:(JavaUtilHashMap *)newInfo;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                       withInt:(jint)type
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions;

+ (NSString *)getPermissionsVerboseWithInt:(jint)permissions;

+ (jboolean)isPrintingAllowedWithInt:(jint)permissions;

+ (jboolean)isModifyContentsAllowedWithInt:(jint)permissions;

+ (jboolean)isCopyAllowedWithInt:(jint)permissions;

+ (jboolean)isModifyAnnotationsAllowedWithInt:(jint)permissions;

+ (jboolean)isFillInAllowedWithInt:(jint)permissions;

+ (jboolean)isScreenReadersAllowedWithInt:(jint)permissions;

+ (jboolean)isAssemblyAllowedWithInt:(jint)permissions;

+ (jboolean)isDegradedPrintingAllowedWithInt:(jint)permissions;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfPdfEncryptor_init() {}

#endif // _ComItextpdfTextPdfPdfEncryptor_H_

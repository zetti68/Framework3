//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfEncryptor.java
//

#ifndef _ComItextpdfTextPdfPdfEncryptor_H_
#define _ComItextpdfTextPdfPdfEncryptor_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextPdfPdfReader;
@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaUtilHashMap;

@interface ComItextpdfTextPdfPdfEncryptor : NSObject

#pragma mark Public

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                   withBoolean:(jboolean)strength
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                   withBoolean:(jboolean)strength
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions
                           withJavaUtilHashMap:(JavaUtilHashMap *)newInfo;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                 withByteArray:(IOSByteArray *)userPassword
                                 withByteArray:(IOSByteArray *)ownerPassword
                                       withInt:(jint)permissions
                                   withBoolean:(jboolean)strength128Bits;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                 withByteArray:(IOSByteArray *)userPassword
                                 withByteArray:(IOSByteArray *)ownerPassword
                                       withInt:(jint)permissions
                                   withBoolean:(jboolean)strength128Bits
                           withJavaUtilHashMap:(JavaUtilHashMap *)newInfo;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                       withInt:(jint)type
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions;

+ (void)encryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                        withJavaIoOutputStream:(JavaIoOutputStream *)os
                                       withInt:(jint)type
                                  withNSString:(NSString *)userPassword
                                  withNSString:(NSString *)ownerPassword
                                       withInt:(jint)permissions
                           withJavaUtilHashMap:(JavaUtilHashMap *)newInfo;

+ (NSString *)getPermissionsVerboseWithInt:(jint)permissions;

+ (jboolean)isAssemblyAllowedWithInt:(jint)permissions;

+ (jboolean)isCopyAllowedWithInt:(jint)permissions;

+ (jboolean)isDegradedPrintingAllowedWithInt:(jint)permissions;

+ (jboolean)isFillInAllowedWithInt:(jint)permissions;

+ (jboolean)isModifyAnnotationsAllowedWithInt:(jint)permissions;

+ (jboolean)isModifyContentsAllowedWithInt:(jint)permissions;

+ (jboolean)isPrintingAllowedWithInt:(jint)permissions;

+ (jboolean)isScreenReadersAllowedWithInt:(jint)permissions;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfEncryptor)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryptor_encryptWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withByteArray_withByteArray_withInt_withBoolean_(ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, IOSByteArray *userPassword, IOSByteArray *ownerPassword, jint permissions, jboolean strength128Bits);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryptor_encryptWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withByteArray_withByteArray_withInt_withBoolean_withJavaUtilHashMap_(ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, IOSByteArray *userPassword, IOSByteArray *ownerPassword, jint permissions, jboolean strength128Bits, JavaUtilHashMap *newInfo);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryptor_encryptWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withBoolean_withNSString_withNSString_withInt_(ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, jboolean strength, NSString *userPassword, NSString *ownerPassword, jint permissions);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryptor_encryptWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withBoolean_withNSString_withNSString_withInt_withJavaUtilHashMap_(ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, jboolean strength, NSString *userPassword, NSString *ownerPassword, jint permissions, JavaUtilHashMap *newInfo);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryptor_encryptWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withInt_withNSString_withNSString_withInt_withJavaUtilHashMap_(ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, jint type, NSString *userPassword, NSString *ownerPassword, jint permissions, JavaUtilHashMap *newInfo);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfEncryptor_encryptWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withInt_withNSString_withNSString_withInt_(ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, jint type, NSString *userPassword, NSString *ownerPassword, jint permissions);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfPdfEncryptor_getPermissionsVerboseWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isPrintingAllowedWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isModifyContentsAllowedWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isCopyAllowedWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isModifyAnnotationsAllowedWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isFillInAllowedWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isScreenReadersAllowedWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isAssemblyAllowedWithInt_(jint permissions);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfEncryptor_isDegradedPrintingAllowedWithInt_(jint permissions);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfEncryptor)

#endif // _ComItextpdfTextPdfPdfEncryptor_H_

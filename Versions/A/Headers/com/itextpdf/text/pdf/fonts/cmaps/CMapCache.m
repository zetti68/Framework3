//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/fonts/cmaps/CMapCache.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/fonts/cmaps/CMapCache.java"

#include "IOSClass.h"
#include "com/itextpdf/text/pdf/fonts/cmaps/CMapByteCid.h"
#include "com/itextpdf/text/pdf/fonts/cmaps/CMapCache.h"
#include "com/itextpdf/text/pdf/fonts/cmaps/CMapCidByte.h"
#include "com/itextpdf/text/pdf/fonts/cmaps/CMapCidUni.h"
#include "com/itextpdf/text/pdf/fonts/cmaps/CMapParserEx.h"
#include "com/itextpdf/text/pdf/fonts/cmaps/CMapUniCid.h"
#include "com/itextpdf/text/pdf/fonts/cmaps/CidResource.h"
#include "java/io/IOException.h"
#include "java/util/HashMap.h"

BOOL ComItextpdfTextPdfFontsCmapsCMapCache_initialized = NO;


#line 54
@implementation ComItextpdfTextPdfFontsCmapsCMapCache

JavaUtilHashMap * ComItextpdfTextPdfFontsCmapsCMapCache_cacheUniCid_;
JavaUtilHashMap * ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidUni_;
JavaUtilHashMap * ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidByte_;
JavaUtilHashMap * ComItextpdfTextPdfFontsCmapsCMapCache_cacheByteCid_;


#line 60
+ (ComItextpdfTextPdfFontsCmapsCMapUniCid *)getCachedCMapUniCidWithNSString:(NSString *)name {
  ComItextpdfTextPdfFontsCmapsCMapUniCid *cmap = nil;
  @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheUniCid_) {
    cmap = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfFontsCmapsCMapCache_cacheUniCid_)) getWithId:name];
  }
  if (cmap == nil) {
    cmap = [[ComItextpdfTextPdfFontsCmapsCMapUniCid alloc] init];
    [ComItextpdfTextPdfFontsCmapsCMapParserEx parseCidWithNSString:name withComItextpdfTextPdfFontsCmapsAbstractCMap:cmap withComItextpdfTextPdfFontsCmapsCidLocation:[[ComItextpdfTextPdfFontsCmapsCidResource alloc] init]];
    @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheUniCid_) {
      (void) [ComItextpdfTextPdfFontsCmapsCMapCache_cacheUniCid_ putWithId:name withId:cmap];
    }
  }
  return cmap;
}

+ (ComItextpdfTextPdfFontsCmapsCMapCidUni *)getCachedCMapCidUniWithNSString:(NSString *)name {
  
#line 76
  ComItextpdfTextPdfFontsCmapsCMapCidUni *cmap = nil;
  @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidUni_) {
    cmap = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidUni_)) getWithId:name];
  }
  if (cmap == nil) {
    cmap = [[ComItextpdfTextPdfFontsCmapsCMapCidUni alloc] init];
    [ComItextpdfTextPdfFontsCmapsCMapParserEx parseCidWithNSString:name withComItextpdfTextPdfFontsCmapsAbstractCMap:cmap withComItextpdfTextPdfFontsCmapsCidLocation:[[ComItextpdfTextPdfFontsCmapsCidResource alloc] init]];
    @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidUni_) {
      (void) [ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidUni_ putWithId:name withId:cmap];
    }
  }
  return cmap;
}


#line 90
+ (ComItextpdfTextPdfFontsCmapsCMapCidByte *)getCachedCMapCidByteWithNSString:(NSString *)name {
  
#line 91
  ComItextpdfTextPdfFontsCmapsCMapCidByte *cmap = nil;
  @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidByte_) {
    cmap = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidByte_)) getWithId:name];
  }
  if (cmap == nil) {
    cmap = [[ComItextpdfTextPdfFontsCmapsCMapCidByte alloc] init];
    [ComItextpdfTextPdfFontsCmapsCMapParserEx parseCidWithNSString:name withComItextpdfTextPdfFontsCmapsAbstractCMap:cmap withComItextpdfTextPdfFontsCmapsCidLocation:[[ComItextpdfTextPdfFontsCmapsCidResource alloc] init]];
    @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidByte_) {
      (void) [ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidByte_ putWithId:name withId:cmap];
    }
  }
  return cmap;
}


#line 105
+ (ComItextpdfTextPdfFontsCmapsCMapByteCid *)getCachedCMapByteCidWithNSString:(NSString *)name {
  
#line 106
  ComItextpdfTextPdfFontsCmapsCMapByteCid *cmap = nil;
  @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheByteCid_) {
    cmap = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfFontsCmapsCMapCache_cacheByteCid_)) getWithId:name];
  }
  if (cmap == nil) {
    cmap = [[ComItextpdfTextPdfFontsCmapsCMapByteCid alloc] init];
    [ComItextpdfTextPdfFontsCmapsCMapParserEx parseCidWithNSString:name withComItextpdfTextPdfFontsCmapsAbstractCMap:cmap withComItextpdfTextPdfFontsCmapsCidLocation:[[ComItextpdfTextPdfFontsCmapsCidResource alloc] init]];
    @synchronized(ComItextpdfTextPdfFontsCmapsCMapCache_cacheByteCid_) {
      (void) [ComItextpdfTextPdfFontsCmapsCMapCache_cacheByteCid_ putWithId:name withId:cmap];
    }
  }
  return cmap;
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfFontsCmapsCMapCache class]) {
    ComItextpdfTextPdfFontsCmapsCMapCache_cacheUniCid_ =
#line 55
    [[JavaUtilHashMap alloc] init];
    ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidUni_ =
#line 56
    [[JavaUtilHashMap alloc] init];
    ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidByte_ =
#line 57
    [[JavaUtilHashMap alloc] init];
    ComItextpdfTextPdfFontsCmapsCMapCache_cacheByteCid_ =
#line 58
    [[JavaUtilHashMap alloc] init];
    ComItextpdfTextPdfFontsCmapsCMapCache_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getCachedCMapUniCidWithNSString:", "getCachedCMapUniCid", "Lcom.itextpdf.text.pdf.fonts.cmaps.CMapUniCid;", 0x9, "Ljava.io.IOException;" },
    { "getCachedCMapCidUniWithNSString:", "getCachedCMapCidUni", "Lcom.itextpdf.text.pdf.fonts.cmaps.CMapCidUni;", 0x9, "Ljava.io.IOException;" },
    { "getCachedCMapCidByteWithNSString:", "getCachedCMapCidByte", "Lcom.itextpdf.text.pdf.fonts.cmaps.CMapCidByte;", 0x9, "Ljava.io.IOException;" },
    { "getCachedCMapByteCidWithNSString:", "getCachedCMapByteCid", "Lcom.itextpdf.text.pdf.fonts.cmaps.CMapByteCid;", 0x9, "Ljava.io.IOException;" },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cacheUniCid_", NULL, 0x1a, "Ljava.util.HashMap;", &ComItextpdfTextPdfFontsCmapsCMapCache_cacheUniCid_,  },
    { "cacheCidUni_", NULL, 0x1a, "Ljava.util.HashMap;", &ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidUni_,  },
    { "cacheCidByte_", NULL, 0x1a, "Ljava.util.HashMap;", &ComItextpdfTextPdfFontsCmapsCMapCache_cacheCidByte_,  },
    { "cacheByteCid_", NULL, 0x1a, "Ljava.util.HashMap;", &ComItextpdfTextPdfFontsCmapsCMapCache_cacheByteCid_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfFontsCmapsCMapCache = { "CMapCache", "com.itextpdf.text.pdf.fonts.cmaps", NULL, 0x1, 5, methods, 4, fields, 0, NULL};
  return &_ComItextpdfTextPdfFontsCmapsCMapCache;
}

@end

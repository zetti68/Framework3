//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/fonts/otf/Language.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/fonts/otf/Language.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/pdf/fonts/otf/Language.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"

#line 54

BOOL ComItextpdfTextPdfFontsOtfLanguageEnum_initialized = NO;

ComItextpdfTextPdfFontsOtfLanguageEnum *ComItextpdfTextPdfFontsOtfLanguageEnum_values_[1];

@implementation ComItextpdfTextPdfFontsOtfLanguageEnum


#line 60
- (instancetype)initWithNSStringArray:(IOSObjectArray *)codes
                         withNSString:(NSString *)__name
                              withInt:(jint)__ordinal {
  if (self = [super initWithNSString:__name withInt:__ordinal]) {
    
#line 61
    self->codes_ = [JavaUtilArrays asListWithNSObjectArray:codes];
  }
  return self;
}


#line 64
- (jboolean)isSupportedWithNSString:(NSString *)languageCode {
  
#line 65
  return [((id<JavaUtilList>) nil_chk(codes_)) containsWithId:languageCode];
}

FOUNDATION_EXPORT IOSObjectArray *ComItextpdfTextPdfFontsOtfLanguageEnum_values() {
  return [IOSObjectArray arrayWithObjects:ComItextpdfTextPdfFontsOtfLanguageEnum_values_ count:1 type:[IOSClass classWithClass:[ComItextpdfTextPdfFontsOtfLanguageEnum class]]];
}
+ (IOSObjectArray *)values {
  return ComItextpdfTextPdfFontsOtfLanguageEnum_values();
}

+ (ComItextpdfTextPdfFontsOtfLanguageEnum *)valueOfWithNSString:(NSString *)name {
  return ComItextpdfTextPdfFontsOtfLanguageEnum_valueOfWithNSString_(name);
}

ComItextpdfTextPdfFontsOtfLanguageEnum *ComItextpdfTextPdfFontsOtfLanguageEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 1; i++) {
    ComItextpdfTextPdfFontsOtfLanguageEnum *e = ComItextpdfTextPdfFontsOtfLanguageEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfFontsOtfLanguageEnum class]) {
    ComItextpdfTextPdfFontsOtfLanguageEnum_BENGALI = [[ComItextpdfTextPdfFontsOtfLanguageEnum alloc] initWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){
#line 56
      @"beng", @"bng2" } count:2 type:[IOSClass classWithClass:[NSString class]]] withNSString:@"BENGALI" withInt:0];
      ComItextpdfTextPdfFontsOtfLanguageEnum_initialized = YES;
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSStringArray:withNSString:withInt:", "Language", NULL, 0x82, NULL },
    { "isSupportedWithNSString:", "isSupported", "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BENGALI", "BENGALI", 0x4019, "Lcom.itextpdf.text.pdf.fonts.otf.Language;", &ComItextpdfTextPdfFontsOtfLanguageEnum_BENGALI,  },
    { "codes_", NULL, 0x12, "Ljava.util.List;", NULL,  },
  };
  static const char *superclass_type_args[] = {"Lcom.itextpdf.text.pdf.fonts.otf.Language;"};
  static const J2ObjcClassInfo _ComItextpdfTextPdfFontsOtfLanguageEnum = { "Language", "com.itextpdf.text.pdf.fonts.otf", NULL, 0x4011, 2, methods, 2, fields, 1, superclass_type_args};
  return &_ComItextpdfTextPdfFontsOtfLanguageEnum;
}

@end

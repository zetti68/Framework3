//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfFormField.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfFormField.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/pdf/PdfAction.h"
#include "com/itextpdf/text/pdf/PdfAnnotation.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfFormField.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfReader.h"
#include "com/itextpdf/text/pdf/PdfRectangle.h"
#include "com/itextpdf/text/pdf/PdfSignature.h"
#include "com/itextpdf/text/pdf/PdfStamperImp.h"
#include "com/itextpdf/text/pdf/PdfString.h"
#include "com/itextpdf/text/pdf/PdfTemplate.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"

BOOL ComItextpdfTextPdfPdfFormField_initialized = NO;


#line 54
@implementation ComItextpdfTextPdfPdfFormField

ComItextpdfTextPdfPdfName * ComItextpdfTextPdfPdfFormField_IF_SCALE_ALWAYS_;
ComItextpdfTextPdfPdfName * ComItextpdfTextPdfPdfFormField_IF_SCALE_BIGGER_;
ComItextpdfTextPdfPdfName * ComItextpdfTextPdfPdfFormField_IF_SCALE_SMALLER_;
ComItextpdfTextPdfPdfName * ComItextpdfTextPdfPdfFormField_IF_SCALE_NEVER_;
ComItextpdfTextPdfPdfName * ComItextpdfTextPdfPdfFormField_IF_SCALE_ANAMORPHIC_;
ComItextpdfTextPdfPdfName * ComItextpdfTextPdfPdfFormField_IF_SCALE_PROPORTIONAL_;
IOSObjectArray * ComItextpdfTextPdfPdfFormField_mergeTarget_;


#line 108
- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                          withFloat:(jfloat)llx
                                          withFloat:(jfloat)lly
                                          withFloat:(jfloat)urx
                                          withFloat:(jfloat)ury
                    withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action {
  if (self =
#line 109
  [super initWithComItextpdfTextPdfPdfWriter:writer withFloat:llx withFloat:lly withFloat:urx withFloat:ury withComItextpdfTextPdfPdfAction:action]) {
    
#line 110
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_ANNOT_()];
    
#line 111
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SUBTYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_WIDGET_()];
    
#line 112
    annotation_ = YES;
  }
  return self;
}


#line 116
- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer {
  if (self =
#line 117
  [super initWithComItextpdfTextPdfPdfWriter:writer withComItextpdfTextRectangle:nil]) {
    
#line 118
    form_ = YES;
    
#line 119
    annotation_ = NO;
  }
  return self;
}


#line 122
- (void)setWidgetWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)rect
                withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)highlight {
  
#line 123
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_ANNOT_()];
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SUBTYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_WIDGET_()];
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_RECT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfRectangle alloc] initWithComItextpdfTextRectangle:rect]];
  annotation_ = YES;
  if (highlight != nil && ![highlight isEqual:ComItextpdfTextPdfPdfAnnotation_get_HIGHLIGHT_INVERT_()])
#line 128
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_H_() withComItextpdfTextPdfPdfObject:highlight];
}


#line 131
+ (ComItextpdfTextPdfPdfFormField *)createEmptyWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer {
  
#line 132
  ComItextpdfTextPdfPdfFormField *field = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer];
  return field;
}


#line 136
- (void)setButtonWithInt:(jint)flags {
  
#line 137
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FT_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_BTN_()];
  if (flags != 0)
#line 139
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FF_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:flags]];
}


#line 142
+ (ComItextpdfTextPdfPdfFormField *)createButtonWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                        withInt:(jint)flags {
  
#line 143
  ComItextpdfTextPdfPdfFormField *field = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer];
  [field setButtonWithInt:flags];
  return field;
}


#line 148
+ (ComItextpdfTextPdfPdfFormField *)createPushButtonWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer {
  
#line 149
  return [ComItextpdfTextPdfPdfFormField createButtonWithComItextpdfTextPdfPdfWriter:writer withInt:ComItextpdfTextPdfPdfFormField_FF_PUSHBUTTON];
}


#line 152
+ (ComItextpdfTextPdfPdfFormField *)createCheckBoxWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer {
  
#line 153
  return [ComItextpdfTextPdfPdfFormField createButtonWithComItextpdfTextPdfPdfWriter:writer withInt:0];
}


#line 156
+ (ComItextpdfTextPdfPdfFormField *)createRadioButtonWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                         withBoolean:(jboolean)noToggleToOff {
  
#line 157
  return [ComItextpdfTextPdfPdfFormField createButtonWithComItextpdfTextPdfPdfWriter:writer withInt:ComItextpdfTextPdfPdfFormField_FF_RADIO + (noToggleToOff ? ComItextpdfTextPdfPdfFormField_FF_NO_TOGGLE_TO_OFF : 0)];
}


#line 160
+ (ComItextpdfTextPdfPdfFormField *)createTextFieldWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                       withBoolean:(jboolean)multiline
                                                                       withBoolean:(jboolean)password
                                                                           withInt:(jint)maxLen {
  
#line 161
  ComItextpdfTextPdfPdfFormField *field = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer];
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FT_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_TX_()];
  jint flags = multiline ? ComItextpdfTextPdfPdfFormField_FF_MULTILINE : 0;
  flags += password ? ComItextpdfTextPdfPdfFormField_FF_PASSWORD : 0;
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FF_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:flags]];
  if (maxLen > 0)
#line 167
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_MAXLEN_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:maxLen]];
  return field;
}


#line 171
+ (ComItextpdfTextPdfPdfFormField *)createChoiceWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                        withInt:(jint)flags
                                                 withComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)options
                                                                        withInt:(jint)topIndex {
  
#line 172
  ComItextpdfTextPdfPdfFormField *field = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer];
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FT_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_CH_()];
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FF_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:flags]];
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_OPT_() withComItextpdfTextPdfPdfObject:options];
  if (topIndex > 0)
#line 177
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TI_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:topIndex]];
  return field;
}


#line 181
+ (ComItextpdfTextPdfPdfFormField *)createListWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                            withNSStringArray:(IOSObjectArray *)options
                                                                      withInt:(jint)topIndex {
  
#line 182
  return [ComItextpdfTextPdfPdfFormField createChoiceWithComItextpdfTextPdfPdfWriter:writer withInt:0 withComItextpdfTextPdfPdfArray:[ComItextpdfTextPdfPdfFormField processOptionsWithNSStringArray:options] withInt:topIndex];
}


#line 185
+ (ComItextpdfTextPdfPdfFormField *)createListWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                           withNSStringArray2:(IOSObjectArray *)options
                                                                      withInt:(jint)topIndex {
  
#line 186
  return [ComItextpdfTextPdfPdfFormField createChoiceWithComItextpdfTextPdfPdfWriter:writer withInt:0 withComItextpdfTextPdfPdfArray:[ComItextpdfTextPdfPdfFormField processOptionsWithNSStringArray2:options] withInt:topIndex];
}


#line 189
+ (ComItextpdfTextPdfPdfFormField *)createComboWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                   withBoolean:(jboolean)edit
                                                             withNSStringArray:(IOSObjectArray *)options
                                                                       withInt:(jint)topIndex {
  
#line 190
  return [ComItextpdfTextPdfPdfFormField createChoiceWithComItextpdfTextPdfPdfWriter:writer withInt:ComItextpdfTextPdfPdfFormField_FF_COMBO + (edit ? ComItextpdfTextPdfPdfFormField_FF_EDIT : 0) withComItextpdfTextPdfPdfArray:[ComItextpdfTextPdfPdfFormField processOptionsWithNSStringArray:options] withInt:topIndex];
}


#line 193
+ (ComItextpdfTextPdfPdfFormField *)createComboWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                   withBoolean:(jboolean)edit
                                                            withNSStringArray2:(IOSObjectArray *)options
                                                                       withInt:(jint)topIndex {
  
#line 194
  return [ComItextpdfTextPdfPdfFormField createChoiceWithComItextpdfTextPdfPdfWriter:writer withInt:ComItextpdfTextPdfPdfFormField_FF_COMBO + (edit ? ComItextpdfTextPdfPdfFormField_FF_EDIT : 0) withComItextpdfTextPdfPdfArray:[ComItextpdfTextPdfPdfFormField processOptionsWithNSStringArray2:options] withInt:topIndex];
}


#line 197
+ (ComItextpdfTextPdfPdfArray *)processOptionsWithNSStringArray:(IOSObjectArray *)options {
  
#line 198
  ComItextpdfTextPdfPdfArray *array = [[ComItextpdfTextPdfPdfArray alloc] init];
  for (jint k = 0; k < ((IOSObjectArray *) nil_chk(options))->size_; ++k) {
    [array addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:IOSObjectArray_Get(options, k) withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
  }
  return array;
}


#line 205
+ (ComItextpdfTextPdfPdfArray *)processOptionsWithNSStringArray2:(IOSObjectArray *)options {
  
#line 206
  ComItextpdfTextPdfPdfArray *array = [[ComItextpdfTextPdfPdfArray alloc] init];
  for (jint k = 0; k < ((IOSObjectArray *) nil_chk(options))->size_; ++k) {
    IOSObjectArray *subOption = IOSObjectArray_Get(options, k);
    ComItextpdfTextPdfPdfArray *ar2 = [[ComItextpdfTextPdfPdfArray alloc] initWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:IOSObjectArray_Get(nil_chk(subOption), 0) withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
    [ar2 addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:IOSObjectArray_Get(subOption, 1) withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
    [array addWithComItextpdfTextPdfPdfObject:ar2];
  }
  return array;
}


#line 216
+ (ComItextpdfTextPdfPdfFormField *)createSignatureWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer {
  
#line 217
  ComItextpdfTextPdfPdfFormField *field = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer];
  [field putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FT_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_SIG_()];
  return field;
}


#line 225
- (ComItextpdfTextPdfPdfFormField *)getParent {
  
#line 226
  return parent_;
}


#line 229
- (void)addKidWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field {
  
#line 230
  ((ComItextpdfTextPdfPdfFormField *) nil_chk(field))->parent_ = self;
  if (kids_ == nil)
#line 232
  kids_ = [[JavaUtilArrayList alloc] init];
  [((JavaUtilArrayList *) nil_chk(kids_)) addWithId:field];
}


#line 236
- (JavaUtilArrayList *)getKids {
  
#line 237
  return kids_;
}


#line 245
- (jint)setFieldFlagsWithInt:(jint)flags {
  
#line 246
  ComItextpdfTextPdfPdfNumber *obj = (ComItextpdfTextPdfPdfNumber *) check_class_cast([self getWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FF_()], [ComItextpdfTextPdfPdfNumber class]);
  jint old;
  if (obj == nil)
#line 249
  old = 0;
  else
#line 251
  old = [obj intValue];
  jint v = old | flags;
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FF_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:v]];
  return old;
}


#line 257
- (void)setValueAsStringWithNSString:(NSString *)s {
  
#line 258
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_V_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:s withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 261
- (void)setValueAsNameWithNSString:(NSString *)s {
  
#line 262
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_V_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfName alloc] initWithNSString:s]];
}


#line 265
- (void)setValueWithComItextpdfTextPdfPdfSignature:(ComItextpdfTextPdfPdfSignature *)sig {
  
#line 266
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_V_() withComItextpdfTextPdfPdfObject:sig];
}


#line 278
- (void)setRichValueWithNSString:(NSString *)rv {
  
#line 279
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_RV_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:rv]];
}


#line 282
- (void)setDefaultValueAsStringWithNSString:(NSString *)s {
  
#line 283
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_DV_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:s withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 286
- (void)setDefaultValueAsNameWithNSString:(NSString *)s {
  
#line 287
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_DV_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfName alloc] initWithNSString:s]];
}


#line 290
- (void)setFieldNameWithNSString:(NSString *)s {
  
#line 291
  if (s != nil)
#line 292
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_T_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:s withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 299
- (void)setUserNameWithNSString:(NSString *)s {
  
#line 300
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TU_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:s withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 307
- (void)setMappingNameWithNSString:(NSString *)s {
  
#line 308
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TM_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:s withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 315
- (void)setQuaddingWithInt:(jint)v {
  
#line 316
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_Q_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:v]];
}


#line 319
+ (void)mergeResourcesWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)result
                      withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)source
                      withComItextpdfTextPdfPdfStamperImp:(ComItextpdfTextPdfPdfStamperImp *)writer {
  
#line 320
  ComItextpdfTextPdfPdfDictionary *dic = nil;
  ComItextpdfTextPdfPdfDictionary *res = nil;
  ComItextpdfTextPdfPdfName *target = nil;
  for (jint k = 0; k < ((IOSObjectArray *) nil_chk(ComItextpdfTextPdfPdfFormField_mergeTarget_))->size_; ++k) {
    target = IOSObjectArray_Get(ComItextpdfTextPdfPdfFormField_mergeTarget_, k);
    ComItextpdfTextPdfPdfDictionary *pdfDict = [((ComItextpdfTextPdfPdfDictionary *) nil_chk(source)) getAsDictWithComItextpdfTextPdfPdfName:target];
    if ((dic = pdfDict) != nil) {
      if ((res = (ComItextpdfTextPdfPdfDictionary *) check_class_cast([ComItextpdfTextPdfPdfReader getPdfObjectWithComItextpdfTextPdfPdfObject:[((ComItextpdfTextPdfPdfDictionary *) nil_chk(result)) getWithComItextpdfTextPdfPdfName:target] withComItextpdfTextPdfPdfObject:result], [ComItextpdfTextPdfPdfDictionary class])) == nil) {
        res = [[ComItextpdfTextPdfPdfDictionary alloc] init];
      }
      [((ComItextpdfTextPdfPdfDictionary *) nil_chk(res)) mergeDifferentWithComItextpdfTextPdfPdfDictionary:dic];
      [result putWithComItextpdfTextPdfPdfName:target withComItextpdfTextPdfPdfObject:res];
      if (writer != nil)
#line 333
      [writer markUsedWithComItextpdfTextPdfPdfObject:res];
    }
  }
}


#line 338
+ (void)mergeResourcesWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)result
                      withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)source {
  
#line 339
  [ComItextpdfTextPdfPdfFormField mergeResourcesWithComItextpdfTextPdfPdfDictionary:result withComItextpdfTextPdfPdfDictionary:source withComItextpdfTextPdfPdfStamperImp:nil];
}


#line 343
- (void)setUsed {
  
#line 344
  used_ = YES;
  if (parent_ != nil)
#line 346
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PARENT_() withComItextpdfTextPdfPdfObject:[parent_ getIndirectReference]];
  if (kids_ != nil) {
    ComItextpdfTextPdfPdfArray *array = [[ComItextpdfTextPdfPdfArray alloc] init];
    for (jint k = 0; k < [kids_ size]; ++k)
#line 350
    [array addWithComItextpdfTextPdfPdfObject:[((ComItextpdfTextPdfPdfFormField *) nil_chk(([kids_ getWithInt:k]))) getIndirectReference]];
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_KIDS_() withComItextpdfTextPdfPdfObject:array];
  }
  if (templates_ == nil)
#line 354
  return;
  ComItextpdfTextPdfPdfDictionary *dic = [[ComItextpdfTextPdfPdfDictionary alloc] init];
  for (ComItextpdfTextPdfPdfTemplate * __strong template_ in nil_chk(templates_)) {
    [ComItextpdfTextPdfPdfFormField mergeResourcesWithComItextpdfTextPdfPdfDictionary:dic withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *) check_class_cast([((ComItextpdfTextPdfPdfTemplate *) nil_chk(template_)) getResources], [ComItextpdfTextPdfPdfDictionary class])];
  }
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_DR_() withComItextpdfTextPdfPdfObject:dic];
}


#line 362
+ (ComItextpdfTextPdfPdfAnnotation *)shallowDuplicateWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot {
  
#line 363
  ComItextpdfTextPdfPdfAnnotation *dup;
  if ([((ComItextpdfTextPdfPdfAnnotation *) nil_chk(annot)) isForm]) {
    dup = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:annot->writer_];
    ComItextpdfTextPdfPdfFormField *dupField = (ComItextpdfTextPdfPdfFormField *) check_class_cast(dup, [ComItextpdfTextPdfPdfFormField class]);
    ComItextpdfTextPdfPdfFormField *srcField = (ComItextpdfTextPdfPdfFormField *) check_class_cast(annot, [ComItextpdfTextPdfPdfFormField class]);
    dupField->parent_ = srcField->parent_;
    dupField->kids_ = srcField->kids_;
  }
  else
#line 372
  dup = [[ComItextpdfTextPdfPdfAnnotation alloc] initWithComItextpdfTextPdfPdfWriter:annot->writer_ withComItextpdfTextRectangle:nil];
  [((ComItextpdfTextPdfPdfAnnotation *) nil_chk(dup)) mergeWithComItextpdfTextPdfPdfDictionary:annot];
  dup->form_ = annot->form_;
  dup->annotation_ = annot->annotation_;
  dup->templates_ = annot->templates_;
  return dup;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfFormField *)other {
  [super copyAllFieldsTo:other];
  other->kids_ = kids_;
  other->parent_ = parent_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfPdfFormField class]) {
    ComItextpdfTextPdfPdfFormField_IF_SCALE_ALWAYS_ = ComItextpdfTextPdfPdfName_get_A_();
    ComItextpdfTextPdfPdfFormField_IF_SCALE_BIGGER_ = ComItextpdfTextPdfPdfName_get_B_();
    ComItextpdfTextPdfPdfFormField_IF_SCALE_SMALLER_ = ComItextpdfTextPdfPdfName_get_S_();
    ComItextpdfTextPdfPdfFormField_IF_SCALE_NEVER_ = ComItextpdfTextPdfPdfName_get_N_();
    ComItextpdfTextPdfPdfFormField_IF_SCALE_ANAMORPHIC_ = ComItextpdfTextPdfPdfName_get_A_();
    ComItextpdfTextPdfPdfFormField_IF_SCALE_PROPORTIONAL_ = ComItextpdfTextPdfPdfName_get_P_();
    ComItextpdfTextPdfPdfFormField_mergeTarget_ = [IOSObjectArray arrayWithObjects:(id[]){ ComItextpdfTextPdfPdfName_get_FONT_(), ComItextpdfTextPdfPdfName_get_XOBJECT_(), ComItextpdfTextPdfPdfName_get_COLORSPACE_(), ComItextpdfTextPdfPdfName_get_PATTERN_() } count:4 type:[IOSClass classWithClass:[ComItextpdfTextPdfPdfName class]]];
    ComItextpdfTextPdfPdfFormField_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfWriter:withFloat:withFloat:withFloat:withFloat:withComItextpdfTextPdfPdfAction:", "PdfFormField", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfWriter:", "PdfFormField", NULL, 0x4, NULL },
    { "setWidgetWithComItextpdfTextRectangle:withComItextpdfTextPdfPdfName:", "setWidget", "V", 0x1, NULL },
    { "createEmptyWithComItextpdfTextPdfPdfWriter:", "createEmpty", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "setButtonWithInt:", "setButton", "V", 0x1, NULL },
    { "createButtonWithComItextpdfTextPdfPdfWriter:withInt:", "createButton", "Lcom.itextpdf.text.pdf.PdfFormField;", 0xc, NULL },
    { "createPushButtonWithComItextpdfTextPdfPdfWriter:", "createPushButton", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "createCheckBoxWithComItextpdfTextPdfPdfWriter:", "createCheckBox", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "createRadioButtonWithComItextpdfTextPdfPdfWriter:withBoolean:", "createRadioButton", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "createTextFieldWithComItextpdfTextPdfPdfWriter:withBoolean:withBoolean:withInt:", "createTextField", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "createChoiceWithComItextpdfTextPdfPdfWriter:withInt:withComItextpdfTextPdfPdfArray:withInt:", "createChoice", "Lcom.itextpdf.text.pdf.PdfFormField;", 0xc, NULL },
    { "createListWithComItextpdfTextPdfPdfWriter:withNSStringArray:withInt:", "createList", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "createListWithComItextpdfTextPdfPdfWriter:withNSStringArray2:withInt:", "createList", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "createComboWithComItextpdfTextPdfPdfWriter:withBoolean:withNSStringArray:withInt:", "createCombo", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "createComboWithComItextpdfTextPdfPdfWriter:withBoolean:withNSStringArray2:withInt:", "createCombo", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "processOptionsWithNSStringArray:", "processOptions", "Lcom.itextpdf.text.pdf.PdfArray;", 0xc, NULL },
    { "processOptionsWithNSStringArray2:", "processOptions", "Lcom.itextpdf.text.pdf.PdfArray;", 0xc, NULL },
    { "createSignatureWithComItextpdfTextPdfPdfWriter:", "createSignature", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x9, NULL },
    { "getParent", NULL, "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addKidWithComItextpdfTextPdfPdfFormField:", "addKid", "V", 0x1, NULL },
    { "getKids", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "setFieldFlagsWithInt:", "setFieldFlags", "I", 0x1, NULL },
    { "setValueAsStringWithNSString:", "setValueAsString", "V", 0x1, NULL },
    { "setValueAsNameWithNSString:", "setValueAsName", "V", 0x1, NULL },
    { "setValueWithComItextpdfTextPdfPdfSignature:", "setValue", "V", 0x1, NULL },
    { "setRichValueWithNSString:", "setRichValue", "V", 0x1, NULL },
    { "setDefaultValueAsStringWithNSString:", "setDefaultValueAsString", "V", 0x1, NULL },
    { "setDefaultValueAsNameWithNSString:", "setDefaultValueAsName", "V", 0x1, NULL },
    { "setFieldNameWithNSString:", "setFieldName", "V", 0x1, NULL },
    { "setUserNameWithNSString:", "setUserName", "V", 0x1, NULL },
    { "setMappingNameWithNSString:", "setMappingName", "V", 0x1, NULL },
    { "setQuaddingWithInt:", "setQuadding", "V", 0x1, NULL },
    { "mergeResourcesWithComItextpdfTextPdfPdfDictionary:withComItextpdfTextPdfPdfDictionary:withComItextpdfTextPdfPdfStamperImp:", "mergeResources", "V", 0x8, NULL },
    { "mergeResourcesWithComItextpdfTextPdfPdfDictionary:withComItextpdfTextPdfPdfDictionary:", "mergeResources", "V", 0x8, NULL },
    { "setUsed", NULL, "V", 0x1, NULL },
    { "shallowDuplicateWithComItextpdfTextPdfPdfAnnotation:", "shallowDuplicate", "Lcom.itextpdf.text.pdf.PdfAnnotation;", 0x9, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FF_READ_ONLY_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_READ_ONLY },
    { "FF_REQUIRED_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_REQUIRED },
    { "FF_NO_EXPORT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_NO_EXPORT },
    { "FF_NO_TOGGLE_TO_OFF_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_NO_TOGGLE_TO_OFF },
    { "FF_RADIO_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_RADIO },
    { "FF_PUSHBUTTON_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_PUSHBUTTON },
    { "FF_MULTILINE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_MULTILINE },
    { "FF_PASSWORD_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_PASSWORD },
    { "FF_COMBO_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_COMBO },
    { "FF_EDIT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_EDIT },
    { "FF_FILESELECT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_FILESELECT },
    { "FF_MULTISELECT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_MULTISELECT },
    { "FF_DONOTSPELLCHECK_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_DONOTSPELLCHECK },
    { "FF_DONOTSCROLL_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_DONOTSCROLL },
    { "FF_COMB_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_COMB },
    { "FF_RADIOSINUNISON_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_RADIOSINUNISON },
    { "FF_RICHTEXT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_FF_RICHTEXT },
    { "Q_LEFT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_Q_LEFT },
    { "Q_CENTER_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_Q_CENTER },
    { "Q_RIGHT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_Q_RIGHT },
    { "MK_NO_ICON_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_MK_NO_ICON },
    { "MK_NO_CAPTION_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_MK_NO_CAPTION },
    { "MK_CAPTION_BELOW_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_MK_CAPTION_BELOW },
    { "MK_CAPTION_ABOVE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_MK_CAPTION_ABOVE },
    { "MK_CAPTION_RIGHT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_MK_CAPTION_RIGHT },
    { "MK_CAPTION_LEFT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_MK_CAPTION_LEFT },
    { "MK_CAPTION_OVERLAID_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfFormField_MK_CAPTION_OVERLAID },
    { "IF_SCALE_ALWAYS_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfFormField_IF_SCALE_ALWAYS_,  },
    { "IF_SCALE_BIGGER_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfFormField_IF_SCALE_BIGGER_,  },
    { "IF_SCALE_SMALLER_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfFormField_IF_SCALE_SMALLER_,  },
    { "IF_SCALE_NEVER_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfFormField_IF_SCALE_NEVER_,  },
    { "IF_SCALE_ANAMORPHIC_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfFormField_IF_SCALE_ANAMORPHIC_,  },
    { "IF_SCALE_PROPORTIONAL_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfFormField_IF_SCALE_PROPORTIONAL_,  },
    { "MULTILINE_", NULL, 0x19, "Z", NULL, .constantValue.asBOOL = ComItextpdfTextPdfPdfFormField_MULTILINE },
    { "SINGLELINE_", NULL, 0x19, "Z", NULL, .constantValue.asBOOL = ComItextpdfTextPdfPdfFormField_SINGLELINE },
    { "PLAINTEXT_", NULL, 0x19, "Z", NULL, .constantValue.asBOOL = ComItextpdfTextPdfPdfFormField_PLAINTEXT },
    { "PASSWORD_", NULL, 0x19, "Z", NULL, .constantValue.asBOOL = ComItextpdfTextPdfPdfFormField_PASSWORD },
    { "mergeTarget_", NULL, 0x8, "[Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfFormField_mergeTarget_,  },
    { "parent_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfFormField;", NULL,  },
    { "kids_", NULL, 0x4, "Ljava.util.ArrayList;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfFormField = { "PdfFormField", "com.itextpdf.text.pdf", NULL, 0x1, 36, methods, 40, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfFormField;
}

@end

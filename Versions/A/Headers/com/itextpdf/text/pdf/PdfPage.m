//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPage.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPage.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/DocumentException.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfPage.h"
#include "com/itextpdf/text/pdf/PdfRectangle.h"
#include "java/lang/Float.h"
#include "java/util/HashMap.h"

BOOL ComItextpdfTextPdfPdfPage_initialized = NO;


#line 61
@implementation ComItextpdfTextPdfPdfPage

IOSObjectArray * ComItextpdfTextPdfPdfPage_boxStrings_;
IOSObjectArray * ComItextpdfTextPdfPdfPage_boxNames_;
ComItextpdfTextPdfPdfNumber * ComItextpdfTextPdfPdfPage_PORTRAIT_;
ComItextpdfTextPdfPdfNumber * ComItextpdfTextPdfPdfPage_LANDSCAPE_;
ComItextpdfTextPdfPdfNumber * ComItextpdfTextPdfPdfPage_INVERTEDPORTRAIT_;
ComItextpdfTextPdfPdfNumber * ComItextpdfTextPdfPdfPage_SEASCAPE_;


#line 93
- (instancetype)initComItextpdfTextPdfPdfPageWithComItextpdfTextPdfPdfRectangle:(ComItextpdfTextPdfPdfRectangle *)mediaBox
                                                            withJavaUtilHashMap:(JavaUtilHashMap *)boxSize
                                            withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)resources
                                                                        withInt:(jint)rotate {
  if (self =
#line 94
  [super initWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfDictionary_get_PAGE_()]) {
    
#line 95
    self->mediaBox_ = mediaBox;
    
#line 96
    if (mediaBox != nil && ([mediaBox width] > 14400 || [mediaBox height] > 14400)) {
      @throw [[ComItextpdfTextDocumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"the.page.size.must.be.smaller.than.14400.by.14400.its.1.by.2" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [JavaLangFloat valueOfWithFloat:[mediaBox width]], [JavaLangFloat valueOfWithFloat:[mediaBox height]] } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
    
#line 99
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_MEDIABOX_() withComItextpdfTextPdfPdfObject:mediaBox];
    
#line 100
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_RESOURCES_() withComItextpdfTextPdfPdfObject:resources];
    
#line 101
    if (rotate != 0) {
      [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ROTATE_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:rotate]];
    }
    
#line 104
    for (jint k = 0; k < ((IOSObjectArray *) nil_chk(ComItextpdfTextPdfPdfPage_boxStrings_))->size_; ++k) {
      ComItextpdfTextPdfPdfObject *rect = [((JavaUtilHashMap *) nil_chk(boxSize)) getWithId:IOSObjectArray_Get(ComItextpdfTextPdfPdfPage_boxStrings_, k)];
      if (rect != nil)
#line 107
      [self putWithComItextpdfTextPdfPdfName:IOSObjectArray_Get(nil_chk(ComItextpdfTextPdfPdfPage_boxNames_), k) withComItextpdfTextPdfPdfObject:rect];
    }
  }
  return self;
}

- (instancetype)initWithComItextpdfTextPdfPdfRectangle:(ComItextpdfTextPdfPdfRectangle *)mediaBox
                                   withJavaUtilHashMap:(JavaUtilHashMap *)boxSize
                   withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)resources
                                               withInt:(jint)rotate {
  return [self initComItextpdfTextPdfPdfPageWithComItextpdfTextPdfPdfRectangle:
#line 93
mediaBox withJavaUtilHashMap:boxSize withComItextpdfTextPdfPdfDictionary:resources withInt:rotate];
}


#line 119
- (instancetype)initWithComItextpdfTextPdfPdfRectangle:(ComItextpdfTextPdfPdfRectangle *)mediaBox
                                   withJavaUtilHashMap:(JavaUtilHashMap *)boxSize
                   withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)resources {
  return
#line 120
  [self initComItextpdfTextPdfPdfPageWithComItextpdfTextPdfPdfRectangle:mediaBox withJavaUtilHashMap:boxSize withComItextpdfTextPdfPdfDictionary:resources withInt:0];
}


#line 131
- (jboolean)isParent {
  
#line 132
  return NO;
}


#line 143
- (void)addWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)contents {
  
#line 144
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_CONTENTS_() withComItextpdfTextPdfPdfObject:contents];
}


#line 153
- (ComItextpdfTextPdfPdfRectangle *)rotateMediaBox {
  
#line 154
  self->mediaBox_ = [((ComItextpdfTextPdfPdfRectangle *) nil_chk(mediaBox_)) rotate];
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_MEDIABOX_() withComItextpdfTextPdfPdfObject:self->mediaBox_];
  return self->mediaBox_;
}


#line 165
- (ComItextpdfTextPdfPdfRectangle *)getMediaBox {
  
#line 166
  return mediaBox_;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfPage *)other {
  [super copyAllFieldsTo:other];
  other->mediaBox_ = mediaBox_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfPdfPage class]) {
    ComItextpdfTextPdfPdfPage_boxStrings_ = [IOSObjectArray arrayWithObjects:(id[]){
#line 63
      @"crop", @"trim", @"art", @"bleed" } count:4 type:[IOSClass classWithClass:[NSString class]]];
      ComItextpdfTextPdfPdfPage_boxNames_ = [IOSObjectArray arrayWithObjects:(id[]){ ComItextpdfTextPdfPdfName_get_CROPBOX_(), ComItextpdfTextPdfPdfName_get_TRIMBOX_(), ComItextpdfTextPdfPdfName_get_ARTBOX_(), ComItextpdfTextPdfPdfName_get_BLEEDBOX_() } count:4 type:[IOSClass classWithClass:[ComItextpdfTextPdfPdfName class]]];
      ComItextpdfTextPdfPdfPage_PORTRAIT_ =
#line 68
      [[ComItextpdfTextPdfPdfNumber alloc] initWithInt:0];
      ComItextpdfTextPdfPdfPage_LANDSCAPE_ =
#line 71
      [[ComItextpdfTextPdfPdfNumber alloc] initWithInt:90];
      ComItextpdfTextPdfPdfPage_INVERTEDPORTRAIT_ =
#line 74
      [[ComItextpdfTextPdfPdfNumber alloc] initWithInt:180];
      ComItextpdfTextPdfPdfPage_SEASCAPE_ =
#line 77
      [[ComItextpdfTextPdfPdfNumber alloc] initWithInt:270];
      ComItextpdfTextPdfPdfPage_initialized = YES;
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfRectangle:withJavaUtilHashMap:withComItextpdfTextPdfPdfDictionary:withInt:", "PdfPage", NULL, 0x0, "Lcom.itextpdf.text.DocumentException;" },
    { "initWithComItextpdfTextPdfPdfRectangle:withJavaUtilHashMap:withComItextpdfTextPdfPdfDictionary:", "PdfPage", NULL, 0x0, "Lcom.itextpdf.text.DocumentException;" },
    { "isParent", NULL, "Z", 0x1, NULL },
    { "addWithComItextpdfTextPdfPdfIndirectReference:", "add", "V", 0x0, NULL },
    { "rotateMediaBox", NULL, "Lcom.itextpdf.text.pdf.PdfRectangle;", 0x0, NULL },
    { "getMediaBox", NULL, "Lcom.itextpdf.text.pdf.PdfRectangle;", 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "boxStrings_", NULL, 0x1a, "[Ljava.lang.String;", &ComItextpdfTextPdfPdfPage_boxStrings_,  },
    { "boxNames_", NULL, 0x1a, "[Lcom.itextpdf.text.pdf.PdfName;", &ComItextpdfTextPdfPdfPage_boxNames_,  },
    { "PORTRAIT_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfNumber;", &ComItextpdfTextPdfPdfPage_PORTRAIT_,  },
    { "LANDSCAPE_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfNumber;", &ComItextpdfTextPdfPdfPage_LANDSCAPE_,  },
    { "INVERTEDPORTRAIT_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfNumber;", &ComItextpdfTextPdfPdfPage_INVERTEDPORTRAIT_,  },
    { "SEASCAPE_", NULL, 0x19, "Lcom.itextpdf.text.pdf.PdfNumber;", &ComItextpdfTextPdfPdfPage_SEASCAPE_,  },
    { "mediaBox_", NULL, 0x0, "Lcom.itextpdf.text.pdf.PdfRectangle;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfPage = { "PdfPage", "com.itextpdf.text.pdf", NULL, 0x1, 6, methods, 7, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfPage;
}

@end

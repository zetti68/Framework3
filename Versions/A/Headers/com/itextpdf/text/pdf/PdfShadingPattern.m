//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfShadingPattern.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfShadingPattern.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/ColorDetails.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfIndirectObject.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfShading.h"
#include "com/itextpdf/text/pdf/PdfShadingPattern.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "java/io/IOException.h"
#include "java/lang/RuntimeException.h"


#line 53
@implementation ComItextpdfTextPdfPdfShadingPattern


#line 66
- (instancetype)initWithComItextpdfTextPdfPdfShading:(ComItextpdfTextPdfPdfShading *)shading {
  if (self = [super init]) {
    matrix_ = [IOSFloatArray arrayWithFloats:(jfloat[]){
#line 59
      1, 0, 0, 1, 0, 0 } count:6];
      
#line 67
      writer_ = [((ComItextpdfTextPdfPdfShading *) nil_chk(shading)) getWriter];
      
#line 68
      [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PATTERNTYPE_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:2]];
      
#line 69
      self->shading_ = shading;
    }
    return self;
  }


#line 72
- (ComItextpdfTextPdfPdfName *)getPatternName {
  
#line 73
  return patternName_;
}


#line 76
- (ComItextpdfTextPdfPdfName *)getShadingName {
  
#line 77
  return [((ComItextpdfTextPdfPdfShading *) nil_chk(shading_)) getShadingName];
}


#line 80
- (ComItextpdfTextPdfPdfIndirectReference *)getPatternReference {
  
#line 81
  if (patternReference_ == nil)
#line 82
  patternReference_ = [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) getPdfIndirectReference];
  return patternReference_;
}


#line 86
- (ComItextpdfTextPdfPdfIndirectReference *)getShadingReference {
  
#line 87
  return [((ComItextpdfTextPdfPdfShading *) nil_chk(shading_)) getShadingReference];
}


#line 90
- (void)setNameWithInt:(jint)number {
  
#line 91
  patternName_ = [[ComItextpdfTextPdfPdfName alloc] initWithNSString:JreStrcat("CI", 'P', number)];
}


#line 94
- (void)addToBody {
  
#line 95
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SHADING_() withComItextpdfTextPdfPdfObject:[self getShadingReference]];
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_MATRIX_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:matrix_]];
  (void) [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) addToBodyWithComItextpdfTextPdfPdfObject:self withComItextpdfTextPdfPdfIndirectReference:[self getPatternReference]];
}


#line 100
- (void)setMatrixWithFloatArray:(IOSFloatArray *)matrix {
  
#line 101
  if (((IOSFloatArray *) nil_chk(matrix))->size_ != 6)
#line 102
  @throw [[JavaLangRuntimeException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"the.matrix.size.must.be.6" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  self->matrix_ = matrix;
}


#line 106
- (IOSFloatArray *)getMatrix {
  
#line 107
  return matrix_;
}


#line 110
- (ComItextpdfTextPdfPdfShading *)getShading {
  
#line 111
  return shading_;
}


#line 114
- (ComItextpdfTextPdfColorDetails *)getColorDetails {
  
#line 115
  return [((ComItextpdfTextPdfPdfShading *) nil_chk(shading_)) getColorDetails];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfShadingPattern *)other {
  [super copyAllFieldsTo:other];
  other->matrix_ = matrix_;
  other->patternName_ = patternName_;
  other->patternReference_ = patternReference_;
  other->shading_ = shading_;
  other->writer_ = writer_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfShading:", "PdfShadingPattern", NULL, 0x1, NULL },
    { "getPatternName", NULL, "Lcom.itextpdf.text.pdf.PdfName;", 0x0, NULL },
    { "getShadingName", NULL, "Lcom.itextpdf.text.pdf.PdfName;", 0x0, NULL },
    { "getPatternReference", NULL, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", 0x0, NULL },
    { "getShadingReference", NULL, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", 0x0, NULL },
    { "setNameWithInt:", "setName", "V", 0x0, NULL },
    { "addToBody", NULL, "V", 0x1, "Ljava.io.IOException;" },
    { "setMatrixWithFloatArray:", "setMatrix", "V", 0x1, NULL },
    { "getMatrix", NULL, "[F", 0x1, NULL },
    { "getShading", NULL, "Lcom.itextpdf.text.pdf.PdfShading;", 0x1, NULL },
    { "getColorDetails", NULL, "Lcom.itextpdf.text.pdf.ColorDetails;", 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "shading_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfShading;", NULL,  },
    { "writer_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfWriter;", NULL,  },
    { "matrix_", NULL, 0x4, "[F", NULL,  },
    { "patternName_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfName;", NULL,  },
    { "patternReference_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfShadingPattern = { "PdfShadingPattern", "com.itextpdf.text.pdf", NULL, 0x1, 11, methods, 5, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfShadingPattern;
}

@end

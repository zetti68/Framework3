//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPattern.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPattern.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/ExceptionConverter.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfPattern.h"
#include "com/itextpdf/text/pdf/PdfPatternPainter.h"
#include "com/itextpdf/text/pdf/PdfRectangle.h"
#include "com/itextpdf/text/pdf/PdfStream.h"
#include "java/lang/Exception.h"


#line 55
@implementation ComItextpdfTextPdfPdfPattern


#line 61
- (instancetype)initWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)painter {
  return
#line 62
  [self initComItextpdfTextPdfPdfPatternWithComItextpdfTextPdfPdfPatternPainter:painter withInt:ComItextpdfTextPdfPdfStream_DEFAULT_COMPRESSION];
}


#line 71
- (instancetype)initComItextpdfTextPdfPdfPatternWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)painter
                                                                                withInt:(jint)compressionLevel {
  if (self =
#line 72
  [super init]) {
    
#line 73
    ComItextpdfTextPdfPdfNumber *one = [[ComItextpdfTextPdfPdfNumber alloc] initWithInt:1];
    
#line 74
    ComItextpdfTextPdfPdfArray *matrix = [((ComItextpdfTextPdfPdfPatternPainter *) nil_chk(painter)) getMatrix];
    
#line 75
    if (matrix != nil) {
      [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_MATRIX_() withComItextpdfTextPdfPdfObject:matrix];
    }
    
#line 78
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_PATTERN_()];
    
#line 79
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BBOX_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfRectangle alloc] initWithComItextpdfTextRectangle:[painter getBoundingBox]]];
    
#line 80
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_RESOURCES_() withComItextpdfTextPdfPdfObject:[painter getResources]];
    
#line 81
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TILINGTYPE_() withComItextpdfTextPdfPdfObject:one];
    
#line 82
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PATTERNTYPE_() withComItextpdfTextPdfPdfObject:one];
    
#line 83
    if ([painter isStencil])
#line 84
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PAINTTYPE_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:2]];
    else
#line 86
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PAINTTYPE_() withComItextpdfTextPdfPdfObject:one];
    
#line 87
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_XSTEP_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[painter getXStep]]];
    
#line 88
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_YSTEP_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[painter getYStep]]];
    
#line 89
    bytes_ = [painter toPdfWithComItextpdfTextPdfPdfWriter:nil];
    
#line 90
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LENGTH_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:((IOSByteArray *) nil_chk(bytes_))->size_]];
    
#line 91
    @try {
      [self flateCompressWithInt:compressionLevel];
    }
    @catch (
#line 93
    JavaLangException *e) {
      @throw [[ComItextpdfTextExceptionConverter alloc] initWithJavaLangException:e];
    }
  }
  return self;
}

- (instancetype)initWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)painter
                                                    withInt:(jint)compressionLevel {
  return [self initComItextpdfTextPdfPdfPatternWithComItextpdfTextPdfPdfPatternPainter:
#line 71
painter withInt:compressionLevel];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfPatternPainter:", "PdfPattern", NULL, 0x0, NULL },
    { "initWithComItextpdfTextPdfPdfPatternPainter:withInt:", "PdfPattern", NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfPattern = { "PdfPattern", "com.itextpdf.text.pdf", NULL, 0x1, 2, methods, 0, NULL, 0, NULL};
  return &_ComItextpdfTextPdfPdfPattern;
}

@end

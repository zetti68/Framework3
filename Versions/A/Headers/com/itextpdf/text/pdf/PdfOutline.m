//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfOutline.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfOutline.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/Chunk.h"
#include "com/itextpdf/text/Font.h"
#include "com/itextpdf/text/Paragraph.h"
#include "com/itextpdf/text/pdf/PdfAction.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfDestination.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfOutline.h"
#include "com/itextpdf/text/pdf/PdfString.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"


#line 66
@implementation ComItextpdfTextPdfPdfOutline


#line 112
- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer {
  if (self =
#line 113
  [super initWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfDictionary_get_OUTLINES_()]) {
    count_ =
#line 74
    0;
    kids_ =
#line 86
    [[JavaUtilArrayList alloc] init];
    style_ =
#line 100
    0;
    
#line 114
    open_ = YES;
    
#line 115
    parent__ = nil;
    
#line 116
    self->writer_ = writer;
  }
  return self;
}


#line 130
- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                     withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                                        withNSString:(NSString *)title {
  return
#line 131
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfAction:action withNSString:title withBoolean:YES];
}


#line 144
- (instancetype)initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                                                 withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                                                                    withNSString:(NSString *)title
                                                                     withBoolean:(jboolean)open {
  if (self =
#line 145
  [super init]) {
    count_ =
#line 74
    0;
    kids_ =
#line 86
    [[JavaUtilArrayList alloc] init];
    style_ =
#line 100
    0;
    
#line 146
    self->action_ = action;
    
#line 147
    [self initOutlineWithComItextpdfTextPdfPdfOutline:parent withNSString:title withBoolean:open];
  }
  return self;
}

- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                     withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                                        withNSString:(NSString *)title
                                         withBoolean:(jboolean)open {
  return [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:
#line 144
parent withComItextpdfTextPdfPdfAction:action withNSString:title withBoolean:open];
}


#line 161
- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                                        withNSString:(NSString *)title {
  return
#line 162
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfDestination:destination withNSString:title withBoolean:YES];
}


#line 175
- (instancetype)initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                                            withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                                                                    withNSString:(NSString *)title
                                                                     withBoolean:(jboolean)open {
  if (self =
#line 176
  [super init]) {
    count_ =
#line 74
    0;
    kids_ =
#line 86
    [[JavaUtilArrayList alloc] init];
    style_ =
#line 100
    0;
    
#line 177
    self->destination_ = destination;
    
#line 178
    [self initOutlineWithComItextpdfTextPdfPdfOutline:parent withNSString:title withBoolean:open];
  }
  return self;
}

- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                                        withNSString:(NSString *)title
                                         withBoolean:(jboolean)open {
  return [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:
#line 175
parent withComItextpdfTextPdfPdfDestination:destination withNSString:title withBoolean:open];
}


#line 191
- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                     withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                     withComItextpdfTextPdfPdfString:(ComItextpdfTextPdfPdfString *)title {
  return
#line 192
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfAction:action withComItextpdfTextPdfPdfString:title withBoolean:YES];
}


#line 205
- (instancetype)initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                                                 withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                                                 withComItextpdfTextPdfPdfString:(ComItextpdfTextPdfPdfString *)title
                                                                     withBoolean:(jboolean)open {
  return
#line 206
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfAction:action withNSString:[((ComItextpdfTextPdfPdfString *) nil_chk(title)) description] withBoolean:open];
}

- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                     withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                     withComItextpdfTextPdfPdfString:(ComItextpdfTextPdfPdfString *)title
                                         withBoolean:(jboolean)open {
  return [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:
#line 205
parent withComItextpdfTextPdfPdfAction:action withComItextpdfTextPdfPdfString:title withBoolean:open];
}


#line 220
- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                     withComItextpdfTextPdfPdfString:(ComItextpdfTextPdfPdfString *)title {
  return
#line 221
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfDestination:destination withComItextpdfTextPdfPdfString:title withBoolean:YES];
}


#line 234
- (instancetype)initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                                            withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                                                 withComItextpdfTextPdfPdfString:(ComItextpdfTextPdfPdfString *)title
                                                                     withBoolean:(jboolean)open {
  return
#line 235
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfDestination:destination withNSString:[((ComItextpdfTextPdfPdfString *) nil_chk(title)) description] withBoolean:YES];
}

- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                     withComItextpdfTextPdfPdfString:(ComItextpdfTextPdfPdfString *)title
                                         withBoolean:(jboolean)open {
  return [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:
#line 234
parent withComItextpdfTextPdfPdfDestination:destination withComItextpdfTextPdfPdfString:title withBoolean:open];
}


#line 249
- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                     withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                        withComItextpdfTextParagraph:(ComItextpdfTextParagraph *)title {
  return
#line 250
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfAction:action withComItextpdfTextParagraph:title withBoolean:YES];
}


#line 263
- (instancetype)initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                                                 withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                                                    withComItextpdfTextParagraph:(ComItextpdfTextParagraph *)title
                                                                     withBoolean:(jboolean)open {
  if (self =
#line 264
  [super init]) {
    count_ =
#line 74
    0;
    kids_ =
#line 86
    [[JavaUtilArrayList alloc] init];
    style_ =
#line 100
    0;
    
#line 265
    JavaLangStringBuffer *buf = [[JavaLangStringBuffer alloc] init];
    
#line 266
    for (ComItextpdfTextChunk * __strong chunk in nil_chk([((ComItextpdfTextParagraph *) nil_chk(title)) getChunks])) {
      (void) [buf appendWithNSString:[((ComItextpdfTextChunk *) nil_chk(chunk)) getContent]];
    }
    
#line 269
    self->action_ = action;
    
#line 270
    [self initOutlineWithComItextpdfTextPdfPdfOutline:parent withNSString:[buf description] withBoolean:open];
  }
  return self;
}

- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                     withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                        withComItextpdfTextParagraph:(ComItextpdfTextParagraph *)title
                                         withBoolean:(jboolean)open {
  return [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:
#line 263
parent withComItextpdfTextPdfPdfAction:action withComItextpdfTextParagraph:title withBoolean:open];
}


#line 284
- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                        withComItextpdfTextParagraph:(ComItextpdfTextParagraph *)title {
  return
#line 285
  [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:parent withComItextpdfTextPdfPdfDestination:destination withComItextpdfTextParagraph:title withBoolean:YES];
}


#line 298
- (instancetype)initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                                            withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                                                    withComItextpdfTextParagraph:(ComItextpdfTextParagraph *)title
                                                                     withBoolean:(jboolean)open {
  if (self =
#line 299
  [super init]) {
    count_ =
#line 74
    0;
    kids_ =
#line 86
    [[JavaUtilArrayList alloc] init];
    style_ =
#line 100
    0;
    
#line 300
    JavaLangStringBuffer *buf = [[JavaLangStringBuffer alloc] init];
    
#line 301
    for (id __strong element in nil_chk([((ComItextpdfTextParagraph *) nil_chk(title)) getChunks])) {
      ComItextpdfTextChunk *chunk = (ComItextpdfTextChunk *) check_class_cast(element, [ComItextpdfTextChunk class]);
      (void) [buf appendWithNSString:[((ComItextpdfTextChunk *) nil_chk(chunk)) getContent]];
    }
    
#line 305
    self->destination_ = destination;
    
#line 306
    [self initOutlineWithComItextpdfTextPdfPdfOutline:parent withNSString:[buf description] withBoolean:open];
  }
  return self;
}

- (instancetype)initWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination
                        withComItextpdfTextParagraph:(ComItextpdfTextParagraph *)title
                                         withBoolean:(jboolean)open {
  return [self initComItextpdfTextPdfPdfOutlineWithComItextpdfTextPdfPdfOutline:
#line 298
parent withComItextpdfTextPdfPdfDestination:destination withComItextpdfTextParagraph:title withBoolean:open];
}


#line 317
- (void)initOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)parent
                                       withNSString:(NSString *)title
                                        withBoolean:(jboolean)open {
  
#line 318
  self->open_ = open;
  self->parent__ = parent;
  writer_ = ((ComItextpdfTextPdfPdfOutline *) nil_chk(parent))->writer_;
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TITLE_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:title withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
  [parent addKidWithComItextpdfTextPdfPdfOutline:self];
  if (destination_ != nil && ![destination_ hasPage])
#line 324
  [self setDestinationPageWithComItextpdfTextPdfPdfIndirectReference:[((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) getCurrentPage]];
}


#line 333
- (void)setIndirectReferenceWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)reference {
  
#line 334
  self->reference_ = reference;
}


#line 343
- (ComItextpdfTextPdfPdfIndirectReference *)indirectReference {
  
#line 344
  return reference_;
}


#line 353
- (ComItextpdfTextPdfPdfOutline *)parent {
  
#line 354
  return parent__;
}


#line 364
- (jboolean)setDestinationPageWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)pageReference {
  
#line 365
  if (destination_ == nil) {
    return NO;
  }
  return [((ComItextpdfTextPdfPdfDestination *) nil_chk(destination_)) addPageWithComItextpdfTextPdfPdfIndirectReference:pageReference];
}


#line 375
- (ComItextpdfTextPdfPdfDestination *)getPdfDestination {
  
#line 376
  return destination_;
}


#line 379
- (jint)getCount {
  
#line 380
  return count_;
}


#line 383
- (void)setCountWithInt:(jint)count {
  
#line 384
  self->count_ = count;
}


#line 393
- (jint)level {
  
#line 394
  if (parent__ == nil) {
    return 0;
  }
  return [((ComItextpdfTextPdfPdfOutline *) nil_chk(parent__)) level] + 1;
}


#line 409
- (void)toPdfWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                      withJavaIoOutputStream:(JavaIoOutputStream *)os {
  
#line 410
  if (color_ != nil && ![color_ isEqual:ComItextpdfTextBaseColor_get_BLACK_()]) {
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_C_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:[IOSFloatArray arrayWithFloats:(jfloat[]){ [color_ getRed] / 255.0f, [color_ getGreen] / 255.0f, [color_ getBlue] / 255.0f } count:3]]];
  }
  jint flag = 0;
  if ((style_ & ComItextpdfTextFont_BOLD) != 0)
#line 415
  flag |= 2;
  if ((style_ & ComItextpdfTextFont_ITALIC) != 0)
#line 417
  flag |= 1;
  if (flag != 0)
#line 419
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_F_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:flag]];
  if (parent__ != nil) {
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PARENT_() withComItextpdfTextPdfPdfObject:[parent__ indirectReference]];
  }
  if (destination_ != nil && [destination_ hasPage]) {
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_DEST_() withComItextpdfTextPdfPdfObject:destination_];
  }
  if (action_ != nil)
#line 427
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_A_() withComItextpdfTextPdfPdfObject:action_];
  if (count_ != 0) {
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COUNT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:count_]];
  }
  [super toPdfWithComItextpdfTextPdfPdfWriter:writer withJavaIoOutputStream:os];
}


#line 438
- (void)addKidWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)outline {
  
#line 439
  [((JavaUtilArrayList *) nil_chk(kids_)) addWithId:outline];
}


#line 446
- (JavaUtilArrayList *)getKids {
  
#line 447
  return kids_;
}


#line 454
- (void)setKidsWithJavaUtilArrayList:(JavaUtilArrayList *)kids {
  
#line 455
  self->kids_ = kids;
}


#line 461
- (NSString *)getTag {
  
#line 462
  return tag_;
}


#line 468
- (void)setTagWithNSString:(NSString *)tag {
  
#line 469
  self->tag_ = tag;
}


#line 476
- (NSString *)getTitle {
  
#line 477
  ComItextpdfTextPdfPdfString *title = (ComItextpdfTextPdfPdfString *) check_class_cast([self getWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TITLE_()], [ComItextpdfTextPdfPdfString class]);
  return [((ComItextpdfTextPdfPdfString *) nil_chk(title)) description];
}


#line 485
- (void)setTitleWithNSString:(NSString *)title {
  
#line 486
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TITLE_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:title withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 492
- (jboolean)isOpen {
  
#line 493
  return open_;
}


#line 499
- (void)setOpenWithBoolean:(jboolean)open {
  
#line 500
  self->open_ = open;
}


#line 507
- (ComItextpdfTextBaseColor *)getColor {
  
#line 508
  return self->color_;
}


#line 515
- (void)setColorWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 516
  self->color_ = color;
}


#line 523
- (jint)getStyle {
  
#line 524
  return self->style_;
}


#line 531
- (void)setStyleWithInt:(jint)style {
  
#line 532
  self->style_ = style;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfOutline *)other {
  [super copyAllFieldsTo:other];
  other->action_ = action_;
  other->color_ = color_;
  other->count_ = count_;
  other->destination_ = destination_;
  other->kids_ = kids_;
  other->open_ = open_;
  other->parent__ = parent__;
  other->reference_ = reference_;
  other->style_ = style_;
  other->tag_ = tag_;
  other->writer_ = writer_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfWriter:", "PdfOutline", NULL, 0x0, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfAction:withNSString:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfAction:withNSString:withBoolean:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfDestination:withNSString:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfDestination:withNSString:withBoolean:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfAction:withComItextpdfTextPdfPdfString:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfAction:withComItextpdfTextPdfPdfString:withBoolean:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfDestination:withComItextpdfTextPdfPdfString:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfDestination:withComItextpdfTextPdfPdfString:withBoolean:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfAction:withComItextpdfTextParagraph:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfAction:withComItextpdfTextParagraph:withBoolean:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfDestination:withComItextpdfTextParagraph:", "PdfOutline", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfOutline:withComItextpdfTextPdfPdfDestination:withComItextpdfTextParagraph:withBoolean:", "PdfOutline", NULL, 0x1, NULL },
    { "initOutlineWithComItextpdfTextPdfPdfOutline:withNSString:withBoolean:", "initOutline", "V", 0x0, NULL },
    { "setIndirectReferenceWithComItextpdfTextPdfPdfIndirectReference:", "setIndirectReference", "V", 0x1, NULL },
    { "indirectReference", NULL, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", 0x1, NULL },
    { "parent", NULL, "Lcom.itextpdf.text.pdf.PdfOutline;", 0x1, NULL },
    { "setDestinationPageWithComItextpdfTextPdfPdfIndirectReference:", "setDestinationPage", "Z", 0x1, NULL },
    { "getPdfDestination", NULL, "Lcom.itextpdf.text.pdf.PdfDestination;", 0x1, NULL },
    { "getCount", NULL, "I", 0x0, NULL },
    { "setCountWithInt:", "setCount", "V", 0x0, NULL },
    { "level", NULL, "I", 0x1, NULL },
    { "toPdfWithComItextpdfTextPdfPdfWriter:withJavaIoOutputStream:", "toPdf", "V", 0x1, "Ljava.io.IOException;" },
    { "addKidWithComItextpdfTextPdfPdfOutline:", "addKid", "V", 0x1, NULL },
    { "getKids", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "setKidsWithJavaUtilArrayList:", "setKids", "V", 0x1, NULL },
    { "getTag", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "setTagWithNSString:", "setTag", "V", 0x1, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "setTitleWithNSString:", "setTitle", "V", 0x1, NULL },
    { "isOpen", NULL, "Z", 0x1, NULL },
    { "setOpenWithBoolean:", "setOpen", "V", 0x1, NULL },
    { "getColor", NULL, "Lcom.itextpdf.text.BaseColor;", 0x1, NULL },
    { "setColorWithComItextpdfTextBaseColor:", "setColor", "V", 0x1, NULL },
    { "getStyle", NULL, "I", 0x1, NULL },
    { "setStyleWithInt:", "setStyle", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "reference_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", NULL,  },
    { "count_", NULL, 0x2, "I", NULL,  },
    { "parent__", "parent", 0x2, "Lcom.itextpdf.text.pdf.PdfOutline;", NULL,  },
    { "destination_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfDestination;", NULL,  },
    { "action_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfAction;", NULL,  },
    { "kids_", NULL, 0x4, "Ljava.util.ArrayList;", NULL,  },
    { "writer_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfWriter;", NULL,  },
    { "tag_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "open_", NULL, 0x2, "Z", NULL,  },
    { "color_", NULL, 0x2, "Lcom.itextpdf.text.BaseColor;", NULL,  },
    { "style_", NULL, 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfOutline = { "PdfOutline", "com.itextpdf.text.pdf", NULL, 0x1, 36, methods, 11, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfOutline;
}

@end

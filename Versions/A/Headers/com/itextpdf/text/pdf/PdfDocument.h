//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfDocument.java
//

#ifndef _ComItextpdfTextPdfPdfDocument_H_
#define _ComItextpdfTextPdfPdfDocument_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/Document.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"

@class ComItextpdfTextFont;
@class ComItextpdfTextImage;
@class ComItextpdfTextPdfCollectionPdfCollection;
@class ComItextpdfTextPdfInternalPdfAnnotationsImp;
@class ComItextpdfTextPdfInternalPdfViewerPreferencesImp;
@class ComItextpdfTextPdfPageResources;
@class ComItextpdfTextPdfPdfAcroForm;
@class ComItextpdfTextPdfPdfAction;
@class ComItextpdfTextPdfPdfAnnotation;
@class ComItextpdfTextPdfPdfContentByte;
@class ComItextpdfTextPdfPdfDestination;
@class ComItextpdfTextPdfPdfDocument_Indentation;
@class ComItextpdfTextPdfPdfDocument_PdfCatalog;
@class ComItextpdfTextPdfPdfDocument_PdfInfo;
@class ComItextpdfTextPdfPdfFileSpecification;
@class ComItextpdfTextPdfPdfFormField;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfLine;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfOutline;
@class ComItextpdfTextPdfPdfPTable;
@class ComItextpdfTextPdfPdfPageLabels;
@class ComItextpdfTextPdfPdfString;
@class ComItextpdfTextPdfPdfTransition;
@class ComItextpdfTextPdfPdfWriter;
@class ComItextpdfTextRectangle;
@class ComItextpdfTextTabSettings;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaTextDecimalFormat;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@class JavaUtilTreeMap;
@protocol ComItextpdfTextElement;

@interface ComItextpdfTextPdfPdfDocument : ComItextpdfTextDocument {
 @public
  ComItextpdfTextPdfPdfWriter *writer_;
  JavaUtilHashMap *structElements_;
  jboolean openMCDocument_;
  JavaUtilHashMap *structParentIndices_;
  JavaUtilHashMap *markPoints_;
  ComItextpdfTextPdfPdfContentByte *text_;
  ComItextpdfTextPdfPdfContentByte *graphics_;
  jfloat leading_;
  jint alignment_;
  jfloat currentHeight_;
  jboolean isSectionTitle_;
  ComItextpdfTextPdfPdfAction *anchorAction_;
  ComItextpdfTextTabSettings *tabSettings_;
  jint textEmptySize_;
  jfloat nextMarginLeft_;
  jfloat nextMarginRight_;
  jfloat nextMarginTop_;
  jfloat nextMarginBottom_;
  jboolean firstPageEvent_;
  ComItextpdfTextPdfPdfLine *line_;
  JavaUtilArrayList *lines_;
  jint lastElementType_;
  ComItextpdfTextPdfPdfDocument_Indentation *indentation_;
  ComItextpdfTextPdfPdfDocument_PdfInfo *info_;
  ComItextpdfTextPdfPdfOutline *rootOutline_;
  ComItextpdfTextPdfPdfOutline *currentOutline_;
  ComItextpdfTextPdfInternalPdfViewerPreferencesImp *viewerPreferences_;
  ComItextpdfTextPdfPdfPageLabels *pageLabels_;
  JavaUtilTreeMap *localDestinations_;
  jint jsCounter_;
  JavaUtilHashMap *documentLevelJS_;
  JavaUtilHashMap *documentFileAttachment_;
  NSString *openActionName_;
  ComItextpdfTextPdfPdfAction *openActionAction_;
  ComItextpdfTextPdfPdfDictionary *additionalActions_;
  ComItextpdfTextPdfCollectionPdfCollection *collection_;
  ComItextpdfTextPdfInternalPdfAnnotationsImp *annotationsImp_;
  ComItextpdfTextPdfPdfString *language_;
  ComItextpdfTextRectangle *nextPageSize_;
  JavaUtilHashMap *thisBoxSize_;
  JavaUtilHashMap *boxSize_;
  ComItextpdfTextPdfPdfDictionary *pageAA_;
  ComItextpdfTextPdfPageResources *pageResources_;
  jboolean strictImageSequence_;
  jfloat imageEnd_;
  ComItextpdfTextImage *imageWait_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)addWithComItextpdfTextElement:(id<ComItextpdfTextElement>)element;

- (void)addWriterWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)clearTextWrap;

- (void)close;

- (jfloat)getLeading;

- (jint)getNextMarkPointWithId:(id)obj;

- (ComItextpdfTextPdfPdfPageLabels *)getPageLabels;

- (ComItextpdfTextPdfPdfOutline *)getRootOutline;

- (jint)getStructParentIndexWithId:(id)obj;

- (IOSIntArray *)getStructParentIndexAndNextMarkPointWithId:(id)obj;

- (ComItextpdfTextTabSettings *)getTabSettings;

- (jfloat)getVerticalPositionWithBoolean:(jboolean)ensureNewLine;

- (jboolean)newPage OBJC_METHOD_FAMILY_NONE;

- (void)open;

- (void)resetPageCount;

- (void)setCollectionWithComItextpdfTextPdfCollectionPdfCollection:(ComItextpdfTextPdfCollectionPdfCollection *)collection;

- (jboolean)setMarginMirroringWithBoolean:(jboolean)MarginMirroring;

- (jboolean)setMarginMirroringTopBottomWithBoolean:(jboolean)MarginMirroringTopBottom;

- (jboolean)setMarginsWithFloat:(jfloat)marginLeft
                      withFloat:(jfloat)marginRight
                      withFloat:(jfloat)marginTop
                      withFloat:(jfloat)marginBottom;

- (void)setPageCountWithInt:(jint)pageN;

- (jboolean)setPageSizeWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)pageSize;

- (void)setTabSettingsWithComItextpdfTextTabSettings:(ComItextpdfTextTabSettings *)tabSettings;

- (void)setXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata;

#pragma mark Protected

- (void)addWithComItextpdfTextImage:(ComItextpdfTextImage *)image;

- (void)addSpacingWithFloat:(jfloat)extraspace
                  withFloat:(jfloat)oldleading
    withComItextpdfTextFont:(ComItextpdfTextFont *)f;

- (void)carriageReturn;

- (void)ensureNewLine;

- (jfloat)flushLines;

- (jfloat)indentLeft;

- (jfloat)indentRight;

- (jfloat)indentTop;

- (void)initPage OBJC_METHOD_FAMILY_NONE;

- (void)newLine OBJC_METHOD_FAMILY_NONE;

- (void)popLeading;

- (void)pushLeading;

- (void)setNewPageSizeAndMargins;

#pragma mark Package-Private

- (void)addAdditionalActionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)actionType
                         withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot;

- (void)addCalculationOrderWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)formField;

- (void)addFileAttachmentWithNSString:(NSString *)description_
withComItextpdfTextPdfPdfFileSpecification:(ComItextpdfTextPdfPdfFileSpecification *)fs;

- (void)addJavaScriptWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)js;

- (void)addJavaScriptWithNSString:(NSString *)name
  withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)js;

- (void)addOutlineWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)outline
                                      withNSString:(NSString *)name;

- (void)addPTableWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)ptable;

- (void)addViewerPreferenceWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                         withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (void)calculateOutlineCount;

- (jboolean)fitsPageWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)table
                                          withFloat:(jfloat)margin;

- (ComItextpdfTextPdfPdfAcroForm *)getAcroForm;

- (ComItextpdfTextRectangle *)getBoxSizeWithNSString:(NSString *)boxName;

- (ComItextpdfTextPdfPdfDocument_PdfCatalog *)getCatalogWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)pages;

- (JavaUtilHashMap *)getDocumentFileAttachment;

- (JavaUtilHashMap *)getDocumentLevelJS;

- (ComItextpdfTextPdfPdfDocument_PdfInfo *)getInfo;

- (ComItextpdfTextPdfPdfAction *)getLocalGotoActionWithNSString:(NSString *)name;

- (ComItextpdfTextPdfPageResources *)getPageResources;

- (jfloat)indentBottom;

- (jboolean)isPageEmpty;

- (jboolean)isStrictImageSequence;

- (jboolean)localDestinationWithNSString:(NSString *)name
    withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)destination;

- (void)localGotoWithNSString:(NSString *)name
                    withFloat:(jfloat)llx
                    withFloat:(jfloat)lly
                    withFloat:(jfloat)urx
                    withFloat:(jfloat)ury;

- (void)outlineTreeWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)outline;

- (void)remoteGotoWithNSString:(NSString *)filename
                       withInt:(jint)page
                     withFloat:(jfloat)llx
                     withFloat:(jfloat)lly
                     withFloat:(jfloat)urx
                     withFloat:(jfloat)ury;

- (void)remoteGotoWithNSString:(NSString *)filename
                  withNSString:(NSString *)name
                     withFloat:(jfloat)llx
                     withFloat:(jfloat)lly
                     withFloat:(jfloat)urx
                     withFloat:(jfloat)ury;

- (void)setActionWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                                       withFloat:(jfloat)llx
                                       withFloat:(jfloat)lly
                                       withFloat:(jfloat)urx
                                       withFloat:(jfloat)ury;

- (void)setBoxSizeWithNSString:(NSString *)boxName
  withComItextpdfTextRectangle:(ComItextpdfTextRectangle *)size;

- (void)setCropBoxSizeWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)crop;

- (void)setDurationWithInt:(jint)seconds;

- (void)setLanguageWithNSString:(NSString *)language;

- (void)setLeadingWithFloat:(jfloat)leading;

- (void)setOpenActionWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setOpenActionWithNSString:(NSString *)name;

- (void)setPageActionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)actionType
                   withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setPageEmptyWithBoolean:(jboolean)pageEmpty;

- (void)setPageLabelsWithComItextpdfTextPdfPdfPageLabels:(ComItextpdfTextPdfPdfPageLabels *)pageLabels;

- (void)setSigFlagsWithInt:(jint)f;

- (void)setStrictImageSequenceWithBoolean:(jboolean)strictImageSequence;

- (void)setThumbnailWithComItextpdfTextImage:(ComItextpdfTextImage *)image;

- (void)setTransitionWithComItextpdfTextPdfPdfTransition:(ComItextpdfTextPdfPdfTransition *)transition;

- (void)setViewerPreferencesWithInt:(jint)preferences;

- (void)traverseOutlineCountWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)outline;

- (jfloat)writeLineToContentWithComItextpdfTextPdfPdfLine:(ComItextpdfTextPdfPdfLine *)line
                     withComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)text
                     withComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)graphics
                                        withNSObjectArray:(IOSObjectArray *)currentValues
                                                withFloat:(jfloat)ratio;

- (void)writeOutlines;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfDocument)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, writer_, ComItextpdfTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, structElements_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, structParentIndices_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, markPoints_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, text_, ComItextpdfTextPdfPdfContentByte *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, graphics_, ComItextpdfTextPdfPdfContentByte *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, anchorAction_, ComItextpdfTextPdfPdfAction *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, tabSettings_, ComItextpdfTextTabSettings *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, line_, ComItextpdfTextPdfPdfLine *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, lines_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, indentation_, ComItextpdfTextPdfPdfDocument_Indentation *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, info_, ComItextpdfTextPdfPdfDocument_PdfInfo *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, rootOutline_, ComItextpdfTextPdfPdfOutline *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, currentOutline_, ComItextpdfTextPdfPdfOutline *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, viewerPreferences_, ComItextpdfTextPdfInternalPdfViewerPreferencesImp *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, pageLabels_, ComItextpdfTextPdfPdfPageLabels *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, localDestinations_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, documentLevelJS_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, documentFileAttachment_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, openActionName_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, openActionAction_, ComItextpdfTextPdfPdfAction *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, additionalActions_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, collection_, ComItextpdfTextPdfCollectionPdfCollection *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, annotationsImp_, ComItextpdfTextPdfInternalPdfAnnotationsImp *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, language_, ComItextpdfTextPdfPdfString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, nextPageSize_, ComItextpdfTextRectangle *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, thisBoxSize_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, boxSize_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, pageAA_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, pageResources_, ComItextpdfTextPdfPageResources *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument, imageWait_, ComItextpdfTextImage *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfPdfDocument_hangingPunctuation_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfDocument, hangingPunctuation_, NSString *)

FOUNDATION_EXPORT JavaTextDecimalFormat *ComItextpdfTextPdfPdfDocument_SIXTEEN_DIGITS_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfDocument, SIXTEEN_DIGITS_, JavaTextDecimalFormat *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfDocument_init(ComItextpdfTextPdfPdfDocument *self);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDocument *new_ComItextpdfTextPdfPdfDocument_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfDocument)

@interface ComItextpdfTextPdfPdfDocument_PdfInfo : ComItextpdfTextPdfPdfDictionary

#pragma mark Package-Private

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)author
                    withNSString:(NSString *)title
                    withNSString:(NSString *)subject;

- (void)addAuthorWithNSString:(NSString *)author;

- (void)addCreationDate;

- (void)addCreatorWithNSString:(NSString *)creator;

- (void)addkeyWithNSString:(NSString *)key
              withNSString:(NSString *)value;

- (void)addKeywordsWithNSString:(NSString *)keywords;

- (void)addProducer;

- (void)addSubjectWithNSString:(NSString *)subject;

- (void)addTitleWithNSString:(NSString *)title;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfDocument_PdfInfo)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfDocument_PdfInfo_init(ComItextpdfTextPdfPdfDocument_PdfInfo *self);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDocument_PdfInfo *new_ComItextpdfTextPdfPdfDocument_PdfInfo_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfDocument_PdfInfo_initWithNSString_withNSString_withNSString_(ComItextpdfTextPdfPdfDocument_PdfInfo *self, NSString *author, NSString *title, NSString *subject);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDocument_PdfInfo *new_ComItextpdfTextPdfPdfDocument_PdfInfo_initWithNSString_withNSString_withNSString_(NSString *author, NSString *title, NSString *subject) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfDocument_PdfInfo)

@interface ComItextpdfTextPdfPdfDocument_PdfCatalog : ComItextpdfTextPdfPdfDictionary {
 @public
  ComItextpdfTextPdfPdfWriter *writer_;
}

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)pages
                               withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)addNamesWithJavaUtilTreeMap:(JavaUtilTreeMap *)localDestinations
                withJavaUtilHashMap:(JavaUtilHashMap *)documentLevelJS
                withJavaUtilHashMap:(JavaUtilHashMap *)documentFileAttachment
    withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)setAdditionalActionsWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)actions;

- (void)setOpenActionWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfDocument_PdfCatalog)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument_PdfCatalog, writer_, ComItextpdfTextPdfPdfWriter *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfDocument_PdfCatalog_initWithComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfPdfDocument_PdfCatalog *self, ComItextpdfTextPdfPdfIndirectReference *pages, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDocument_PdfCatalog *new_ComItextpdfTextPdfPdfDocument_PdfCatalog_initWithComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfPdfIndirectReference *pages, ComItextpdfTextPdfPdfWriter *writer) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfDocument_PdfCatalog)

@interface ComItextpdfTextPdfPdfDocument_Indentation : NSObject {
 @public
  jfloat indentLeft_;
  jfloat sectionIndentLeft_;
  jfloat listIndentLeft_;
  jfloat imageIndentLeft_;
  jfloat indentRight_;
  jfloat sectionIndentRight_;
  jfloat imageIndentRight_;
  jfloat indentTop_;
  jfloat indentBottom_;
}

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfDocument_Indentation)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfDocument_Indentation_init(ComItextpdfTextPdfPdfDocument_Indentation *self);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDocument_Indentation *new_ComItextpdfTextPdfPdfDocument_Indentation_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfDocument_Indentation)

@interface ComItextpdfTextPdfPdfDocument_Destination : NSObject {
 @public
  ComItextpdfTextPdfPdfAction *action_;
  ComItextpdfTextPdfPdfIndirectReference *reference_;
  ComItextpdfTextPdfPdfDestination *destination_;
}

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfPdfDocument:(ComItextpdfTextPdfPdfDocument *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfDocument_Destination)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument_Destination, action_, ComItextpdfTextPdfPdfAction *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument_Destination, reference_, ComItextpdfTextPdfPdfIndirectReference *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfDocument_Destination, destination_, ComItextpdfTextPdfPdfDestination *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfDocument_Destination_initWithComItextpdfTextPdfPdfDocument_(ComItextpdfTextPdfPdfDocument_Destination *self, ComItextpdfTextPdfPdfDocument *outer$);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDocument_Destination *new_ComItextpdfTextPdfPdfDocument_Destination_initWithComItextpdfTextPdfPdfDocument_(ComItextpdfTextPdfPdfDocument *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfDocument_Destination)

#endif // _ComItextpdfTextPdfPdfDocument_H_

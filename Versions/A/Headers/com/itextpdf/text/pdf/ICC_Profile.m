//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/ICC_Profile.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/ICC_Profile.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/ExceptionConverter.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/ICC_Profile.h"
#include "java/io/FileInputStream.h"
#include "java/io/InputStream.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/HashMap.h"

BOOL ComItextpdfTextPdfICC_Profile_initialized = NO;


#line 55
@implementation ComItextpdfTextPdfICC_Profile

JavaUtilHashMap * ComItextpdfTextPdfICC_Profile_cstags_;


#line 60
- (instancetype)init {
  return [super init];
}


#line 63
+ (ComItextpdfTextPdfICC_Profile *)getInstanceWithByteArray:(IOSByteArray *)data
                                                    withInt:(jint)numComponents {
  if (((IOSByteArray *) nil_chk(data))->size_ < 128 || IOSByteArray_Get(data, 36) != (jint) 0x61 || IOSByteArray_Get(data, 37) != (jint) 0x63 ||
#line 65
  IOSByteArray_Get(data, 38) != (jint) 0x73 || IOSByteArray_Get(data, 39) != (jint) 0x70)
#line 66
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"invalid.icc.profile" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  @try {
    ComItextpdfTextPdfICC_Profile *icc = [[ComItextpdfTextPdfICC_Profile alloc] init];
    icc->data_ = data;
    JavaLangInteger *cs;
    cs = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfICC_Profile_cstags_)) getWithId:[NSString stringWithBytes:data offset:16 length:4 charsetName:@"US-ASCII"]];
    jint nc = cs == nil ? 0 : [cs intValue];
    icc->numComponents_ = nc;
    
#line 75
    if (nc != numComponents) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$I$I$", @"ICC profile contains ", nc, @" component(s), the image data contains ", numComponents, @" component(s)")];
    }
    return icc;
  }
  @catch (
#line 79
  JavaIoUnsupportedEncodingException *e) {
    @throw [[ComItextpdfTextExceptionConverter alloc] initWithJavaLangException:e];
  }
}


#line 84
+ (ComItextpdfTextPdfICC_Profile *)getInstanceWithByteArray:(IOSByteArray *)data {
  
#line 85
  @try {
    JavaLangInteger *cs;
    cs = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfICC_Profile_cstags_)) getWithId:[NSString stringWithBytes:data offset:16 length:4 charsetName:@"US-ASCII"]];
    jint numComponents = cs == nil ? 0 : [cs intValue];
    return [ComItextpdfTextPdfICC_Profile getInstanceWithByteArray:data withInt:numComponents];
  }
  @catch (
#line 90
  JavaIoUnsupportedEncodingException *e) {
    @throw [[ComItextpdfTextExceptionConverter alloc] initWithJavaLangException:e];
  }
}


#line 95
+ (ComItextpdfTextPdfICC_Profile *)getInstanceWithJavaIoInputStream:(JavaIoInputStream *)file {
  
#line 96
  @try {
    IOSByteArray *head = [IOSByteArray arrayWithLength:128];
    jint remain = head->size_;
    jint ptr = 0;
    while (remain > 0) {
      jint n = [((JavaIoInputStream *) nil_chk(file)) readWithByteArray:head withInt:ptr withInt:remain];
      if (n < 0)
#line 103
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"invalid.icc.profile" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
      remain -= n;
      ptr += n;
    }
    if (IOSByteArray_Get(head, 36) != (jint) 0x61 || IOSByteArray_Get(head, 37) != (jint) 0x63 ||
#line 108
    IOSByteArray_Get(head, 38) != (jint) 0x73 || IOSByteArray_Get(head, 39) != (jint) 0x70)
#line 109
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"invalid.icc.profile" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
    remain = (((LShift32((IOSByteArray_Get(head, 0) & (jint) 0xff), 24)) | (LShift32((IOSByteArray_Get(head, 1) & (jint) 0xff), 16))) | (LShift32(
#line 111
    (IOSByteArray_Get(head, 2) & (jint) 0xff), 8))) | (IOSByteArray_Get(head, 3) & (jint) 0xff);
    IOSByteArray *icc = [IOSByteArray arrayWithLength:remain];
    [JavaLangSystem arraycopyWithId:head withInt:0 withId:icc withInt:0 withInt:head->size_];
    remain -= head->size_;
    ptr = head->size_;
    while (remain > 0) {
      jint n = [((JavaIoInputStream *) nil_chk(file)) readWithByteArray:icc withInt:ptr withInt:remain];
      if (n < 0)
#line 119
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"invalid.icc.profile" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
      remain -= n;
      ptr += n;
    }
    return [ComItextpdfTextPdfICC_Profile getInstanceWithByteArray:icc];
  }
  @catch (JavaLangException *ex) {
    @throw [[ComItextpdfTextExceptionConverter alloc] initWithJavaLangException:ex];
  }
}


#line 130
+ (ComItextpdfTextPdfICC_Profile *)GetInstanceWithNSString:(NSString *)fname {
  
#line 131
  JavaIoFileInputStream *fs = nil;
  @try {
    fs = [[JavaIoFileInputStream alloc] initWithNSString:fname];
    ComItextpdfTextPdfICC_Profile *icc = [ComItextpdfTextPdfICC_Profile getInstanceWithJavaIoInputStream:fs];
    return icc;
  }
  @catch (JavaLangException *ex) {
    @throw [[ComItextpdfTextExceptionConverter alloc] initWithJavaLangException:ex];
  }
  @finally {
    @try {
      
#line 141
      [((JavaIoFileInputStream *) nil_chk(fs)) close];
    }
    @catch (
#line 141
    JavaLangException *x) {
    }
  }
}


#line 145
- (IOSByteArray *)getData {
  
#line 146
  return data_;
}


#line 149
- (jint)getNumComponents {
  
#line 150
  return numComponents_;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfICC_Profile *)other {
  [super copyAllFieldsTo:other];
  other->data_ = data_;
  other->numComponents_ = numComponents_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfICC_Profile class]) {
    ComItextpdfTextPdfICC_Profile_cstags_ =
#line 58
    [[JavaUtilHashMap alloc] init];
    {
      
#line 154
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"XYZ " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"Lab " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"Luv " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"YCbr" withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"Yxy " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"RGB " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"GRAY" withId:[JavaLangInteger valueOfWithInt:1]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"HSV " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"HLS " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"CMYK" withId:[JavaLangInteger valueOfWithInt:4]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"CMY " withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"2CLR" withId:[JavaLangInteger valueOfWithInt:2]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"3CLR" withId:[JavaLangInteger valueOfWithInt:3]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"4CLR" withId:[JavaLangInteger valueOfWithInt:4]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"5CLR" withId:[JavaLangInteger valueOfWithInt:5]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"6CLR" withId:[JavaLangInteger valueOfWithInt:6]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"7CLR" withId:[JavaLangInteger valueOfWithInt:7]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"8CLR" withId:[JavaLangInteger valueOfWithInt:8]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"9CLR" withId:[JavaLangInteger valueOfWithInt:9]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"ACLR" withId:[JavaLangInteger valueOfWithInt:10]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"BCLR" withId:[JavaLangInteger valueOfWithInt:11]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"CCLR" withId:[JavaLangInteger valueOfWithInt:12]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"DCLR" withId:[JavaLangInteger valueOfWithInt:13]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"ECLR" withId:[JavaLangInteger valueOfWithInt:14]];
      (void) [ComItextpdfTextPdfICC_Profile_cstags_ putWithId:@"FCLR" withId:[JavaLangInteger valueOfWithInt:15]];
    }
    ComItextpdfTextPdfICC_Profile_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ICC_Profile", NULL, 0x4, NULL },
    { "getInstanceWithByteArray:withInt:", "getInstance", "Lcom.itextpdf.text.pdf.ICC_Profile;", 0x9, NULL },
    { "getInstanceWithByteArray:", "getInstance", "Lcom.itextpdf.text.pdf.ICC_Profile;", 0x9, NULL },
    { "getInstanceWithJavaIoInputStream:", "getInstance", "Lcom.itextpdf.text.pdf.ICC_Profile;", 0x9, NULL },
    { "GetInstanceWithNSString:", "GetInstance", "Lcom.itextpdf.text.pdf.ICC_Profile;", 0x9, NULL },
    { "getData", NULL, "[B", 0x1, NULL },
    { "getNumComponents", NULL, "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x4, "[B", NULL,  },
    { "numComponents_", NULL, 0x4, "I", NULL,  },
    { "cstags_", NULL, 0xa, "Ljava.util.HashMap;", &ComItextpdfTextPdfICC_Profile_cstags_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfICC_Profile = { "ICC_Profile", "com.itextpdf.text.pdf", NULL, 0x1, 7, methods, 3, fields, 0, NULL};
  return &_ComItextpdfTextPdfICC_Profile;
}

@end

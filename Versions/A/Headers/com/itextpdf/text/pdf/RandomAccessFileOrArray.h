//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/RandomAccessFileOrArray.java
//

#ifndef _ComItextpdfTextPdfRandomAccessFileOrArray_H_
#define _ComItextpdfTextPdfRandomAccessFileOrArray_H_

#include "J2ObjC_header.h"
#include "java/io/DataInput.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaNetURL;
@protocol ComItextpdfTextIoRandomAccessSource;

@interface ComItextpdfTextPdfRandomAccessFileOrArray : NSObject < JavaIoDataInput >

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)arrayIn;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is;

- (instancetype)initWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)source;

- (instancetype)initWithComItextpdfTextIoRandomAccessSource:(id<ComItextpdfTextIoRandomAccessSource>)byteSource;

- (instancetype)initWithNSString:(NSString *)filename;

- (instancetype)initWithNSString:(NSString *)filename
                     withBoolean:(jboolean)forceRead
                     withBoolean:(jboolean)plainRandomAccess;

- (instancetype)initWithJavaNetURL:(JavaNetURL *)url;

- (void)close;

- (id<ComItextpdfTextIoRandomAccessSource>)createSourceView;

- (ComItextpdfTextPdfRandomAccessFileOrArray *)createView;

- (jlong)getFilePointer;

- (jlong)length;

- (void)pushBackWithByte:(jbyte)b;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

- (jboolean)readBoolean;

- (jbyte)readByte;

- (jchar)readChar;

- (jchar)readCharLE;

- (jdouble)readDouble;

- (jdouble)readDoubleLE;

- (jfloat)readFloat;

- (jfloat)readFloatLE;

- (void)readFullyWithByteArray:(IOSByteArray *)b;

- (void)readFullyWithByteArray:(IOSByteArray *)b
                       withInt:(jint)off
                       withInt:(jint)len;

- (jint)readInt;

- (jint)readIntLE;

- (NSString *)readLine;

- (jlong)readLong;

- (jlong)readLongLE;

- (jshort)readShort;

- (jshort)readShortLE;

- (NSString *)readStringWithInt:(jint)length
                   withNSString:(NSString *)encoding;

- (jint)readUnsignedByte;

- (jlong)readUnsignedInt;

- (jlong)readUnsignedIntLE;

- (jint)readUnsignedShort;

- (jint)readUnsignedShortLE;

- (NSString *)readUTF;

- (void)reOpen;

- (void)seekWithLong:(jlong)pos;

- (jlong)skipWithLong:(jlong)n;

- (jint)skipBytesWithInt:(jint)n;

#pragma mark Protected

- (id<ComItextpdfTextIoRandomAccessSource>)getByteSource;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfRandomAccessFileOrArray)

FOUNDATION_EXPORT void ComItextpdfTextPdfRandomAccessFileOrArray_initWithNSString_(ComItextpdfTextPdfRandomAccessFileOrArray *self, NSString *filename);

FOUNDATION_EXPORT ComItextpdfTextPdfRandomAccessFileOrArray *new_ComItextpdfTextPdfRandomAccessFileOrArray_initWithNSString_(NSString *filename) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfRandomAccessFileOrArray_initWithComItextpdfTextPdfRandomAccessFileOrArray_(ComItextpdfTextPdfRandomAccessFileOrArray *self, ComItextpdfTextPdfRandomAccessFileOrArray *source);

FOUNDATION_EXPORT ComItextpdfTextPdfRandomAccessFileOrArray *new_ComItextpdfTextPdfRandomAccessFileOrArray_initWithComItextpdfTextPdfRandomAccessFileOrArray_(ComItextpdfTextPdfRandomAccessFileOrArray *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfRandomAccessFileOrArray_initWithComItextpdfTextIoRandomAccessSource_(ComItextpdfTextPdfRandomAccessFileOrArray *self, id<ComItextpdfTextIoRandomAccessSource> byteSource);

FOUNDATION_EXPORT ComItextpdfTextPdfRandomAccessFileOrArray *new_ComItextpdfTextPdfRandomAccessFileOrArray_initWithComItextpdfTextIoRandomAccessSource_(id<ComItextpdfTextIoRandomAccessSource> byteSource) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfRandomAccessFileOrArray_initWithNSString_withBoolean_withBoolean_(ComItextpdfTextPdfRandomAccessFileOrArray *self, NSString *filename, jboolean forceRead, jboolean plainRandomAccess);

FOUNDATION_EXPORT ComItextpdfTextPdfRandomAccessFileOrArray *new_ComItextpdfTextPdfRandomAccessFileOrArray_initWithNSString_withBoolean_withBoolean_(NSString *filename, jboolean forceRead, jboolean plainRandomAccess) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfRandomAccessFileOrArray_initWithJavaNetURL_(ComItextpdfTextPdfRandomAccessFileOrArray *self, JavaNetURL *url);

FOUNDATION_EXPORT ComItextpdfTextPdfRandomAccessFileOrArray *new_ComItextpdfTextPdfRandomAccessFileOrArray_initWithJavaNetURL_(JavaNetURL *url) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfRandomAccessFileOrArray_initWithJavaIoInputStream_(ComItextpdfTextPdfRandomAccessFileOrArray *self, JavaIoInputStream *is);

FOUNDATION_EXPORT ComItextpdfTextPdfRandomAccessFileOrArray *new_ComItextpdfTextPdfRandomAccessFileOrArray_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfRandomAccessFileOrArray_initWithByteArray_(ComItextpdfTextPdfRandomAccessFileOrArray *self, IOSByteArray *arrayIn);

FOUNDATION_EXPORT ComItextpdfTextPdfRandomAccessFileOrArray *new_ComItextpdfTextPdfRandomAccessFileOrArray_initWithByteArray_(IOSByteArray *arrayIn) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfRandomAccessFileOrArray)

#endif // _ComItextpdfTextPdfRandomAccessFileOrArray_H_

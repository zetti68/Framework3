//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/TiffImage.java
//

#ifndef _ComItextpdfTextPdfCodecTiffImage_H_
#define _ComItextpdfTextPdfCodecTiffImage_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextImage;
@class ComItextpdfTextPdfCodecTIFFDirectory;
@class ComItextpdfTextPdfCodecTIFFField;
@class ComItextpdfTextPdfRandomAccessFileOrArray;
@class IOSByteArray;
@class IOSLongArray;
@class JavaUtilZipDeflaterOutputStream;

@interface ComItextpdfTextPdfCodecTiffImage : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)applyPredictorWithByteArray:(IOSByteArray *)uncompData
                            withInt:(jint)predictor
                            withInt:(jint)w
                            withInt:(jint)h
                            withInt:(jint)samplesPerPixel;

+ (void)decodePackbitsWithByteArray:(IOSByteArray *)data
                      withByteArray:(IOSByteArray *)dst;

+ (jint)getNumberOfPagesWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)s;

+ (ComItextpdfTextImage *)getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)s
                                                                        withBoolean:(jboolean)recoverFromImageError
                                                                            withInt:(jint)page;

+ (ComItextpdfTextImage *)getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)s
                                                                        withBoolean:(jboolean)recoverFromImageError
                                                                            withInt:(jint)page
                                                                        withBoolean:(jboolean)direct;

+ (ComItextpdfTextImage *)getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)s
                                                                            withInt:(jint)page;

+ (ComItextpdfTextImage *)getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)s
                                                                            withInt:(jint)page
                                                                        withBoolean:(jboolean)direct;

+ (void)inflateWithByteArray:(IOSByteArray *)deflated
               withByteArray:(IOSByteArray *)inflated;

#pragma mark Protected

+ (ComItextpdfTextImage *)getTiffImageColorWithComItextpdfTextPdfCodecTIFFDirectory:(ComItextpdfTextPdfCodecTIFFDirectory *)dir
                                      withComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)s;

#pragma mark Package-Private

+ (IOSLongArray *)getArrayLongShortWithComItextpdfTextPdfCodecTIFFDirectory:(ComItextpdfTextPdfCodecTIFFDirectory *)dir
                                                                    withInt:(jint)tag;

+ (jint)getDpiWithComItextpdfTextPdfCodecTIFFField:(ComItextpdfTextPdfCodecTIFFField *)fd
                                           withInt:(jint)resolutionUnit;

+ (ComItextpdfTextImage *)ProcessExtraSamplesWithJavaUtilZipDeflaterOutputStream:(JavaUtilZipDeflaterOutputStream *)zip
                                             withJavaUtilZipDeflaterOutputStream:(JavaUtilZipDeflaterOutputStream *)mzip
                                                                   withByteArray:(IOSByteArray *)outBuf
                                                                         withInt:(jint)samplePerPixel
                                                                         withInt:(jint)bitsPerSample
                                                                         withInt:(jint)width
                                                                         withInt:(jint)height;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfCodecTiffImage)

FOUNDATION_EXPORT jint ComItextpdfTextPdfCodecTiffImage_getNumberOfPagesWithComItextpdfTextPdfRandomAccessFileOrArray_(ComItextpdfTextPdfRandomAccessFileOrArray *s);

FOUNDATION_EXPORT jint ComItextpdfTextPdfCodecTiffImage_getDpiWithComItextpdfTextPdfCodecTIFFField_withInt_(ComItextpdfTextPdfCodecTIFFField *fd, jint resolutionUnit);

FOUNDATION_EXPORT ComItextpdfTextImage *ComItextpdfTextPdfCodecTiffImage_getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray_withBoolean_withInt_withBoolean_(ComItextpdfTextPdfRandomAccessFileOrArray *s, jboolean recoverFromImageError, jint page, jboolean direct);

FOUNDATION_EXPORT ComItextpdfTextImage *ComItextpdfTextPdfCodecTiffImage_getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray_withBoolean_withInt_(ComItextpdfTextPdfRandomAccessFileOrArray *s, jboolean recoverFromImageError, jint page);

FOUNDATION_EXPORT ComItextpdfTextImage *ComItextpdfTextPdfCodecTiffImage_getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray_withInt_(ComItextpdfTextPdfRandomAccessFileOrArray *s, jint page);

FOUNDATION_EXPORT ComItextpdfTextImage *ComItextpdfTextPdfCodecTiffImage_getTiffImageWithComItextpdfTextPdfRandomAccessFileOrArray_withInt_withBoolean_(ComItextpdfTextPdfRandomAccessFileOrArray *s, jint page, jboolean direct);

FOUNDATION_EXPORT ComItextpdfTextImage *ComItextpdfTextPdfCodecTiffImage_getTiffImageColorWithComItextpdfTextPdfCodecTIFFDirectory_withComItextpdfTextPdfRandomAccessFileOrArray_(ComItextpdfTextPdfCodecTIFFDirectory *dir, ComItextpdfTextPdfRandomAccessFileOrArray *s);

FOUNDATION_EXPORT ComItextpdfTextImage *ComItextpdfTextPdfCodecTiffImage_ProcessExtraSamplesWithJavaUtilZipDeflaterOutputStream_withJavaUtilZipDeflaterOutputStream_withByteArray_withInt_withInt_withInt_withInt_(JavaUtilZipDeflaterOutputStream *zip, JavaUtilZipDeflaterOutputStream *mzip, IOSByteArray *outBuf, jint samplePerPixel, jint bitsPerSample, jint width, jint height);

FOUNDATION_EXPORT IOSLongArray *ComItextpdfTextPdfCodecTiffImage_getArrayLongShortWithComItextpdfTextPdfCodecTIFFDirectory_withInt_(ComItextpdfTextPdfCodecTIFFDirectory *dir, jint tag);

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecTiffImage_decodePackbitsWithByteArray_withByteArray_(IOSByteArray *data, IOSByteArray *dst);

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecTiffImage_inflateWithByteArray_withByteArray_(IOSByteArray *deflated, IOSByteArray *inflated);

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecTiffImage_applyPredictorWithByteArray_withInt_withInt_withInt_withInt_(IOSByteArray *uncompData, jint predictor, jint w, jint h, jint samplesPerPixel);

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecTiffImage_init(ComItextpdfTextPdfCodecTiffImage *self);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecTiffImage *new_ComItextpdfTextPdfCodecTiffImage_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfCodecTiffImage)

#endif // _ComItextpdfTextPdfCodecTiffImage_H_

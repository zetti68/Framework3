//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/wmf/MetaState.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/wmf/MetaState.java"

#include "IOSClass.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/pdf/PdfContentByte.h"
#include "com/itextpdf/text/pdf/codec/wmf/MetaBrush.h"
#include "com/itextpdf/text/pdf/codec/wmf/MetaFont.h"
#include "com/itextpdf/text/pdf/codec/wmf/MetaObject.h"
#include "com/itextpdf/text/pdf/codec/wmf/MetaPen.h"
#include "com/itextpdf/text/pdf/codec/wmf/MetaState.h"
#include "com/itextpdf/text/pdf/codec/wmf/Point.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Stack.h"


#line 53
@implementation ComItextpdfTextPdfCodecWmfMetaState


#line 91
- (instancetype)init {
  if (self = [super init]) {
    currentBackgroundColor_ = ComItextpdfTextBaseColor_get_WHITE_();
    currentTextColor_ = ComItextpdfTextBaseColor_get_BLACK_();
    backgroundMode_ =
#line 78
    ComItextpdfTextPdfCodecWmfMetaState_OPAQUE;
    polyFillMode_ =
#line 79
    ComItextpdfTextPdfCodecWmfMetaState_ALTERNATE;
    lineJoin_ =
#line 80
    1;
    
#line 92
    savedStates_ = [[JavaUtilStack alloc] init];
    
#line 93
    MetaObjects_ = [[JavaUtilArrayList alloc] init];
    
#line 94
    currentPoint_ = [[ComItextpdfTextPdfCodecWmfPoint alloc] initWithInt:0 withInt:0];
    
#line 95
    currentPen_ = [[ComItextpdfTextPdfCodecWmfMetaPen alloc] init];
    
#line 96
    currentBrush_ = [[ComItextpdfTextPdfCodecWmfMetaBrush alloc] init];
    
#line 97
    currentFont_ = [[ComItextpdfTextPdfCodecWmfMetaFont alloc] init];
  }
  return self;
}


#line 100
- (instancetype)initWithComItextpdfTextPdfCodecWmfMetaState:(ComItextpdfTextPdfCodecWmfMetaState *)state {
  if (self = [super init]) {
    currentBackgroundColor_ = ComItextpdfTextBaseColor_get_WHITE_();
    currentTextColor_ = ComItextpdfTextBaseColor_get_BLACK_();
    backgroundMode_ =
#line 78
    ComItextpdfTextPdfCodecWmfMetaState_OPAQUE;
    polyFillMode_ =
#line 79
    ComItextpdfTextPdfCodecWmfMetaState_ALTERNATE;
    lineJoin_ =
#line 80
    1;
    
#line 101
    [self setMetaStateWithComItextpdfTextPdfCodecWmfMetaState:state];
  }
  return self;
}


#line 104
- (void)setMetaStateWithComItextpdfTextPdfCodecWmfMetaState:(ComItextpdfTextPdfCodecWmfMetaState *)state {
  
#line 105
  savedStates_ = ((ComItextpdfTextPdfCodecWmfMetaState *) nil_chk(state))->savedStates_;
  MetaObjects_ = state->MetaObjects_;
  currentPoint_ = state->currentPoint_;
  currentPen_ = state->currentPen_;
  currentBrush_ = state->currentBrush_;
  currentFont_ = state->currentFont_;
  currentBackgroundColor_ = state->currentBackgroundColor_;
  currentTextColor_ = state->currentTextColor_;
  backgroundMode_ = state->backgroundMode_;
  polyFillMode_ = state->polyFillMode_;
  textAlign_ = state->textAlign_;
  lineJoin_ = state->lineJoin_;
  offsetWx_ = state->offsetWx_;
  offsetWy_ = state->offsetWy_;
  extentWx_ = state->extentWx_;
  extentWy_ = state->extentWy_;
  scalingX_ = state->scalingX_;
  scalingY_ = state->scalingY_;
}


#line 125
- (void)addMetaObjectWithComItextpdfTextPdfCodecWmfMetaObject:(ComItextpdfTextPdfCodecWmfMetaObject *)object {
  
#line 126
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(MetaObjects_)) size]; ++k) {
    if ([MetaObjects_ getWithInt:k] == nil) {
      (void) [MetaObjects_ setWithInt:k withId:object];
      return;
    }
  }
  [MetaObjects_ addWithId:object];
}


#line 135
- (void)selectMetaObjectWithInt:(jint)index
withComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb {
  
#line 136
  ComItextpdfTextPdfCodecWmfMetaObject *obj = [((JavaUtilArrayList *) nil_chk(MetaObjects_)) getWithInt:index];
  if (obj == nil)
#line 138
  return;
  jint style;
  switch ([((ComItextpdfTextPdfCodecWmfMetaObject *) nil_chk(obj)) getType]) {
    case ComItextpdfTextPdfCodecWmfMetaObject_META_BRUSH:
    currentBrush_ = (ComItextpdfTextPdfCodecWmfMetaBrush *) check_class_cast(obj, [ComItextpdfTextPdfCodecWmfMetaBrush class]);
    style = [currentBrush_ getStyle];
    if (style == ComItextpdfTextPdfCodecWmfMetaBrush_BS_SOLID) {
      ComItextpdfTextBaseColor *color = [currentBrush_ getColor];
      [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) setColorFillWithComItextpdfTextBaseColor:color];
    }
    else if (style == ComItextpdfTextPdfCodecWmfMetaBrush_BS_HATCHED) {
      ComItextpdfTextBaseColor *color = currentBackgroundColor_;
      [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) setColorFillWithComItextpdfTextBaseColor:color];
    }
    break;
    case ComItextpdfTextPdfCodecWmfMetaObject_META_PEN:
    {
      currentPen_ = (ComItextpdfTextPdfCodecWmfMetaPen *) check_class_cast(obj, [ComItextpdfTextPdfCodecWmfMetaPen class]);
      style = [currentPen_ getStyle];
      if (style != ComItextpdfTextPdfCodecWmfMetaPen_PS_NULL) {
        ComItextpdfTextBaseColor *color = [currentPen_ getColor];
        [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) setColorStrokeWithComItextpdfTextBaseColor:color];
        [cb setLineWidthWithFloat:[JavaLangMath absWithFloat:[currentPen_ getPenWidth] * scalingX_ / extentWx_]];
        switch (style) {
          case ComItextpdfTextPdfCodecWmfMetaPen_PS_DASH:
          [cb setLineDashWithFloat:18 withFloat:6 withFloat:0];
          break;
          case ComItextpdfTextPdfCodecWmfMetaPen_PS_DASHDOT:
          [cb setLiteralWithNSString:@"[9 6 3 6]0 d\n"];
          break;
          case ComItextpdfTextPdfCodecWmfMetaPen_PS_DASHDOTDOT:
          [cb setLiteralWithNSString:@"[9 3 3 3 3 3]0 d\n"];
          break;
          case ComItextpdfTextPdfCodecWmfMetaPen_PS_DOT:
          [cb setLineDashWithFloat:3 withFloat:0];
          break;
          default:
          [cb setLineDashWithFloat:0];
          break;
        }
      }
      break;
    }
    case ComItextpdfTextPdfCodecWmfMetaObject_META_FONT:
    {
      currentFont_ = (ComItextpdfTextPdfCodecWmfMetaFont *) check_class_cast(obj, [ComItextpdfTextPdfCodecWmfMetaFont class]);
      break;
    }
  }
}


#line 189
- (void)deleteMetaObjectWithInt:(jint)index {
  
#line 190
  (void) [((JavaUtilArrayList *) nil_chk(MetaObjects_)) setWithInt:index withId:nil];
}


#line 193
- (void)saveStateWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb {
  
#line 194
  [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) saveState];
  ComItextpdfTextPdfCodecWmfMetaState *state = [[ComItextpdfTextPdfCodecWmfMetaState alloc] initWithComItextpdfTextPdfCodecWmfMetaState:self];
  (void) [((JavaUtilStack *) nil_chk(savedStates_)) pushWithId:state];
}


#line 199
- (void)restoreStateWithInt:(jint)index
withComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb {
  
#line 200
  jint pops;
  if (index < 0)
#line 202
  pops = [JavaLangMath minWithInt:-index withInt:[((JavaUtilStack *) nil_chk(savedStates_)) size]];
  else
#line 204
  pops = [JavaLangMath maxWithInt:[((JavaUtilStack *) nil_chk(savedStates_)) size] - index withInt:0];
  if (pops == 0)
#line 206
  return;
  ComItextpdfTextPdfCodecWmfMetaState *state = nil;
  while (pops-- != 0) {
    [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) restoreState];
    state = [((JavaUtilStack *) nil_chk(savedStates_)) pop];
  }
  [self setMetaStateWithComItextpdfTextPdfCodecWmfMetaState:state];
}


#line 215
- (void)cleanupWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb {
  
#line 216
  jint k = [((JavaUtilStack *) nil_chk(savedStates_)) size];
  while (k-- > 0)
#line 218
  [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) restoreState];
}


#line 221
- (jfloat)transformXWithInt:(jint)x {
  
#line 222
  return ((jfloat) x - offsetWx_) * scalingX_ / extentWx_;
}


#line 225
- (jfloat)transformYWithInt:(jint)y {
  
#line 226
  return (1.0f - ((jfloat) y - offsetWy_) / extentWy_) * scalingY_;
}


#line 229
- (void)setScalingXWithFloat:(jfloat)scalingX {
  
#line 230
  self->scalingX_ = scalingX;
}


#line 233
- (void)setScalingYWithFloat:(jfloat)scalingY {
  
#line 234
  self->scalingY_ = scalingY;
}


#line 237
- (void)setOffsetWxWithInt:(jint)offsetWx {
  
#line 238
  self->offsetWx_ = offsetWx;
}


#line 241
- (void)setOffsetWyWithInt:(jint)offsetWy {
  
#line 242
  self->offsetWy_ = offsetWy;
}


#line 245
- (void)setExtentWxWithInt:(jint)extentWx {
  
#line 246
  self->extentWx_ = extentWx;
}


#line 249
- (void)setExtentWyWithInt:(jint)extentWy {
  
#line 250
  self->extentWy_ = extentWy;
}


#line 253
- (jfloat)transformAngleWithFloat:(jfloat)angle {
  
#line 254
  jfloat ta = scalingY_ < 0 ? -angle : angle;
  return (jfloat) (scalingX_ < 0 ? JavaLangMath_PI - ta : ta);
}


#line 258
- (void)setCurrentPointWithComItextpdfTextPdfCodecWmfPoint:(ComItextpdfTextPdfCodecWmfPoint *)p {
  
#line 259
  currentPoint_ = p;
}


#line 262
- (ComItextpdfTextPdfCodecWmfPoint *)getCurrentPoint {
  
#line 263
  return currentPoint_;
}


#line 266
- (ComItextpdfTextPdfCodecWmfMetaBrush *)getCurrentBrush {
  
#line 267
  return currentBrush_;
}


#line 270
- (ComItextpdfTextPdfCodecWmfMetaPen *)getCurrentPen {
  
#line 271
  return currentPen_;
}


#line 274
- (ComItextpdfTextPdfCodecWmfMetaFont *)getCurrentFont {
  
#line 275
  return currentFont_;
}


#line 281
- (ComItextpdfTextBaseColor *)getCurrentBackgroundColor {
  
#line 282
  return currentBackgroundColor_;
}


#line 288
- (void)setCurrentBackgroundColorWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)currentBackgroundColor {
  
#line 289
  self->currentBackgroundColor_ = currentBackgroundColor;
}


#line 295
- (ComItextpdfTextBaseColor *)getCurrentTextColor {
  
#line 296
  return currentTextColor_;
}


#line 302
- (void)setCurrentTextColorWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)currentTextColor {
  
#line 303
  self->currentTextColor_ = currentTextColor;
}


#line 309
- (jint)getBackgroundMode {
  
#line 310
  return backgroundMode_;
}


#line 316
- (void)setBackgroundModeWithInt:(jint)backgroundMode {
  
#line 317
  self->backgroundMode_ = backgroundMode;
}


#line 323
- (jint)getTextAlign {
  
#line 324
  return textAlign_;
}


#line 330
- (void)setTextAlignWithInt:(jint)textAlign {
  
#line 331
  self->textAlign_ = textAlign;
}


#line 337
- (jint)getPolyFillMode {
  
#line 338
  return polyFillMode_;
}


#line 344
- (void)setPolyFillModeWithInt:(jint)polyFillMode {
  
#line 345
  self->polyFillMode_ = polyFillMode;
}


#line 348
- (void)setLineJoinRectangleWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb {
  
#line 349
  if (lineJoin_ != 0) {
    lineJoin_ = 0;
    [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) setLineJoinWithInt:0];
  }
}


#line 355
- (void)setLineJoinPolygonWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb {
  
#line 356
  if (lineJoin_ == 0) {
    lineJoin_ = 1;
    [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) setLineJoinWithInt:1];
  }
}


#line 362
- (jboolean)getLineNeutral {
  
#line 363
  return lineJoin_ == 0;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfCodecWmfMetaState *)other {
  [super copyAllFieldsTo:other];
  other->MetaObjects_ = MetaObjects_;
  other->backgroundMode_ = backgroundMode_;
  other->currentBackgroundColor_ = currentBackgroundColor_;
  other->currentBrush_ = currentBrush_;
  other->currentFont_ = currentFont_;
  other->currentPen_ = currentPen_;
  other->currentPoint_ = currentPoint_;
  other->currentTextColor_ = currentTextColor_;
  other->extentWx_ = extentWx_;
  other->extentWy_ = extentWy_;
  other->lineJoin_ = lineJoin_;
  other->offsetWx_ = offsetWx_;
  other->offsetWy_ = offsetWy_;
  other->polyFillMode_ = polyFillMode_;
  other->savedStates_ = savedStates_;
  other->scalingX_ = scalingX_;
  other->scalingY_ = scalingY_;
  other->textAlign_ = textAlign_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MetaState", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfCodecWmfMetaState:", "MetaState", NULL, 0x1, NULL },
    { "setMetaStateWithComItextpdfTextPdfCodecWmfMetaState:", "setMetaState", "V", 0x1, NULL },
    { "addMetaObjectWithComItextpdfTextPdfCodecWmfMetaObject:", "addMetaObject", "V", 0x1, NULL },
    { "selectMetaObjectWithInt:withComItextpdfTextPdfPdfContentByte:", "selectMetaObject", "V", 0x1, NULL },
    { "deleteMetaObjectWithInt:", "deleteMetaObject", "V", 0x1, NULL },
    { "saveStateWithComItextpdfTextPdfPdfContentByte:", "saveState", "V", 0x1, NULL },
    { "restoreStateWithInt:withComItextpdfTextPdfPdfContentByte:", "restoreState", "V", 0x1, NULL },
    { "cleanupWithComItextpdfTextPdfPdfContentByte:", "cleanup", "V", 0x1, NULL },
    { "transformXWithInt:", "transformX", "F", 0x1, NULL },
    { "transformYWithInt:", "transformY", "F", 0x1, NULL },
    { "setScalingXWithFloat:", "setScalingX", "V", 0x1, NULL },
    { "setScalingYWithFloat:", "setScalingY", "V", 0x1, NULL },
    { "setOffsetWxWithInt:", "setOffsetWx", "V", 0x1, NULL },
    { "setOffsetWyWithInt:", "setOffsetWy", "V", 0x1, NULL },
    { "setExtentWxWithInt:", "setExtentWx", "V", 0x1, NULL },
    { "setExtentWyWithInt:", "setExtentWy", "V", 0x1, NULL },
    { "transformAngleWithFloat:", "transformAngle", "F", 0x1, NULL },
    { "setCurrentPointWithComItextpdfTextPdfCodecWmfPoint:", "setCurrentPoint", "V", 0x1, NULL },
    { "getCurrentPoint", NULL, "Lcom.itextpdf.text.pdf.codec.wmf.Point;", 0x1, NULL },
    { "getCurrentBrush", NULL, "Lcom.itextpdf.text.pdf.codec.wmf.MetaBrush;", 0x1, NULL },
    { "getCurrentPen", NULL, "Lcom.itextpdf.text.pdf.codec.wmf.MetaPen;", 0x1, NULL },
    { "getCurrentFont", NULL, "Lcom.itextpdf.text.pdf.codec.wmf.MetaFont;", 0x1, NULL },
    { "getCurrentBackgroundColor", NULL, "Lcom.itextpdf.text.BaseColor;", 0x1, NULL },
    { "setCurrentBackgroundColorWithComItextpdfTextBaseColor:", "setCurrentBackgroundColor", "V", 0x1, NULL },
    { "getCurrentTextColor", NULL, "Lcom.itextpdf.text.BaseColor;", 0x1, NULL },
    { "setCurrentTextColorWithComItextpdfTextBaseColor:", "setCurrentTextColor", "V", 0x1, NULL },
    { "getBackgroundMode", NULL, "I", 0x1, NULL },
    { "setBackgroundModeWithInt:", "setBackgroundMode", "V", 0x1, NULL },
    { "getTextAlign", NULL, "I", 0x1, NULL },
    { "setTextAlignWithInt:", "setTextAlign", "V", 0x1, NULL },
    { "getPolyFillMode", NULL, "I", 0x1, NULL },
    { "setPolyFillModeWithInt:", "setPolyFillMode", "V", 0x1, NULL },
    { "setLineJoinRectangleWithComItextpdfTextPdfPdfContentByte:", "setLineJoinRectangle", "V", 0x1, NULL },
    { "setLineJoinPolygonWithComItextpdfTextPdfPdfContentByte:", "setLineJoinPolygon", "V", 0x1, NULL },
    { "getLineNeutral", NULL, "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TA_NOUPDATECP_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_NOUPDATECP },
    { "TA_UPDATECP_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_UPDATECP },
    { "TA_LEFT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_LEFT },
    { "TA_RIGHT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_RIGHT },
    { "TA_CENTER_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_CENTER },
    { "TA_TOP_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_TOP },
    { "TA_BOTTOM_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_BOTTOM },
    { "TA_BASELINE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TA_BASELINE },
    { "TRANSPARENT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_TRANSPARENT },
    { "OPAQUE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_OPAQUE },
    { "ALTERNATE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_ALTERNATE },
    { "WINDING_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfCodecWmfMetaState_WINDING },
    { "savedStates_", NULL, 0x1, "Ljava.util.Stack;", NULL,  },
    { "MetaObjects_", NULL, 0x1, "Ljava.util.ArrayList;", NULL,  },
    { "currentPoint_", NULL, 0x1, "Lcom.itextpdf.text.pdf.codec.wmf.Point;", NULL,  },
    { "currentPen_", NULL, 0x1, "Lcom.itextpdf.text.pdf.codec.wmf.MetaPen;", NULL,  },
    { "currentBrush_", NULL, 0x1, "Lcom.itextpdf.text.pdf.codec.wmf.MetaBrush;", NULL,  },
    { "currentFont_", NULL, 0x1, "Lcom.itextpdf.text.pdf.codec.wmf.MetaFont;", NULL,  },
    { "currentBackgroundColor_", NULL, 0x1, "Lcom.itextpdf.text.BaseColor;", NULL,  },
    { "currentTextColor_", NULL, 0x1, "Lcom.itextpdf.text.BaseColor;", NULL,  },
    { "backgroundMode_", NULL, 0x1, "I", NULL,  },
    { "polyFillMode_", NULL, 0x1, "I", NULL,  },
    { "lineJoin_", NULL, 0x1, "I", NULL,  },
    { "textAlign_", NULL, 0x1, "I", NULL,  },
    { "offsetWx_", NULL, 0x1, "I", NULL,  },
    { "offsetWy_", NULL, 0x1, "I", NULL,  },
    { "extentWx_", NULL, 0x1, "I", NULL,  },
    { "extentWy_", NULL, 0x1, "I", NULL,  },
    { "scalingX_", NULL, 0x1, "F", NULL,  },
    { "scalingY_", NULL, 0x1, "F", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfCodecWmfMetaState = { "MetaState", "com.itextpdf.text.pdf.codec.wmf", NULL, 0x1, 36, methods, 30, fields, 0, NULL};
  return &_ComItextpdfTextPdfCodecWmfMetaState;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/GifImage.java
//

#ifndef _ComItextpdfTextPdfCodecGifImage_H_
#define _ComItextpdfTextPdfCodecGifImage_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextImage;
@class IOSByteArray;
@class IOSIntArray;
@class IOSShortArray;
@class JavaIoDataInputStream;
@class JavaIoInputStream;
@class JavaNetURL;
@class JavaUtilArrayList;

#define ComItextpdfTextPdfCodecGifImage_MaxStackSize 4096

@interface ComItextpdfTextPdfCodecGifImage : NSObject {
 @public
  JavaIoDataInputStream *in_;
  jint width_;
  jint height_;
  jboolean gctFlag_;
  jint bgIndex_;
  jint bgColor_;
  jint pixelAspect_;
  jboolean lctFlag_;
  jboolean interlace_;
  jint lctSize_;
  jint ix_, iy_, iw_, ih_;
  IOSByteArray *block_;
  jint blockSize_;
  jint dispose_;
  jboolean transparency_;
  jint delay_;
  jint transIndex_;
  IOSShortArray *prefix_;
  IOSByteArray *suffix_;
  IOSByteArray *pixelStack_;
  IOSByteArray *pixels_;
  IOSByteArray *m_out_;
  jint m_bpc_;
  jint m_gbpc_;
  IOSByteArray *m_global_table_;
  IOSByteArray *m_local_table_;
  IOSByteArray *m_curr_table_;
  jint m_line_stride_;
  IOSByteArray *fromData_;
  JavaNetURL *fromUrl_;
  JavaUtilArrayList *frames_;
}

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)data;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is;

- (instancetype)initWithNSString:(NSString *)file;

- (instancetype)initWithJavaNetURL:(JavaNetURL *)url;

- (jint)getFrameCount;

- (IOSIntArray *)getFramePositionWithInt:(jint)frame;

- (ComItextpdfTextImage *)getImageWithInt:(jint)frame;

- (IOSIntArray *)getLogicalScreen;

#pragma mark Protected

- (jboolean)decodeImageData;

+ (jint)newBpcWithInt:(jint)bpc OBJC_METHOD_FAMILY_NONE;

- (jint)readBlock;

- (IOSByteArray *)readColorTableWithInt:(jint)bpc;

- (void)readContents;

- (void)readGraphicControlExt;

- (void)readHeader;

- (void)readImage;

- (void)readLSD;

- (jint)readShort;

- (void)resetFrame;

- (void)setPixelWithInt:(jint)x
                withInt:(jint)y
                withInt:(jint)v;

- (void)skip;

#pragma mark Package-Private

- (void)processWithJavaIoInputStream:(JavaIoInputStream *)is;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfCodecGifImage)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, in_, JavaIoDataInputStream *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, block_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, prefix_, IOSShortArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, suffix_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, pixelStack_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, pixels_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, m_out_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, m_global_table_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, m_local_table_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, m_curr_table_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, fromData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, fromUrl_, JavaNetURL *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage, frames_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfCodecGifImage, MaxStackSize, jint)

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecGifImage_initWithJavaNetURL_(ComItextpdfTextPdfCodecGifImage *self, JavaNetURL *url);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecGifImage *new_ComItextpdfTextPdfCodecGifImage_initWithJavaNetURL_(JavaNetURL *url) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecGifImage_initWithNSString_(ComItextpdfTextPdfCodecGifImage *self, NSString *file);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecGifImage *new_ComItextpdfTextPdfCodecGifImage_initWithNSString_(NSString *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecGifImage_initWithByteArray_(ComItextpdfTextPdfCodecGifImage *self, IOSByteArray *data);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecGifImage *new_ComItextpdfTextPdfCodecGifImage_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecGifImage_initWithJavaIoInputStream_(ComItextpdfTextPdfCodecGifImage *self, JavaIoInputStream *is);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecGifImage *new_ComItextpdfTextPdfCodecGifImage_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jint ComItextpdfTextPdfCodecGifImage_newBpcWithInt_(jint bpc);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfCodecGifImage)

@interface ComItextpdfTextPdfCodecGifImage_GifFrame : NSObject {
 @public
  ComItextpdfTextImage *image_;
  jint ix_;
  jint iy_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfCodecGifImage_GifFrame)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecGifImage_GifFrame, image_, ComItextpdfTextImage *)

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecGifImage_GifFrame_init(ComItextpdfTextPdfCodecGifImage_GifFrame *self);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecGifImage_GifFrame *new_ComItextpdfTextPdfCodecGifImage_GifFrame_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfCodecGifImage_GifFrame)

#endif // _ComItextpdfTextPdfCodecGifImage_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/wmf/InputMeta.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/wmf/InputMeta.java"

#include "IOSClass.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/Utilities.h"
#include "com/itextpdf/text/pdf/codec/wmf/InputMeta.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"


#line 53
@implementation ComItextpdfTextPdfCodecWmfInputMeta


#line 58
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  if (self = [super init]) {
    
#line 59
    self->in_ = inArg;
  }
  return self;
}


#line 62
- (jint)readWord {
  
#line 63
  length_ += 2;
  jint k1 = [((JavaIoInputStream *) nil_chk(in_)) read];
  if (k1 < 0)
#line 66
  return 0;
  return (k1 + (LShift32([in_ read], 8))) & (jint) 0xffff;
}


#line 70
- (jint)readShort {
  
#line 71
  jint k = [self readWord];
  if (k > (jint) 0x7fff)
#line 73
  k -= (jint) 0x10000;
  return k;
}


#line 77
- (jint)readInt {
  
#line 78
  length_ += 4;
  jint k1 = [((JavaIoInputStream *) nil_chk(in_)) read];
  if (k1 < 0)
#line 81
  return 0;
  jint k2 = LShift32([in_ read], 8);
  jint k3 = LShift32([in_ read], 16);
  return k1 + k2 + k3 + (LShift32([in_ read], 24));
}


#line 87
- (jint)readByte {
  
#line 88
  ++length_;
  return [((JavaIoInputStream *) nil_chk(in_)) read] & (jint) 0xff;
}


#line 92
- (void)skipWithInt:(jint)len {
  
#line 93
  length_ += len;
  [ComItextpdfTextUtilities skipWithJavaIoInputStream:in_ withInt:len];
}


#line 97
- (jint)getLength {
  
#line 98
  return length_;
}


#line 101
- (ComItextpdfTextBaseColor *)readColor {
  
#line 102
  jint red = [self readByte];
  jint green = [self readByte];
  jint blue = [self readByte];
  [self readByte];
  return [[ComItextpdfTextBaseColor alloc] initWithInt:red withInt:green withInt:blue];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfCodecWmfInputMeta *)other {
  [super copyAllFieldsTo:other];
  other->in_ = in_;
  other->length_ = length_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoInputStream:", "InputMeta", NULL, 0x1, NULL },
    { "readWord", NULL, "I", 0x1, "Ljava.io.IOException;" },
    { "readShort", NULL, "I", 0x1, "Ljava.io.IOException;" },
    { "readInt", NULL, "I", 0x1, "Ljava.io.IOException;" },
    { "readByte", NULL, "I", 0x1, "Ljava.io.IOException;" },
    { "skipWithInt:", "skip", "V", 0x1, "Ljava.io.IOException;" },
    { "getLength", NULL, "I", 0x1, NULL },
    { "readColor", NULL, "Lcom.itextpdf.text.BaseColor;", 0x1, "Ljava.io.IOException;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "in_", NULL, 0x0, "Ljava.io.InputStream;", NULL,  },
    { "length_", NULL, 0x0, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfCodecWmfInputMeta = { "InputMeta", "com.itextpdf.text.pdf.codec.wmf", NULL, 0x1, 8, methods, 2, fields, 0, NULL};
  return &_ComItextpdfTextPdfCodecWmfInputMeta;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/LZWCompressor.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/LZWCompressor.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/pdf/codec/BitFile.h"
#include "com/itextpdf/text/pdf/codec/LZWCompressor.h"
#include "com/itextpdf/text/pdf/codec/LZWStringTable.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"


#line 61
@implementation ComItextpdfTextPdfCodecLZWCompressor


#line 96
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                   withInt:(jint)codeSize
                               withBoolean:(jboolean)TIFF {
  if (self = [super init]) {
    
#line 98
    bf__ = [[ComItextpdfTextPdfCodecBitFile alloc] initWithJavaIoOutputStream:outArg withBoolean:!TIFF];
    
#line 99
    codeSize__ = codeSize;
    
#line 100
    tiffFudge__ = TIFF;
    
#line 101
    clearCode__ = LShift32(1, codeSize__);
    
#line 102
    endOfInfo__ = clearCode__ + 1;
    
#line 103
    numBits__ = codeSize__ + 1;
    
#line 105
    limit__ = (LShift32(1, numBits__)) - 1;
    
#line 106
    if (tiffFudge__)
#line 107
    --limit__;
    
#line 109
    prefix__ = (jshort) (jint) 0xFFFF;
    
#line 110
    lzss__ = [[ComItextpdfTextPdfCodecLZWStringTable alloc] init];
    
#line 111
    [lzss__ ClearTableWithInt:codeSize__];
    
#line 112
    [bf__ writeBitsWithInt:clearCode__ withInt:numBits__];
  }
  return self;
}


#line 119
- (void)compressWithByteArray:(IOSByteArray *)buf
                      withInt:(jint)offset
                      withInt:(jint)length {
  
#line 122
  jint idx;
  jbyte c;
  jshort index;
  
#line 126
  jint maxOffset = offset + length;
  for (idx = offset; idx < maxOffset; ++idx) {
    
#line 129
    c = IOSByteArray_Get(nil_chk(buf), idx);
    if ((index = [((ComItextpdfTextPdfCodecLZWStringTable *) nil_chk(lzss__)) FindCharStringWithShort:prefix__ withByte:c]) != -1)
#line 131
    prefix__ = index;
    else {
      
#line 134
      [((ComItextpdfTextPdfCodecBitFile *) nil_chk(bf__)) writeBitsWithInt:prefix__ withInt:numBits__];
      if ([lzss__ AddCharStringWithShort:prefix__ withByte:c] > limit__) {
        
#line 137
        if (numBits__ == 12) {
          
#line 139
          [bf__ writeBitsWithInt:clearCode__ withInt:numBits__];
          [lzss__ ClearTableWithInt:codeSize__];
          numBits__ = codeSize__ + 1;
        }
        else
#line 144
        ++numBits__;
        
#line 146
        limit__ = (LShift32(1, numBits__)) - 1;
        if (tiffFudge__)
#line 148
        --limit__;
      }
      prefix__ = (jshort) ((jshort) c & (jint) 0xFF);
    }
  }
}


#line 161
- (void)flush {
  
#line 163
  if (prefix__ != -1)
#line 164
  [((ComItextpdfTextPdfCodecBitFile *) nil_chk(bf__)) writeBitsWithInt:prefix__ withInt:numBits__];
  
#line 166
  [((ComItextpdfTextPdfCodecBitFile *) nil_chk(bf__)) writeBitsWithInt:endOfInfo__ withInt:numBits__];
  [bf__ flush];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfCodecLZWCompressor *)other {
  [super copyAllFieldsTo:other];
  other->bf__ = bf__;
  other->clearCode__ = clearCode__;
  other->codeSize__ = codeSize__;
  other->endOfInfo__ = endOfInfo__;
  other->limit__ = limit__;
  other->lzss__ = lzss__;
  other->numBits__ = numBits__;
  other->prefix__ = prefix__;
  other->tiffFudge__ = tiffFudge__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoOutputStream:withInt:withBoolean:", "LZWCompressor", NULL, 0x1, "Ljava.io.IOException;" },
    { "compressWithByteArray:withInt:withInt:", "compress", "V", 0x1, "Ljava.io.IOException;" },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "codeSize__", NULL, 0x0, "I", NULL,  },
    { "clearCode__", NULL, 0x0, "I", NULL,  },
    { "endOfInfo__", NULL, 0x0, "I", NULL,  },
    { "numBits__", NULL, 0x0, "I", NULL,  },
    { "limit__", NULL, 0x0, "I", NULL,  },
    { "prefix__", NULL, 0x0, "S", NULL,  },
    { "bf__", NULL, 0x0, "Lcom.itextpdf.text.pdf.codec.BitFile;", NULL,  },
    { "lzss__", NULL, 0x0, "Lcom.itextpdf.text.pdf.codec.LZWStringTable;", NULL,  },
    { "tiffFudge__", NULL, 0x0, "Z", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfCodecLZWCompressor = { "LZWCompressor", "com.itextpdf.text.pdf.codec", NULL, 0x1, 3, methods, 9, fields, 0, NULL};
  return &_ComItextpdfTextPdfCodecLZWCompressor;
}

@end

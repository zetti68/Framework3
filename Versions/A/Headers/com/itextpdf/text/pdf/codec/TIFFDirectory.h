//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/codec/TIFFDirectory.java
//

#ifndef _ComItextpdfTextPdfCodecTIFFDirectory_H_
#define _ComItextpdfTextPdfCodecTIFFDirectory_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class ComItextpdfTextPdfCodecTIFFField;
@class ComItextpdfTextPdfRandomAccessFileOrArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashtable;

@interface ComItextpdfTextPdfCodecTIFFDirectory : NSObject < JavaIoSerializable > {
 @public
  jboolean isBigEndian__;
  jint numEntries_;
  IOSObjectArray *fields_;
  JavaUtilHashtable *fieldIndex_;
  jlong IFDOffset_;
  jlong nextIFDOffset_;
}

#pragma mark Public

- (instancetype)initWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)stream
                                                          withInt:(jint)directory;

- (instancetype)initWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)stream
                                                         withLong:(jlong)ifd_offset
                                                          withInt:(jint)directory;

- (ComItextpdfTextPdfCodecTIFFField *)getFieldWithInt:(jint)tag;

- (jbyte)getFieldAsByteWithInt:(jint)tag;

- (jbyte)getFieldAsByteWithInt:(jint)tag
                       withInt:(jint)index;

- (jdouble)getFieldAsDoubleWithInt:(jint)tag;

- (jdouble)getFieldAsDoubleWithInt:(jint)tag
                           withInt:(jint)index;

- (jfloat)getFieldAsFloatWithInt:(jint)tag;

- (jfloat)getFieldAsFloatWithInt:(jint)tag
                         withInt:(jint)index;

- (jlong)getFieldAsLongWithInt:(jint)tag;

- (jlong)getFieldAsLongWithInt:(jint)tag
                       withInt:(jint)index;

- (IOSObjectArray *)getFields;

- (jlong)getIFDOffset;

- (jlong)getNextIFDOffset;

+ (jint)getNumDirectoriesWithComItextpdfTextPdfRandomAccessFileOrArray:(ComItextpdfTextPdfRandomAccessFileOrArray *)stream;

- (jint)getNumEntries;

- (IOSIntArray *)getTags;

- (jboolean)isBigEndian;

- (jboolean)isTagPresentWithInt:(jint)tag;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfCodecTIFFDirectory)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecTIFFDirectory, fields_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfCodecTIFFDirectory, fieldIndex_, JavaUtilHashtable *)

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecTIFFDirectory_init(ComItextpdfTextPdfCodecTIFFDirectory *self);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecTIFFDirectory *new_ComItextpdfTextPdfCodecTIFFDirectory_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecTIFFDirectory_initWithComItextpdfTextPdfRandomAccessFileOrArray_withInt_(ComItextpdfTextPdfCodecTIFFDirectory *self, ComItextpdfTextPdfRandomAccessFileOrArray *stream, jint directory);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecTIFFDirectory *new_ComItextpdfTextPdfCodecTIFFDirectory_initWithComItextpdfTextPdfRandomAccessFileOrArray_withInt_(ComItextpdfTextPdfRandomAccessFileOrArray *stream, jint directory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfCodecTIFFDirectory_initWithComItextpdfTextPdfRandomAccessFileOrArray_withLong_withInt_(ComItextpdfTextPdfCodecTIFFDirectory *self, ComItextpdfTextPdfRandomAccessFileOrArray *stream, jlong ifd_offset, jint directory);

FOUNDATION_EXPORT ComItextpdfTextPdfCodecTIFFDirectory *new_ComItextpdfTextPdfCodecTIFFDirectory_initWithComItextpdfTextPdfRandomAccessFileOrArray_withLong_withInt_(ComItextpdfTextPdfRandomAccessFileOrArray *stream, jlong ifd_offset, jint directory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jint ComItextpdfTextPdfCodecTIFFDirectory_getNumDirectoriesWithComItextpdfTextPdfRandomAccessFileOrArray_(ComItextpdfTextPdfRandomAccessFileOrArray *stream);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfCodecTIFFDirectory)

#endif // _ComItextpdfTextPdfCodecTIFFDirectory_H_

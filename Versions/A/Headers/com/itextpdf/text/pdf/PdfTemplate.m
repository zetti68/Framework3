//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfTemplate.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfTemplate.java"

#include "IOSClass.h"
#include "com/itextpdf/text/AccessibleElementId.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/pdf/ByteBuffer.h"
#include "com/itextpdf/text/pdf/PageResources.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfContentByte.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfDocument.h"
#include "com/itextpdf/text/pdf/PdfFormXObject.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfOCG.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfStream.h"
#include "com/itextpdf/text/pdf/PdfTemplate.h"
#include "com/itextpdf/text/pdf/PdfTransparencyGroup.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "java/io/IOException.h"
#include "java/util/HashMap.h"


#line 57
@implementation ComItextpdfTextPdfPdfTemplate


#line 96
- (instancetype)init {
  if (self =
#line 97
  [super initWithComItextpdfTextPdfPdfWriter:nil]) {
    bBox_ =
#line 70
    [[ComItextpdfTextRectangle alloc] initWithFloat:0 withFloat:0];
    contentTagged_ =
#line 80
    NO;
    additional_ =
#line 86
    nil;
    role_ = ComItextpdfTextPdfPdfName_get_FIGURE_();
    accessibleAttributes_ =
#line 89
    nil;
    id__ =
#line 90
    nil;
    
#line 98
    type_ = ComItextpdfTextPdfPdfTemplate_TYPE_TEMPLATE;
  }
  return self;
}


#line 107
- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)wr {
  if (self =
#line 108
  [super initWithComItextpdfTextPdfPdfWriter:wr]) {
    bBox_ =
#line 70
    [[ComItextpdfTextRectangle alloc] initWithFloat:0 withFloat:0];
    contentTagged_ =
#line 80
    NO;
    additional_ =
#line 86
    nil;
    role_ = ComItextpdfTextPdfPdfName_get_FIGURE_();
    accessibleAttributes_ =
#line 89
    nil;
    id__ =
#line 90
    nil;
    
#line 109
    type_ = ComItextpdfTextPdfPdfTemplate_TYPE_TEMPLATE;
    
#line 110
    pageResources_ = [[ComItextpdfTextPdfPageResources alloc] init];
    
#line 111
    [pageResources_ addDefaultColorWithComItextpdfTextPdfPdfDictionary:[((ComItextpdfTextPdfPdfWriter *) nil_chk(wr)) getDefaultColorspace]];
    
#line 112
    thisReference_ = [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) getPdfIndirectReference];
  }
  return self;
}


#line 128
+ (ComItextpdfTextPdfPdfTemplate *)createTemplateWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                       withFloat:(jfloat)width
                                                                       withFloat:(jfloat)height {
  
#line 129
  return [ComItextpdfTextPdfPdfTemplate createTemplateWithComItextpdfTextPdfPdfWriter:writer withFloat:width withFloat:height withComItextpdfTextPdfPdfName:nil];
}


#line 132
+ (ComItextpdfTextPdfPdfTemplate *)createTemplateWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                       withFloat:(jfloat)width
                                                                       withFloat:(jfloat)height
                                                   withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)forcedName {
  
#line 133
  ComItextpdfTextPdfPdfTemplate *template_ = [[ComItextpdfTextPdfPdfTemplate alloc] initWithComItextpdfTextPdfPdfWriter:writer];
  [template_ setWidthWithFloat:width];
  [template_ setHeightWithFloat:height];
  (void) [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer)) addDirectTemplateSimpleWithComItextpdfTextPdfPdfTemplate:template_ withComItextpdfTextPdfPdfName:forcedName];
  return template_;
}


#line 140
- (jboolean)isTagged {
  
#line 141
  return [super isTagged] && contentTagged_;
}


#line 150
- (void)setWidthWithFloat:(jfloat)width {
  
#line 151
  [((ComItextpdfTextRectangle *) nil_chk(bBox_)) setLeftWithFloat:0];
  [bBox_ setRightWithFloat:width];
}


#line 161
- (void)setHeightWithFloat:(jfloat)height {
  
#line 162
  [((ComItextpdfTextRectangle *) nil_chk(bBox_)) setBottomWithFloat:0];
  [bBox_ setTopWithFloat:height];
}


#line 171
- (jfloat)getWidth {
  
#line 172
  return [((ComItextpdfTextRectangle *) nil_chk(bBox_)) getWidth];
}


#line 181
- (jfloat)getHeight {
  
#line 182
  return [((ComItextpdfTextRectangle *) nil_chk(bBox_)) getHeight];
}


#line 185
- (ComItextpdfTextRectangle *)getBoundingBox {
  
#line 186
  return bBox_;
}


#line 189
- (void)setBoundingBoxWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)bBox {
  
#line 190
  self->bBox_ = bBox;
}


#line 197
- (void)setLayerWithComItextpdfTextPdfPdfOCG:(id<ComItextpdfTextPdfPdfOCG>)layer {
  
#line 198
  self->layer_ = layer;
}


#line 205
- (id<ComItextpdfTextPdfPdfOCG>)getLayer {
  
#line 206
  return layer_;
}


#line 209
- (void)setMatrixWithFloat:(jfloat)a
                 withFloat:(jfloat)b
                 withFloat:(jfloat)c
                 withFloat:(jfloat)d
                 withFloat:(jfloat)e
                 withFloat:(jfloat)f {
  
#line 210
  matrix_ = [[ComItextpdfTextPdfPdfArray alloc] init];
  [matrix_ addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:a]];
  [matrix_ addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:b]];
  [matrix_ addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:c]];
  [matrix_ addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:d]];
  [matrix_ addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:e]];
  [matrix_ addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:f]];
}


#line 219
- (ComItextpdfTextPdfPdfArray *)getMatrix {
  
#line 220
  return matrix_;
}


#line 229
- (ComItextpdfTextPdfPdfIndirectReference *)getIndirectReference {
  
#line 231
  if (thisReference_ == nil) {
    thisReference_ = [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) getPdfIndirectReference];
  }
  return thisReference_;
}


#line 237
- (void)beginVariableText {
  (void) [((ComItextpdfTextPdfByteBuffer *) nil_chk(content_)) appendWithNSString:@"/Tx BMC "];
}

- (void)endVariableText {
  
#line 242
  (void) [((ComItextpdfTextPdfByteBuffer *) nil_chk(content_)) appendWithNSString:@"EMC "];
}


#line 251
- (ComItextpdfTextPdfPdfObject *)getResources {
  
#line 252
  return [((ComItextpdfTextPdfPageResources *) nil_chk([self getPageResources])) getResources];
}


#line 262
- (ComItextpdfTextPdfPdfStream *)getFormXObjectWithInt:(jint)compressionLevel {
  
#line 263
  return [[ComItextpdfTextPdfPdfFormXObject alloc] initWithComItextpdfTextPdfPdfTemplate:self withInt:compressionLevel];
}


#line 272
- (ComItextpdfTextPdfPdfContentByte *)getDuplicate {
  
#line 273
  ComItextpdfTextPdfPdfTemplate *tpl = [[ComItextpdfTextPdfPdfTemplate alloc] init];
  tpl->writer_ = writer_;
  tpl->pdf_ = pdf_;
  tpl->thisReference_ = thisReference_;
  tpl->pageResources_ = pageResources_;
  tpl->bBox_ = [[ComItextpdfTextRectangle alloc] initWithComItextpdfTextRectangle:bBox_];
  tpl->group_ = group_;
  tpl->layer_ = layer_;
  if (matrix_ != nil) {
    tpl->matrix_ = [[ComItextpdfTextPdfPdfArray alloc] initWithComItextpdfTextPdfPdfArray:matrix_];
  }
  tpl->separator_ = separator_;
  tpl->additional_ = additional_;
  return tpl;
}


#line 289
- (jint)getType {
  
#line 290
  return type_;
}


#line 293
- (ComItextpdfTextPdfPageResources *)getPageResources {
  
#line 294
  return pageResources_;
}


#line 301
- (ComItextpdfTextPdfPdfTransparencyGroup *)getGroup {
  
#line 302
  return self->group_;
}


#line 309
- (void)setGroupWithComItextpdfTextPdfPdfTransparencyGroup:(ComItextpdfTextPdfPdfTransparencyGroup *)group {
  
#line 310
  self->group_ = group;
}


#line 320
- (ComItextpdfTextPdfPdfDictionary *)getAdditional {
  
#line 321
  return self->additional_;
}


#line 331
- (void)setAdditionalWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)additional {
  
#line 332
  self->additional_ = additional;
}


#line 335
- (ComItextpdfTextPdfPdfIndirectReference *)getCurrentPage {
  
#line 336
  return pageReference_ == nil ? [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) getCurrentPage] : pageReference_;
}


#line 339
- (ComItextpdfTextPdfPdfIndirectReference *)getPageReference {
  
#line 340
  return pageReference_;
}


#line 343
- (void)setPageReferenceWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)pageReference {
  
#line 344
  self->pageReference_ = pageReference;
}


#line 347
- (jboolean)isContentTagged {
  
#line 348
  return contentTagged_;
}


#line 351
- (void)setContentTaggedWithBoolean:(jboolean)contentTagged {
  
#line 352
  self->contentTagged_ = contentTagged;
}


#line 355
- (ComItextpdfTextPdfPdfObject *)getAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key {
  
#line 356
  if (accessibleAttributes_ != nil)
#line 357
  return [accessibleAttributes_ getWithId:key];
  else
#line 359
  return nil;
}


#line 362
- (void)setAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                            withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value {
  
#line 363
  if (accessibleAttributes_ == nil)
#line 364
  accessibleAttributes_ = [[JavaUtilHashMap alloc] init];
  (void) [((JavaUtilHashMap *) nil_chk(accessibleAttributes_)) putWithId:key withId:value];
}


#line 368
- (JavaUtilHashMap *)getAccessibleAttributes {
  
#line 369
  return accessibleAttributes_;
}


#line 372
- (ComItextpdfTextPdfPdfName *)getRole {
  
#line 373
  return role_;
}


#line 376
- (void)setRoleWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)role {
  
#line 377
  self->role_ = role;
}


#line 380
- (ComItextpdfTextAccessibleElementId *)getId {
  
#line 381
  if (id__ == nil)
#line 382
  id__ = [[ComItextpdfTextAccessibleElementId alloc] init];
  return id__;
}


#line 386
- (void)setIdWithComItextpdfTextAccessibleElementId:(ComItextpdfTextAccessibleElementId *)id_ {
  
#line 387
  self->id__ = id_;
}


#line 390
- (jboolean)isInline {
  
#line 391
  return YES;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfTemplate *)other {
  [super copyAllFieldsTo:other];
  other->accessibleAttributes_ = accessibleAttributes_;
  other->additional_ = additional_;
  other->bBox_ = bBox_;
  other->contentTagged_ = contentTagged_;
  other->group_ = group_;
  other->id__ = id__;
  other->layer_ = layer_;
  other->matrix_ = matrix_;
  other->pageReference_ = pageReference_;
  other->pageResources_ = pageResources_;
  other->role_ = role_;
  other->thisReference_ = thisReference_;
  other->type_ = type_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PdfTemplate", NULL, 0x4, NULL },
    { "initWithComItextpdfTextPdfPdfWriter:", "PdfTemplate", NULL, 0x0, NULL },
    { "createTemplateWithComItextpdfTextPdfPdfWriter:withFloat:withFloat:", "createTemplate", "Lcom.itextpdf.text.pdf.PdfTemplate;", 0x9, NULL },
    { "createTemplateWithComItextpdfTextPdfPdfWriter:withFloat:withFloat:withComItextpdfTextPdfPdfName:", "createTemplate", "Lcom.itextpdf.text.pdf.PdfTemplate;", 0x8, NULL },
    { "isTagged", NULL, "Z", 0x1, NULL },
    { "setWidthWithFloat:", "setWidth", "V", 0x1, NULL },
    { "setHeightWithFloat:", "setHeight", "V", 0x1, NULL },
    { "getWidth", NULL, "F", 0x1, NULL },
    { "getHeight", NULL, "F", 0x1, NULL },
    { "getBoundingBox", NULL, "Lcom.itextpdf.text.Rectangle;", 0x1, NULL },
    { "setBoundingBoxWithComItextpdfTextRectangle:", "setBoundingBox", "V", 0x1, NULL },
    { "setLayerWithComItextpdfTextPdfPdfOCG:", "setLayer", "V", 0x1, NULL },
    { "getLayer", NULL, "Lcom.itextpdf.text.pdf.PdfOCG;", 0x1, NULL },
    { "setMatrixWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", "setMatrix", "V", 0x1, NULL },
    { "getMatrix", NULL, "Lcom.itextpdf.text.pdf.PdfArray;", 0x0, NULL },
    { "getIndirectReference", NULL, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", 0x1, NULL },
    { "beginVariableText", NULL, "V", 0x1, NULL },
    { "endVariableText", NULL, "V", 0x1, NULL },
    { "getResources", NULL, "Lcom.itextpdf.text.pdf.PdfObject;", 0x0, NULL },
    { "getFormXObjectWithInt:", "getFormXObject", "Lcom.itextpdf.text.pdf.PdfStream;", 0x1, "Ljava.io.IOException;" },
    { "getDuplicate", NULL, "Lcom.itextpdf.text.pdf.PdfContentByte;", 0x1, NULL },
    { "getType", NULL, "I", 0x1, NULL },
    { "getPageResources", NULL, "Lcom.itextpdf.text.pdf.PageResources;", 0x0, NULL },
    { "getGroup", NULL, "Lcom.itextpdf.text.pdf.PdfTransparencyGroup;", 0x1, NULL },
    { "setGroupWithComItextpdfTextPdfPdfTransparencyGroup:", "setGroup", "V", 0x1, NULL },
    { "getAdditional", NULL, "Lcom.itextpdf.text.pdf.PdfDictionary;", 0x1, NULL },
    { "setAdditionalWithComItextpdfTextPdfPdfDictionary:", "setAdditional", "V", 0x1, NULL },
    { "getCurrentPage", NULL, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", 0x1, NULL },
    { "getPageReference", NULL, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", 0x1, NULL },
    { "setPageReferenceWithComItextpdfTextPdfPdfIndirectReference:", "setPageReference", "V", 0x1, NULL },
    { "isContentTagged", NULL, "Z", 0x1, NULL },
    { "setContentTaggedWithBoolean:", "setContentTagged", "V", 0x1, NULL },
    { "getAccessibleAttributeWithComItextpdfTextPdfPdfName:", "getAccessibleAttribute", "Lcom.itextpdf.text.pdf.PdfObject;", 0x1, NULL },
    { "setAccessibleAttributeWithComItextpdfTextPdfPdfName:withComItextpdfTextPdfPdfObject:", "setAccessibleAttribute", "V", 0x1, NULL },
    { "getAccessibleAttributes", NULL, "Ljava.util.HashMap;", 0x1, NULL },
    { "getRole", NULL, "Lcom.itextpdf.text.pdf.PdfName;", 0x1, NULL },
    { "setRoleWithComItextpdfTextPdfPdfName:", "setRole", "V", 0x1, NULL },
    { "getId", NULL, "Lcom.itextpdf.text.AccessibleElementId;", 0x1, NULL },
    { "setIdWithComItextpdfTextAccessibleElementId:", "setId", "V", 0x1, NULL },
    { "isInline", NULL, "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_TEMPLATE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfTemplate_TYPE_TEMPLATE },
    { "TYPE_IMPORTED_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfTemplate_TYPE_IMPORTED },
    { "TYPE_PATTERN_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfPdfTemplate_TYPE_PATTERN },
    { "type_", NULL, 0x4, "I", NULL,  },
    { "thisReference_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", NULL,  },
    { "pageResources_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PageResources;", NULL,  },
    { "bBox_", NULL, 0x4, "Lcom.itextpdf.text.Rectangle;", NULL,  },
    { "matrix_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfArray;", NULL,  },
    { "group_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfTransparencyGroup;", NULL,  },
    { "layer_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfOCG;", NULL,  },
    { "pageReference_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", NULL,  },
    { "contentTagged_", NULL, 0x4, "Z", NULL,  },
    { "additional_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfDictionary;", NULL,  },
    { "role_", NULL, 0x4, "Lcom.itextpdf.text.pdf.PdfName;", NULL,  },
    { "accessibleAttributes_", NULL, 0x4, "Ljava.util.HashMap;", NULL,  },
    { "id__", "id", 0x2, "Lcom.itextpdf.text.AccessibleElementId;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfTemplate = { "PdfTemplate", "com.itextpdf.text.pdf", NULL, 0x1, 40, methods, 16, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfTemplate;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/TextField.java
//

#ifndef _ComItextpdfTextPdfTextField_H_
#define _ComItextpdfTextPdfTextField_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/BaseField.h"

@class ComItextpdfTextPdfBaseFont;
@class ComItextpdfTextPdfPdfAppearance;
@class ComItextpdfTextPdfPdfFormField;
@class ComItextpdfTextPdfPdfWriter;
@class ComItextpdfTextRectangle;
@class IOSObjectArray;
@class JavaUtilArrayList;

@interface ComItextpdfTextPdfTextField : ComItextpdfTextPdfBaseField

#pragma mark Public

- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                       withComItextpdfTextRectangle:(ComItextpdfTextRectangle *)box
                                       withNSString:(NSString *)fieldName;

- (void)addChoiceSelectionWithInt:(jint)selection;

- (ComItextpdfTextPdfPdfAppearance *)getAppearance;

- (IOSObjectArray *)getChoiceExports;

- (IOSObjectArray *)getChoices;

- (jint)getChoiceSelection;

- (JavaUtilArrayList *)getChoiceSelections;

- (ComItextpdfTextPdfPdfFormField *)getComboField;

- (NSString *)getDefaultText;

- (ComItextpdfTextPdfBaseFont *)getExtensionFont;

- (ComItextpdfTextPdfPdfFormField *)getListField;

- (JavaUtilArrayList *)getSubstitutionFonts;

- (ComItextpdfTextPdfPdfFormField *)getTextField;

+ (NSString *)obfuscatePasswordWithNSString:(NSString *)text;

+ (NSString *)removeCRLFWithNSString:(NSString *)text;

- (void)setChoiceExportsWithNSStringArray:(IOSObjectArray *)choiceExports;

- (void)setChoicesWithNSStringArray:(IOSObjectArray *)choices;

- (void)setChoiceSelectionWithInt:(jint)choiceSelection;

- (void)setChoiceSelectionsWithJavaUtilArrayList:(JavaUtilArrayList *)selections;

- (void)setDefaultTextWithNSString:(NSString *)defaultText;

- (void)setExtensionFontWithComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)extensionFont;

- (void)setExtraMarginWithFloat:(jfloat)extraMarginLeft
                      withFloat:(jfloat)extraMarginTop;

- (void)setSubstitutionFontsWithJavaUtilArrayList:(JavaUtilArrayList *)substitutionFonts;

#pragma mark Protected

- (ComItextpdfTextPdfPdfFormField *)getChoiceFieldWithBoolean:(jboolean)isList;

#pragma mark Package-Private

- (ComItextpdfTextPdfPdfAppearance *)getListAppearance;

- (jint)getTopFirst;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfTextField)

FOUNDATION_EXPORT void ComItextpdfTextPdfTextField_initWithComItextpdfTextPdfPdfWriter_withComItextpdfTextRectangle_withNSString_(ComItextpdfTextPdfTextField *self, ComItextpdfTextPdfPdfWriter *writer, ComItextpdfTextRectangle *box, NSString *fieldName);

FOUNDATION_EXPORT ComItextpdfTextPdfTextField *new_ComItextpdfTextPdfTextField_initWithComItextpdfTextPdfPdfWriter_withComItextpdfTextRectangle_withNSString_(ComItextpdfTextPdfPdfWriter *writer, ComItextpdfTextRectangle *box, NSString *fieldName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfTextField_removeCRLFWithNSString_(NSString *text);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfTextField_obfuscatePasswordWithNSString_(NSString *text);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfTextField)

#endif // _ComItextpdfTextPdfTextField_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPatternPainter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPatternPainter.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/DocumentException.h"
#include "com/itextpdf/text/Image.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/PageResources.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfContentByte.h"
#include "com/itextpdf/text/pdf/PdfDocument.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfPattern.h"
#include "com/itextpdf/text/pdf/PdfPatternPainter.h"
#include "com/itextpdf/text/pdf/PdfSpotColor.h"
#include "com/itextpdf/text/pdf/PdfTemplate.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "java/lang/RuntimeException.h"


#line 58
@implementation ComItextpdfTextPdfPdfPatternPainter


#line 68
- (instancetype)init {
  if (self =
#line 69
  [super init]) {
    stencil_ =
#line 61
    NO;
    
#line 70
    type_ = ComItextpdfTextPdfPdfTemplate_TYPE_PATTERN;
  }
  return self;
}


#line 79
- (instancetype)initComItextpdfTextPdfPdfPatternPainterWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)wr {
  if (self =
#line 80
  [super initWithComItextpdfTextPdfPdfWriter:wr]) {
    stencil_ =
#line 61
    NO;
    type_ = ComItextpdfTextPdfPdfTemplate_TYPE_PATTERN;
  }
  return self;
}

- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)wr {
  return [self initComItextpdfTextPdfPdfPatternPainterWithComItextpdfTextPdfPdfWriter:
#line 79
wr];
}


#line 84
- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)wr
                       withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)defaultColor {
  if (self =
#line 85
  [self initComItextpdfTextPdfPdfPatternPainterWithComItextpdfTextPdfPdfWriter:wr]) {
    
#line 86
    stencil_ = YES;
    
#line 87
    if (defaultColor == nil)
#line 88
    self->defaultColor_ = ComItextpdfTextBaseColor_get_GRAY_();
    else
#line 90
    self->defaultColor_ = defaultColor;
  }
  return self;
}


#line 99
- (void)setXStepWithFloat:(jfloat)xstep {
  
#line 100
  self->xstep_ = xstep;
}


#line 109
- (void)setYStepWithFloat:(jfloat)ystep {
  
#line 110
  self->ystep_ = ystep;
}


#line 117
- (jfloat)getXStep {
  
#line 118
  return self->xstep_;
}


#line 125
- (jfloat)getYStep {
  
#line 126
  return self->ystep_;
}


#line 133
- (jboolean)isStencil {
  
#line 134
  return stencil_;
}


#line 146
- (void)setPatternMatrixWithFloat:(jfloat)a
                        withFloat:(jfloat)b
                        withFloat:(jfloat)c
                        withFloat:(jfloat)d
                        withFloat:(jfloat)e
                        withFloat:(jfloat)f {
  
#line 147
  [self setMatrixWithFloat:a withFloat:b withFloat:c withFloat:d withFloat:e withFloat:f];
}


#line 153
- (ComItextpdfTextPdfPdfPattern *)getPattern {
  
#line 154
  return [[ComItextpdfTextPdfPdfPattern alloc] initWithComItextpdfTextPdfPdfPatternPainter:self];
}


#line 163
- (ComItextpdfTextPdfPdfPattern *)getPatternWithInt:(jint)compressionLevel {
  
#line 164
  return [[ComItextpdfTextPdfPdfPattern alloc] initWithComItextpdfTextPdfPdfPatternPainter:self withInt:compressionLevel];
}


#line 173
- (ComItextpdfTextPdfPdfContentByte *)getDuplicate {
  
#line 174
  ComItextpdfTextPdfPdfPatternPainter *tpl = [[ComItextpdfTextPdfPdfPatternPainter alloc] init];
  tpl->writer_ = writer_;
  tpl->pdf_ = pdf_;
  tpl->thisReference_ = thisReference_;
  tpl->pageResources_ = pageResources_;
  tpl->bBox_ = [[ComItextpdfTextRectangle alloc] initWithComItextpdfTextRectangle:bBox_];
  tpl->xstep_ = xstep_;
  tpl->ystep_ = ystep_;
  tpl->matrix_ = matrix_;
  tpl->stencil_ = stencil_;
  tpl->defaultColor_ = defaultColor_;
  return tpl;
}


#line 192
- (ComItextpdfTextBaseColor *)getDefaultColor {
  
#line 193
  return defaultColor_;
}


#line 199
- (void)setGrayFillWithFloat:(jfloat)gray {
  
#line 200
  [self checkNoColor];
  [super setGrayFillWithFloat:gray];
}


#line 207
- (void)resetGrayFill {
  
#line 208
  [self checkNoColor];
  [super resetGrayFill];
}


#line 215
- (void)setGrayStrokeWithFloat:(jfloat)gray {
  
#line 216
  [self checkNoColor];
  [super setGrayStrokeWithFloat:gray];
}


#line 223
- (void)resetGrayStroke {
  
#line 224
  [self checkNoColor];
  [super resetGrayStroke];
}


#line 231
- (void)setRGBColorFillFWithFloat:(jfloat)red
                        withFloat:(jfloat)green
                        withFloat:(jfloat)blue {
  
#line 232
  [self checkNoColor];
  [super setRGBColorFillFWithFloat:red withFloat:green withFloat:blue];
}


#line 239
- (void)resetRGBColorFill {
  [self checkNoColor];
  [super resetRGBColorFill];
}


#line 247
- (void)setRGBColorStrokeFWithFloat:(jfloat)red
                          withFloat:(jfloat)green
                          withFloat:(jfloat)blue {
  
#line 248
  [self checkNoColor];
  [super setRGBColorStrokeFWithFloat:red withFloat:green withFloat:blue];
}


#line 255
- (void)resetRGBColorStroke {
  [self checkNoColor];
  [super resetRGBColorStroke];
}


#line 263
- (void)setCMYKColorFillFWithFloat:(jfloat)cyan
                         withFloat:(jfloat)magenta
                         withFloat:(jfloat)yellow
                         withFloat:(jfloat)black {
  
#line 264
  [self checkNoColor];
  [super setCMYKColorFillFWithFloat:cyan withFloat:magenta withFloat:yellow withFloat:black];
}


#line 271
- (void)resetCMYKColorFill {
  
#line 272
  [self checkNoColor];
  [super resetCMYKColorFill];
}


#line 279
- (void)setCMYKColorStrokeFWithFloat:(jfloat)cyan
                           withFloat:(jfloat)magenta
                           withFloat:(jfloat)yellow
                           withFloat:(jfloat)black {
  
#line 280
  [self checkNoColor];
  [super setCMYKColorStrokeFWithFloat:cyan withFloat:magenta withFloat:yellow withFloat:black];
}


#line 287
- (void)resetCMYKColorStroke {
  
#line 288
  [self checkNoColor];
  [super resetCMYKColorStroke];
}


#line 295
- (void)addImageWithComItextpdfTextImage:(ComItextpdfTextImage *)image
                               withFloat:(jfloat)a
                               withFloat:(jfloat)b
                               withFloat:(jfloat)c
                               withFloat:(jfloat)d
                               withFloat:(jfloat)e
                               withFloat:(jfloat)f {
  
#line 296
  if (stencil_ && ![((ComItextpdfTextImage *) nil_chk(image)) isMask])
#line 297
  [self checkNoColor];
  [super addImageWithComItextpdfTextImage:image withFloat:a withFloat:b withFloat:c withFloat:d withFloat:e withFloat:f];
}


#line 304
- (void)setCMYKColorFillWithInt:(jint)cyan
                        withInt:(jint)magenta
                        withInt:(jint)yellow
                        withInt:(jint)black {
  
#line 305
  [self checkNoColor];
  [super setCMYKColorFillWithInt:cyan withInt:magenta withInt:yellow withInt:black];
}


#line 312
- (void)setCMYKColorStrokeWithInt:(jint)cyan
                          withInt:(jint)magenta
                          withInt:(jint)yellow
                          withInt:(jint)black {
  
#line 313
  [self checkNoColor];
  [super setCMYKColorStrokeWithInt:cyan withInt:magenta withInt:yellow withInt:black];
}


#line 320
- (void)setRGBColorFillWithInt:(jint)red
                       withInt:(jint)green
                       withInt:(jint)blue {
  
#line 321
  [self checkNoColor];
  [super setRGBColorFillWithInt:red withInt:green withInt:blue];
}


#line 328
- (void)setRGBColorStrokeWithInt:(jint)red
                         withInt:(jint)green
                         withInt:(jint)blue {
  [self checkNoColor];
  [super setRGBColorStrokeWithInt:red withInt:green withInt:blue];
}


#line 336
- (void)setColorStrokeWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 337
  [self checkNoColor];
  [super setColorStrokeWithComItextpdfTextBaseColor:color];
}


#line 344
- (void)setColorFillWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 345
  [self checkNoColor];
  [super setColorFillWithComItextpdfTextBaseColor:color];
}


#line 352
- (void)setColorFillWithComItextpdfTextPdfPdfSpotColor:(ComItextpdfTextPdfPdfSpotColor *)sp
                                             withFloat:(jfloat)tint {
  
#line 353
  [self checkNoColor];
  [super setColorFillWithComItextpdfTextPdfPdfSpotColor:sp withFloat:tint];
}

- (void)setColorStrokeWithComItextpdfTextPdfPdfSpotColor:(ComItextpdfTextPdfPdfSpotColor *)sp
                                               withFloat:(jfloat)tint {
  
#line 361
  [self checkNoColor];
  [super setColorStrokeWithComItextpdfTextPdfPdfSpotColor:sp withFloat:tint];
}

- (void)setPatternFillWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)p {
  
#line 369
  [self checkNoColor];
  [super setPatternFillWithComItextpdfTextPdfPdfPatternPainter:p];
}


#line 376
- (void)setPatternFillWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)p
                                 withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color
                                                    withFloat:(jfloat)tint {
  
#line 377
  [self checkNoColor];
  [super setPatternFillWithComItextpdfTextPdfPdfPatternPainter:p withComItextpdfTextBaseColor:color withFloat:tint];
}


#line 384
- (void)setPatternStrokeWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)p
                                   withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color
                                                      withFloat:(jfloat)tint {
  [self checkNoColor];
  [super setPatternStrokeWithComItextpdfTextPdfPdfPatternPainter:p withComItextpdfTextBaseColor:color withFloat:tint];
}


#line 392
- (void)setPatternStrokeWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)p {
  
#line 393
  [self checkNoColor];
  [super setPatternStrokeWithComItextpdfTextPdfPdfPatternPainter:p];
}


#line 397
- (void)checkNoColor {
  
#line 398
  if (stencil_)
#line 399
  @throw [[JavaLangRuntimeException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"colors.are.not.allowed.in.uncolored.tile.patterns" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfPatternPainter *)other {
  [super copyAllFieldsTo:other];
  other->defaultColor_ = defaultColor_;
  other->stencil_ = stencil_;
  other->xstep_ = xstep_;
  other->ystep_ = ystep_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PdfPatternPainter", NULL, 0x2, NULL },
    { "initWithComItextpdfTextPdfPdfWriter:", "PdfPatternPainter", NULL, 0x0, NULL },
    { "initWithComItextpdfTextPdfPdfWriter:withComItextpdfTextBaseColor:", "PdfPatternPainter", NULL, 0x0, NULL },
    { "setXStepWithFloat:", "setXStep", "V", 0x1, NULL },
    { "setYStepWithFloat:", "setYStep", "V", 0x1, NULL },
    { "getXStep", NULL, "F", 0x1, NULL },
    { "getYStep", NULL, "F", 0x1, NULL },
    { "isStencil", NULL, "Z", 0x1, NULL },
    { "setPatternMatrixWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", "setPatternMatrix", "V", 0x1, NULL },
    { "getPattern", NULL, "Lcom.itextpdf.text.pdf.PdfPattern;", 0x1, NULL },
    { "getPatternWithInt:", "getPattern", "Lcom.itextpdf.text.pdf.PdfPattern;", 0x1, NULL },
    { "getDuplicate", NULL, "Lcom.itextpdf.text.pdf.PdfContentByte;", 0x1, NULL },
    { "getDefaultColor", NULL, "Lcom.itextpdf.text.BaseColor;", 0x1, NULL },
    { "setGrayFillWithFloat:", "setGrayFill", "V", 0x1, NULL },
    { "resetGrayFill", NULL, "V", 0x1, NULL },
    { "setGrayStrokeWithFloat:", "setGrayStroke", "V", 0x1, NULL },
    { "resetGrayStroke", NULL, "V", 0x1, NULL },
    { "setRGBColorFillFWithFloat:withFloat:withFloat:", "setRGBColorFillF", "V", 0x1, NULL },
    { "resetRGBColorFill", NULL, "V", 0x1, NULL },
    { "setRGBColorStrokeFWithFloat:withFloat:withFloat:", "setRGBColorStrokeF", "V", 0x1, NULL },
    { "resetRGBColorStroke", NULL, "V", 0x1, NULL },
    { "setCMYKColorFillFWithFloat:withFloat:withFloat:withFloat:", "setCMYKColorFillF", "V", 0x1, NULL },
    { "resetCMYKColorFill", NULL, "V", 0x1, NULL },
    { "setCMYKColorStrokeFWithFloat:withFloat:withFloat:withFloat:", "setCMYKColorStrokeF", "V", 0x1, NULL },
    { "resetCMYKColorStroke", NULL, "V", 0x1, NULL },
    { "addImageWithComItextpdfTextImage:withFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", "addImage", "V", 0x1, "Lcom.itextpdf.text.DocumentException;" },
    { "setCMYKColorFillWithInt:withInt:withInt:withInt:", "setCMYKColorFill", "V", 0x1, NULL },
    { "setCMYKColorStrokeWithInt:withInt:withInt:withInt:", "setCMYKColorStroke", "V", 0x1, NULL },
    { "setRGBColorFillWithInt:withInt:withInt:", "setRGBColorFill", "V", 0x1, NULL },
    { "setRGBColorStrokeWithInt:withInt:withInt:", "setRGBColorStroke", "V", 0x1, NULL },
    { "setColorStrokeWithComItextpdfTextBaseColor:", "setColorStroke", "V", 0x1, NULL },
    { "setColorFillWithComItextpdfTextBaseColor:", "setColorFill", "V", 0x1, NULL },
    { "setColorFillWithComItextpdfTextPdfPdfSpotColor:withFloat:", "setColorFill", "V", 0x1, NULL },
    { "setColorStrokeWithComItextpdfTextPdfPdfSpotColor:withFloat:", "setColorStroke", "V", 0x1, NULL },
    { "setPatternFillWithComItextpdfTextPdfPdfPatternPainter:", "setPatternFill", "V", 0x1, NULL },
    { "setPatternFillWithComItextpdfTextPdfPdfPatternPainter:withComItextpdfTextBaseColor:withFloat:", "setPatternFill", "V", 0x1, NULL },
    { "setPatternStrokeWithComItextpdfTextPdfPdfPatternPainter:withComItextpdfTextBaseColor:withFloat:", "setPatternStroke", "V", 0x1, NULL },
    { "setPatternStrokeWithComItextpdfTextPdfPdfPatternPainter:", "setPatternStroke", "V", 0x1, NULL },
    { "checkNoColor", NULL, "V", 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "xstep_", NULL, 0x0, "F", NULL,  },
    { "ystep_", NULL, 0x0, "F", NULL,  },
    { "stencil_", NULL, 0x0, "Z", NULL,  },
    { "defaultColor_", NULL, 0x0, "Lcom.itextpdf.text.BaseColor;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfPatternPainter = { "PdfPatternPainter", "com.itextpdf.text.pdf", NULL, 0x11, 39, methods, 4, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfPatternPainter;
}

@end

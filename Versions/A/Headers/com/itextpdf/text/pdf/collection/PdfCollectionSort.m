//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/collection/PdfCollectionSort.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/collection/PdfCollectionSort.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfBoolean.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/collection/PdfCollectionSort.h"
#include "java/lang/IllegalArgumentException.h"


#line 54
@implementation ComItextpdfTextPdfCollectionPdfCollectionSort


#line 60
- (instancetype)initWithNSString:(NSString *)key {
  if (self =
#line 61
  [super initWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COLLECTIONSORT_()]) {
    
#line 62
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_S_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfName alloc] initWithNSString:key]];
  }
  return self;
}


#line 69
- (instancetype)initWithNSStringArray:(IOSObjectArray *)keys {
  if (self = [super initWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COLLECTIONSORT_()]) {
    
#line 71
    ComItextpdfTextPdfPdfArray *array = [[ComItextpdfTextPdfPdfArray alloc] init];
    
#line 72
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(keys))->size_; i++) {
      [array addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfName alloc] initWithNSString:IOSObjectArray_Get(keys, i)]];
    }
    
#line 75
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_S_() withComItextpdfTextPdfPdfObject:array];
  }
  return self;
}


#line 82
- (void)setSortOrderWithBoolean:(jboolean)ascending {
  
#line 83
  ComItextpdfTextPdfPdfObject *o = [self getWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_S_()];
  if ([o isKindOfClass:[ComItextpdfTextPdfPdfName class]]) {
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_A_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfBoolean alloc] initWithBoolean:ascending]];
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"you.have.to.define.a.boolean.array.for.this.collection.sort.dictionary" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
}


#line 96
- (void)setSortOrderWithBooleanArray:(IOSBooleanArray *)ascending {
  
#line 97
  ComItextpdfTextPdfPdfObject *o = [self getWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_S_()];
  if ([o isKindOfClass:[ComItextpdfTextPdfPdfArray class]]) {
    if ([((ComItextpdfTextPdfPdfArray *) nil_chk(((ComItextpdfTextPdfPdfArray *) check_class_cast(o, [ComItextpdfTextPdfPdfArray class])))) size] != ((IOSBooleanArray *) nil_chk(ascending))->size_) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"the.number.of.booleans.in.this.array.doesn.t.correspond.with.the.number.of.fields" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
    ComItextpdfTextPdfPdfArray *array = [[ComItextpdfTextPdfPdfArray alloc] init];
    for (jint i = 0; i < ascending->size_; i++) {
      [array addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfBoolean alloc] initWithBoolean:IOSBooleanArray_Get(ascending, i)]];
    }
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_A_() withComItextpdfTextPdfPdfObject:array];
  }
  else {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"you.need.a.single.boolean.for.this.collection.sort.dictionary" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "PdfCollectionSort", NULL, 0x1, NULL },
    { "initWithNSStringArray:", "PdfCollectionSort", NULL, 0x1, NULL },
    { "setSortOrderWithBoolean:", "setSortOrder", "V", 0x1, NULL },
    { "setSortOrderWithBooleanArray:", "setSortOrder", "V", 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfCollectionPdfCollectionSort = { "PdfCollectionSort", "com.itextpdf.text.pdf.collection", NULL, 0x1, 4, methods, 0, NULL, 0, NULL};
  return &_ComItextpdfTextPdfCollectionPdfCollectionSort;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/IntHashtable.java
//

#ifndef _ComItextpdfTextPdfIntHashtable_H_
#define _ComItextpdfTextPdfIntHashtable_H_

#include "J2ObjC_header.h"
#include "java/util/Iterator.h"

@class IOSIntArray;
@class IOSObjectArray;

@interface ComItextpdfTextPdfIntHashtable : NSObject < NSCopying >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor;

- (void)clear;

- (id)clone;

- (jboolean)containsWithInt:(jint)value;

- (jboolean)containsKeyWithInt:(jint)key;

- (jboolean)containsValueWithInt:(jint)value;

- (jint)getWithInt:(jint)key;

- (id<JavaUtilIterator>)getEntryIterator;

- (IOSIntArray *)getKeys;

- (jint)getOneKey;

- (jboolean)isEmpty;

- (jint)putWithInt:(jint)key
           withInt:(jint)value;

- (jint)removeWithInt:(jint)key;

- (jint)size;

- (IOSIntArray *)toOrderedKeys;

#pragma mark Protected

- (void)rehash;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfIntHashtable)

FOUNDATION_EXPORT void ComItextpdfTextPdfIntHashtable_init(ComItextpdfTextPdfIntHashtable *self);

FOUNDATION_EXPORT ComItextpdfTextPdfIntHashtable *new_ComItextpdfTextPdfIntHashtable_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfIntHashtable_initWithInt_(ComItextpdfTextPdfIntHashtable *self, jint initialCapacity);

FOUNDATION_EXPORT ComItextpdfTextPdfIntHashtable *new_ComItextpdfTextPdfIntHashtable_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfIntHashtable_initWithInt_withFloat_(ComItextpdfTextPdfIntHashtable *self, jint initialCapacity, jfloat loadFactor);

FOUNDATION_EXPORT ComItextpdfTextPdfIntHashtable *new_ComItextpdfTextPdfIntHashtable_initWithInt_withFloat_(jint initialCapacity, jfloat loadFactor) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfIntHashtable)

@interface ComItextpdfTextPdfIntHashtable_Entry : NSObject {
 @public
  jint hash__;
  jint key_;
  jint value_;
  ComItextpdfTextPdfIntHashtable_Entry *next_;
}

#pragma mark Public

- (jint)getKey;

- (jint)getValue;

#pragma mark Protected

- (instancetype)initWithInt:(jint)hash_
                    withInt:(jint)key
                    withInt:(jint)value
withComItextpdfTextPdfIntHashtable_Entry:(ComItextpdfTextPdfIntHashtable_Entry *)next;

- (id)clone;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfIntHashtable_Entry)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfIntHashtable_Entry, next_, ComItextpdfTextPdfIntHashtable_Entry *)

FOUNDATION_EXPORT void ComItextpdfTextPdfIntHashtable_Entry_initWithInt_withInt_withInt_withComItextpdfTextPdfIntHashtable_Entry_(ComItextpdfTextPdfIntHashtable_Entry *self, jint hash_, jint key, jint value, ComItextpdfTextPdfIntHashtable_Entry *next);

FOUNDATION_EXPORT ComItextpdfTextPdfIntHashtable_Entry *new_ComItextpdfTextPdfIntHashtable_Entry_initWithInt_withInt_withInt_withComItextpdfTextPdfIntHashtable_Entry_(jint hash_, jint key, jint value, ComItextpdfTextPdfIntHashtable_Entry *next) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfIntHashtable_Entry)

@interface ComItextpdfTextPdfIntHashtable_IntHashtableIterator : NSObject < JavaUtilIterator > {
 @public
  jint index_;
  IOSObjectArray *table_;
  ComItextpdfTextPdfIntHashtable_Entry *entry__;
}

#pragma mark Public

- (jboolean)hasNext;

- (ComItextpdfTextPdfIntHashtable_Entry *)next;

- (void)remove;

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfIntHashtable_EntryArray:(IOSObjectArray *)table;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfIntHashtable_IntHashtableIterator)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfIntHashtable_IntHashtableIterator, table_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfIntHashtable_IntHashtableIterator, entry__, ComItextpdfTextPdfIntHashtable_Entry *)

FOUNDATION_EXPORT void ComItextpdfTextPdfIntHashtable_IntHashtableIterator_initWithComItextpdfTextPdfIntHashtable_EntryArray_(ComItextpdfTextPdfIntHashtable_IntHashtableIterator *self, IOSObjectArray *table);

FOUNDATION_EXPORT ComItextpdfTextPdfIntHashtable_IntHashtableIterator *new_ComItextpdfTextPdfIntHashtable_IntHashtableIterator_initWithComItextpdfTextPdfIntHashtable_EntryArray_(IOSObjectArray *table) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfIntHashtable_IntHashtableIterator)

#endif // _ComItextpdfTextPdfIntHashtable_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfLayer.java
//

#ifndef _ComItextpdfTextPdfPdfLayer_H_
#define _ComItextpdfTextPdfPdfLayer_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfOCG.h"

@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfWriter;
@class IOSObjectArray;
@class JavaUtilArrayList;

@interface ComItextpdfTextPdfPdfLayer : ComItextpdfTextPdfPdfDictionary < ComItextpdfTextPdfPdfOCG > {
 @public
  ComItextpdfTextPdfPdfIndirectReference *ref_;
  JavaUtilArrayList *children_;
  ComItextpdfTextPdfPdfLayer *parent_;
  NSString *title_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
 withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)addChildWithComItextpdfTextPdfPdfLayer:(ComItextpdfTextPdfPdfLayer *)child;

+ (ComItextpdfTextPdfPdfLayer *)createTitleWithNSString:(NSString *)title
                        withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (JavaUtilArrayList *)getChildren;

- (ComItextpdfTextPdfPdfLayer *)getParent;

- (ComItextpdfTextPdfPdfObject *)getPdfObject;

- (ComItextpdfTextPdfPdfIndirectReference *)getRef;

- (jboolean)isOn;

- (jboolean)isOnPanel;

- (void)setCreatorInfoWithNSString:(NSString *)creator
                      withNSString:(NSString *)subtype;

- (void)setExportWithBoolean:(jboolean)export_;

- (void)setLanguageWithNSString:(NSString *)lang
                    withBoolean:(jboolean)preferred;

- (void)setNameWithNSString:(NSString *)name;

- (void)setOnWithBoolean:(jboolean)on;

- (void)setOnPanelWithBoolean:(jboolean)onPanel;

- (void)setPageElementWithNSString:(NSString *)pe;

- (void)setPrintWithNSString:(NSString *)subtype
                 withBoolean:(jboolean)printstate;

- (void)setUserWithNSString:(NSString *)type
          withNSStringArray:(IOSObjectArray *)names;

- (void)setViewWithBoolean:(jboolean)view;

- (void)setZoomWithFloat:(jfloat)min
               withFloat:(jfloat)max;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)title;

- (NSString *)getTitle;

- (void)setRefWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfLayer)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfLayer, ref_, ComItextpdfTextPdfPdfIndirectReference *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfLayer, children_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfLayer, parent_, ComItextpdfTextPdfPdfLayer *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfLayer, title_, NSString *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfLayer_initWithNSString_(ComItextpdfTextPdfPdfLayer *self, NSString *title);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfLayer *new_ComItextpdfTextPdfPdfLayer_initWithNSString_(NSString *title) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComItextpdfTextPdfPdfLayer *ComItextpdfTextPdfPdfLayer_createTitleWithNSString_withComItextpdfTextPdfPdfWriter_(NSString *title, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfLayer_initWithNSString_withComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfPdfLayer *self, NSString *name, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfLayer *new_ComItextpdfTextPdfPdfLayer_initWithNSString_withComItextpdfTextPdfPdfWriter_(NSString *name, ComItextpdfTextPdfPdfWriter *writer) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfLayer)

#endif // _ComItextpdfTextPdfPdfLayer_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfCopyFieldsImp.java
//

#ifndef _ComItextpdfTextPdfPdfCopyFieldsImp_H_
#define _ComItextpdfTextPdfPdfCopyFieldsImp_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"

@class ComItextpdfTextDocument;
@class ComItextpdfTextPdfAcroFields_Item;
@class ComItextpdfTextPdfPRIndirectReference;
@class ComItextpdfTextPdfPdfArray;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfRandomAccessFileOrArray;
@class JavaIoOutputStream;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@protocol ComItextpdfTextLogCounter;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface ComItextpdfTextPdfPdfCopyFieldsImp : ComItextpdfTextPdfPdfWriter {
 @public
  JavaUtilArrayList *readers_;
  JavaUtilHashMap *readers2intrefs_;
  JavaUtilHashMap *pages2intrefs_;
  JavaUtilHashMap *visited_;
  JavaUtilArrayList *fields_;
  ComItextpdfTextPdfRandomAccessFileOrArray *file_;
  JavaUtilHashMap *fieldTree_;
  JavaUtilArrayList *pageRefs_;
  JavaUtilArrayList *pageDics_;
  ComItextpdfTextPdfPdfDictionary *resources_;
  ComItextpdfTextPdfPdfDictionary *form_;
  jboolean closing_;
  ComItextpdfTextDocument *nd_;
  id<ComItextpdfTextLogCounter> COUNTER_;
}

#pragma mark Public

- (void)close;

- (ComItextpdfTextPdfPdfIndirectReference *)getPageReferenceWithInt:(jint)page;

- (void)openDoc;

#pragma mark Protected

- (ComItextpdfTextPdfPdfArray *)branchFormWithJavaUtilHashMap:(JavaUtilHashMap *)level
                   withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)parent
                                                 withNSString:(NSString *)fname;

- (void)closeIt;

- (void)createAcroForms;

- (ComItextpdfTextPdfPdfDictionary *)getCatalogWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)rootObj;

- (id<ComItextpdfTextLogCounter>)getCounter;

- (jint)getNewObjectNumberWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                  withInt:(jint)number
                                                  withInt:(jint)generation;

- (ComItextpdfTextPdfPdfIndirectReference *)getNewReferenceWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)ref;

- (ComItextpdfTextPdfPdfName *)getOffStateNameWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)widget;

- (jboolean)isPageWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)ref;

- (jboolean)isVisitedWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                             withInt:(jint)number
                                             withInt:(jint)generation;

- (jboolean)isVisitedWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)ref;

- (jboolean)setVisitedWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)ref;

- (void)updateCalculationOrderWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

#pragma mark Package-Private

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os;

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os
                                  withChar:(jchar)pdfVersion;

- (void)addDocumentWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (void)addDocumentWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                  withJavaUtilList:(id<JavaUtilList>)pagesToKeep;

- (void)addPageOffsetToFieldWithJavaUtilMap:(id<JavaUtilMap>)fd
                                    withInt:(jint)pageOffset;

- (void)createWidgetsWithJavaUtilArrayList:(JavaUtilArrayList *)list
     withComItextpdfTextPdfAcroFields_Item:(ComItextpdfTextPdfAcroFields_Item *)item;

- (ComItextpdfTextPdfRandomAccessFileOrArray *)getReaderFileWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (void)mergeFieldWithNSString:(NSString *)name
withComItextpdfTextPdfAcroFields_Item:(ComItextpdfTextPdfAcroFields_Item *)item;

- (void)mergeFields;

- (void)mergeWithMasterWithJavaUtilMap:(id<JavaUtilMap>)fd;

- (void)propagateWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)obj
      withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)refo
                                     withBoolean:(jboolean)restricted;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfCopyFieldsImp)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, readers_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, readers2intrefs_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, pages2intrefs_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, visited_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, fields_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, file_, ComItextpdfTextPdfRandomAccessFileOrArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, fieldTree_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, pageRefs_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, pageDics_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, resources_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, form_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, nd_, ComItextpdfTextDocument *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopyFieldsImp, COUNTER_, id<ComItextpdfTextLogCounter>)

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfPdfCopyFieldsImp_widgetKeys_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfCopyFieldsImp, widgetKeys_, JavaUtilHashMap *)

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfPdfCopyFieldsImp_fieldKeys_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfCopyFieldsImp, fieldKeys_, JavaUtilHashMap *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfCopyFieldsImp_initWithJavaIoOutputStream_(ComItextpdfTextPdfPdfCopyFieldsImp *self, JavaIoOutputStream *os);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfCopyFieldsImp *new_ComItextpdfTextPdfPdfCopyFieldsImp_initWithJavaIoOutputStream_(JavaIoOutputStream *os) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfCopyFieldsImp_initWithJavaIoOutputStream_withChar_(ComItextpdfTextPdfPdfCopyFieldsImp *self, JavaIoOutputStream *os, jchar pdfVersion);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfCopyFieldsImp *new_ComItextpdfTextPdfPdfCopyFieldsImp_initWithJavaIoOutputStream_withChar_(JavaIoOutputStream *os, jchar pdfVersion) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfCopyFieldsImp)

#endif // _ComItextpdfTextPdfPdfCopyFieldsImp_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/qrcode/ByteMatrix.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/qrcode/ByteMatrix.java"

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/pdf/qrcode/ByteMatrix.h"
#include "java/lang/StringBuffer.h"


#line 29
@implementation ComItextpdfTextPdfQrcodeByteMatrix


#line 35
- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  if (self = [super init]) {
    
#line 36
    bytes_ = [IOSByteArray arrayWithDimensions:2 lengths:(jint[]){ height, width }];
    
#line 37
    self->width_ = width;
    
#line 38
    self->height_ = height;
  }
  return self;
}


#line 41
- (jint)getHeight {
  
#line 42
  return height_;
}


#line 45
- (jint)getWidth {
  
#line 46
  return width_;
}


#line 49
- (jbyte)getWithInt:(jint)x
            withInt:(jint)y {
  
#line 50
  return IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(bytes_), y)), x);
}


#line 53
- (IOSObjectArray *)getArray {
  
#line 54
  return bytes_;
}


#line 57
- (void)setWithInt:(jint)x
           withInt:(jint)y
          withByte:(jbyte)value {
  
#line 58
  *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(bytes_), y)), x) = value;
}


#line 61
- (void)setWithInt:(jint)x
           withInt:(jint)y
           withInt:(jint)value {
  
#line 62
  *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(bytes_), y)), x) = (jbyte) value;
}


#line 65
- (void)clearWithByte:(jbyte)value {
  
#line 66
  for (jint y = 0; y < height_; ++y) {
    for (jint x = 0; x < width_; ++x) {
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(bytes_), y)), x) = value;
    }
  }
}

- (NSString *)description {
  
#line 74
  JavaLangStringBuffer *result = [[JavaLangStringBuffer alloc] initWithInt:2 * width_ * height_ + 2];
  for (jint y = 0; y < height_; ++y) {
    for (jint x = 0; x < width_; ++x) {
      switch (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(bytes_), y)), x)) {
        case 0:
        (void) [result appendWithNSString:@" 0"];
        break;
        case 1:
        (void) [result appendWithNSString:@" 1"];
        break;
        default:
        (void) [result appendWithNSString:@"  "];
        break;
      }
    }
    (void) [result appendWithChar:0x000a];
  }
  return [result description];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfQrcodeByteMatrix *)other {
  [super copyAllFieldsTo:other];
  other->bytes_ = bytes_;
  other->height_ = height_;
  other->width_ = width_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:", "ByteMatrix", NULL, 0x1, NULL },
    { "getHeight", NULL, "I", 0x1, NULL },
    { "getWidth", NULL, "I", 0x1, NULL },
    { "getWithInt:withInt:", "get", "B", 0x1, NULL },
    { "getArray", NULL, "[[B", 0x1, NULL },
    { "setWithInt:withInt:withByte:", "set", "V", 0x1, NULL },
    { "setWithInt:withInt:withInt:", "set", "V", 0x1, NULL },
    { "clearWithByte:", "clear", "V", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bytes_", NULL, 0x12, "[[B", NULL,  },
    { "width_", NULL, 0x12, "I", NULL,  },
    { "height_", NULL, 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfQrcodeByteMatrix = { "ByteMatrix", "com.itextpdf.text.pdf.qrcode", NULL, 0x11, 9, methods, 3, fields, 0, NULL};
  return &_ComItextpdfTextPdfQrcodeByteMatrix;
}

@end

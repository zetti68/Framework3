//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/qrcode/Encoder.java
//

#ifndef _ComItextpdfTextPdfQrcodeEncoder_H_
#define _ComItextpdfTextPdfQrcodeEncoder_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextPdfQrcodeBitVector;
@class ComItextpdfTextPdfQrcodeByteArray;
@class ComItextpdfTextPdfQrcodeErrorCorrectionLevel;
@class ComItextpdfTextPdfQrcodeMode;
@class ComItextpdfTextPdfQrcodeQRCode;
@class IOSIntArray;
@protocol JavaUtilMap;

@interface ComItextpdfTextPdfQrcodeEncoder : NSObject

#pragma mark Public

+ (ComItextpdfTextPdfQrcodeMode *)chooseModeWithNSString:(NSString *)content;

+ (ComItextpdfTextPdfQrcodeMode *)chooseModeWithNSString:(NSString *)content
                                            withNSString:(NSString *)encoding;

+ (void)encodeWithNSString:(NSString *)content
withComItextpdfTextPdfQrcodeErrorCorrectionLevel:(ComItextpdfTextPdfQrcodeErrorCorrectionLevel *)ecLevel
           withJavaUtilMap:(id<JavaUtilMap>)hints
withComItextpdfTextPdfQrcodeQRCode:(ComItextpdfTextPdfQrcodeQRCode *)qrCode;

+ (void)encodeWithNSString:(NSString *)content
withComItextpdfTextPdfQrcodeErrorCorrectionLevel:(ComItextpdfTextPdfQrcodeErrorCorrectionLevel *)ecLevel
withComItextpdfTextPdfQrcodeQRCode:(ComItextpdfTextPdfQrcodeQRCode *)qrCode;

#pragma mark Package-Private

+ (void)append8BitBytesWithNSString:(NSString *)content
withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits
                       withNSString:(NSString *)encoding;

+ (void)appendAlphanumericBytesWithNSString:(NSString *)content
      withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits;

+ (void)appendBytesWithNSString:(NSString *)content
withComItextpdfTextPdfQrcodeMode:(ComItextpdfTextPdfQrcodeMode *)mode
withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits
                   withNSString:(NSString *)encoding;

+ (void)appendKanjiBytesWithNSString:(NSString *)content
withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits;

+ (void)appendLengthInfoWithInt:(jint)numLetters
                        withInt:(jint)version_
withComItextpdfTextPdfQrcodeMode:(ComItextpdfTextPdfQrcodeMode *)mode
withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits;

+ (void)appendModeInfoWithComItextpdfTextPdfQrcodeMode:(ComItextpdfTextPdfQrcodeMode *)mode
                 withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits;

+ (void)appendNumericBytesWithNSString:(NSString *)content
 withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits;

+ (ComItextpdfTextPdfQrcodeByteArray *)generateECBytesWithComItextpdfTextPdfQrcodeByteArray:(ComItextpdfTextPdfQrcodeByteArray *)dataBytes
                                                                                    withInt:(jint)numEcBytesInBlock;

+ (jint)getAlphanumericCodeWithInt:(jint)code;

+ (void)getNumDataBytesAndNumECBytesForBlockIDWithInt:(jint)numTotalBytes
                                              withInt:(jint)numDataBytes
                                              withInt:(jint)numRSBlocks
                                              withInt:(jint)blockID
                                         withIntArray:(IOSIntArray *)numDataBytesInBlock
                                         withIntArray:(IOSIntArray *)numECBytesInBlock;

+ (void)interleaveWithECBytesWithComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits
                                                           withInt:(jint)numTotalBytes
                                                           withInt:(jint)numDataBytes
                                                           withInt:(jint)numRSBlocks
                             withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)result;

+ (void)terminateBitsWithInt:(jint)numDataBytes
withComItextpdfTextPdfQrcodeBitVector:(ComItextpdfTextPdfQrcodeBitVector *)bits;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfQrcodeEncoder)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfQrcodeEncoder_DEFAULT_BYTE_MODE_ENCODING_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfQrcodeEncoder, DEFAULT_BYTE_MODE_ENCODING_, NSString *)

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_encodeWithNSString_withComItextpdfTextPdfQrcodeErrorCorrectionLevel_withComItextpdfTextPdfQrcodeQRCode_(NSString *content, ComItextpdfTextPdfQrcodeErrorCorrectionLevel *ecLevel, ComItextpdfTextPdfQrcodeQRCode *qrCode);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_encodeWithNSString_withComItextpdfTextPdfQrcodeErrorCorrectionLevel_withJavaUtilMap_withComItextpdfTextPdfQrcodeQRCode_(NSString *content, ComItextpdfTextPdfQrcodeErrorCorrectionLevel *ecLevel, id<JavaUtilMap> hints, ComItextpdfTextPdfQrcodeQRCode *qrCode);

FOUNDATION_EXPORT jint ComItextpdfTextPdfQrcodeEncoder_getAlphanumericCodeWithInt_(jint code);

FOUNDATION_EXPORT ComItextpdfTextPdfQrcodeMode *ComItextpdfTextPdfQrcodeEncoder_chooseModeWithNSString_(NSString *content);

FOUNDATION_EXPORT ComItextpdfTextPdfQrcodeMode *ComItextpdfTextPdfQrcodeEncoder_chooseModeWithNSString_withNSString_(NSString *content, NSString *encoding);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_terminateBitsWithInt_withComItextpdfTextPdfQrcodeBitVector_(jint numDataBytes, ComItextpdfTextPdfQrcodeBitVector *bits);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_getNumDataBytesAndNumECBytesForBlockIDWithInt_withInt_withInt_withInt_withIntArray_withIntArray_(jint numTotalBytes, jint numDataBytes, jint numRSBlocks, jint blockID, IOSIntArray *numDataBytesInBlock, IOSIntArray *numECBytesInBlock);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_interleaveWithECBytesWithComItextpdfTextPdfQrcodeBitVector_withInt_withInt_withInt_withComItextpdfTextPdfQrcodeBitVector_(ComItextpdfTextPdfQrcodeBitVector *bits, jint numTotalBytes, jint numDataBytes, jint numRSBlocks, ComItextpdfTextPdfQrcodeBitVector *result);

FOUNDATION_EXPORT ComItextpdfTextPdfQrcodeByteArray *ComItextpdfTextPdfQrcodeEncoder_generateECBytesWithComItextpdfTextPdfQrcodeByteArray_withInt_(ComItextpdfTextPdfQrcodeByteArray *dataBytes, jint numEcBytesInBlock);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_appendModeInfoWithComItextpdfTextPdfQrcodeMode_withComItextpdfTextPdfQrcodeBitVector_(ComItextpdfTextPdfQrcodeMode *mode, ComItextpdfTextPdfQrcodeBitVector *bits);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_appendLengthInfoWithInt_withInt_withComItextpdfTextPdfQrcodeMode_withComItextpdfTextPdfQrcodeBitVector_(jint numLetters, jint version_, ComItextpdfTextPdfQrcodeMode *mode, ComItextpdfTextPdfQrcodeBitVector *bits);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_appendBytesWithNSString_withComItextpdfTextPdfQrcodeMode_withComItextpdfTextPdfQrcodeBitVector_withNSString_(NSString *content, ComItextpdfTextPdfQrcodeMode *mode, ComItextpdfTextPdfQrcodeBitVector *bits, NSString *encoding);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_appendNumericBytesWithNSString_withComItextpdfTextPdfQrcodeBitVector_(NSString *content, ComItextpdfTextPdfQrcodeBitVector *bits);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_appendAlphanumericBytesWithNSString_withComItextpdfTextPdfQrcodeBitVector_(NSString *content, ComItextpdfTextPdfQrcodeBitVector *bits);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_append8BitBytesWithNSString_withComItextpdfTextPdfQrcodeBitVector_withNSString_(NSString *content, ComItextpdfTextPdfQrcodeBitVector *bits, NSString *encoding);

FOUNDATION_EXPORT void ComItextpdfTextPdfQrcodeEncoder_appendKanjiBytesWithNSString_withComItextpdfTextPdfQrcodeBitVector_(NSString *content, ComItextpdfTextPdfQrcodeBitVector *bits);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfQrcodeEncoder)

#endif // _ComItextpdfTextPdfQrcodeEncoder_H_

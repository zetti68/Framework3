//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/qrcode/QRCode.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/qrcode/QRCode.java"

#include "com/itextpdf/text/pdf/qrcode/ByteMatrix.h"
#include "com/itextpdf/text/pdf/qrcode/ErrorCorrectionLevel.h"
#include "com/itextpdf/text/pdf/qrcode/Mode.h"
#include "com/itextpdf/text/pdf/qrcode/QRCode.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"


#line 25
@implementation ComItextpdfTextPdfQrcodeQRCode


#line 40
- (instancetype)init {
  if (self = [super init]) {
    
#line 41
    mode_ = nil;
    
#line 42
    ecLevel_ = nil;
    
#line 43
    version__ = -1;
    
#line 44
    matrixWidth_ = -1;
    
#line 45
    maskPattern_ = -1;
    
#line 46
    numTotalBytes_ = -1;
    
#line 47
    numDataBytes_ = -1;
    
#line 48
    numECBytes_ = -1;
    
#line 49
    numRSBlocks_ = -1;
    
#line 50
    matrix_ = nil;
  }
  return self;
}


#line 54
- (ComItextpdfTextPdfQrcodeMode *)getMode {
  
#line 55
  return mode_;
}


#line 59
- (ComItextpdfTextPdfQrcodeErrorCorrectionLevel *)getECLevel {
  return ecLevel_;
}


#line 64
- (jint)getVersion {
  
#line 65
  return version__;
}


#line 69
- (jint)getMatrixWidth {
  return matrixWidth_;
}


#line 74
- (jint)getMaskPattern {
  
#line 75
  return maskPattern_;
}


#line 79
- (jint)getNumTotalBytes {
  return numTotalBytes_;
}


#line 84
- (jint)getNumDataBytes {
  
#line 85
  return numDataBytes_;
}


#line 89
- (jint)getNumECBytes {
  return numECBytes_;
}


#line 94
- (jint)getNumRSBlocks {
  
#line 95
  return numRSBlocks_;
}


#line 99
- (ComItextpdfTextPdfQrcodeByteMatrix *)getMatrix {
  return matrix_;
}


#line 106
- (jint)atWithInt:(jint)x
          withInt:(jint)y {
  
#line 108
  jint value = [((ComItextpdfTextPdfQrcodeByteMatrix *) nil_chk(matrix_)) getWithInt:x withInt:y];
  if (!(value == 0 || value == 1)) {
    
#line 111
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Bad value"];
  }
  return value;
}


#line 118
- (jboolean)isValid {
  return
#line 121
  mode_ != nil &&
#line 122
  ecLevel_ != nil &&
#line 123
  version__ != -1 &&
#line 124
  matrixWidth_ != -1 &&
#line 125
  maskPattern_ != -1 &&
#line 126
  numTotalBytes_ != -1 &&
#line 127
  numDataBytes_ != -1 &&
#line 128
  numECBytes_ != -1 &&
#line 129
  numRSBlocks_ != -1 &&
#line 131
  [ComItextpdfTextPdfQrcodeQRCode isValidMaskPatternWithInt:maskPattern_] &&
#line 132
  numTotalBytes_ == numDataBytes_ + numECBytes_ &&
#line 134
  matrix_ != nil &&
#line 135
  matrixWidth_ == [matrix_ getWidth] &&
#line 137
  [matrix_ getWidth] == [matrix_ getHeight];
}

- (NSString *)description {
  
#line 142
  JavaLangStringBuffer *result = [[JavaLangStringBuffer alloc] initWithInt:200];
  (void) [result appendWithNSString:@"<<\n"];
  (void) [result appendWithNSString:@" mode: "];
  (void) [result appendWithId:mode_];
  (void) [result appendWithNSString:@"\n ecLevel: "];
  (void) [result appendWithId:ecLevel_];
  (void) [result appendWithNSString:@"\n version: "];
  (void) [result appendWithInt:version__];
  (void) [result appendWithNSString:@"\n matrixWidth: "];
  (void) [result appendWithInt:matrixWidth_];
  (void) [result appendWithNSString:@"\n maskPattern: "];
  (void) [result appendWithInt:maskPattern_];
  (void) [result appendWithNSString:@"\n numTotalBytes: "];
  (void) [result appendWithInt:numTotalBytes_];
  (void) [result appendWithNSString:@"\n numDataBytes: "];
  (void) [result appendWithInt:numDataBytes_];
  (void) [result appendWithNSString:@"\n numECBytes: "];
  (void) [result appendWithInt:numECBytes_];
  (void) [result appendWithNSString:@"\n numRSBlocks: "];
  (void) [result appendWithInt:numRSBlocks_];
  if (matrix_ == nil) {
    (void) [result appendWithNSString:@"\n matrix: null\n"];
  }
  else {
    
#line 165
    (void) [result appendWithNSString:@"\n matrix:\n"];
    (void) [result appendWithNSString:[matrix_ description]];
  }
  (void) [result appendWithNSString:@">>\n"];
  return [result description];
}


#line 172
- (void)setModeWithComItextpdfTextPdfQrcodeMode:(ComItextpdfTextPdfQrcodeMode *)value {
  
#line 173
  mode_ = value;
}


#line 176
- (void)setECLevelWithComItextpdfTextPdfQrcodeErrorCorrectionLevel:(ComItextpdfTextPdfQrcodeErrorCorrectionLevel *)value {
  
#line 177
  ecLevel_ = value;
}


#line 180
- (void)setVersionWithInt:(jint)value {
  
#line 181
  version__ = value;
}


#line 184
- (void)setMatrixWidthWithInt:(jint)value {
  
#line 185
  matrixWidth_ = value;
}


#line 188
- (void)setMaskPatternWithInt:(jint)value {
  
#line 189
  maskPattern_ = value;
}


#line 192
- (void)setNumTotalBytesWithInt:(jint)value {
  
#line 193
  numTotalBytes_ = value;
}


#line 196
- (void)setNumDataBytesWithInt:(jint)value {
  
#line 197
  numDataBytes_ = value;
}


#line 200
- (void)setNumECBytesWithInt:(jint)value {
  
#line 201
  numECBytes_ = value;
}


#line 204
- (void)setNumRSBlocksWithInt:(jint)value {
  
#line 205
  numRSBlocks_ = value;
}


#line 209
- (void)setMatrixWithComItextpdfTextPdfQrcodeByteMatrix:(ComItextpdfTextPdfQrcodeByteMatrix *)value {
  matrix_ = value;
}


#line 214
+ (jboolean)isValidMaskPatternWithInt:(jint)maskPattern {
  
#line 215
  return maskPattern >= 0 && maskPattern < ComItextpdfTextPdfQrcodeQRCode_NUM_MASK_PATTERNS;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfQrcodeQRCode *)other {
  [super copyAllFieldsTo:other];
  other->ecLevel_ = ecLevel_;
  other->maskPattern_ = maskPattern_;
  other->matrix_ = matrix_;
  other->matrixWidth_ = matrixWidth_;
  other->mode_ = mode_;
  other->numDataBytes_ = numDataBytes_;
  other->numECBytes_ = numECBytes_;
  other->numRSBlocks_ = numRSBlocks_;
  other->numTotalBytes_ = numTotalBytes_;
  other->version__ = version__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "QRCode", NULL, 0x1, NULL },
    { "getMode", NULL, "Lcom.itextpdf.text.pdf.qrcode.Mode;", 0x1, NULL },
    { "getECLevel", NULL, "Lcom.itextpdf.text.pdf.qrcode.ErrorCorrectionLevel;", 0x1, NULL },
    { "getVersion", NULL, "I", 0x1, NULL },
    { "getMatrixWidth", NULL, "I", 0x1, NULL },
    { "getMaskPattern", NULL, "I", 0x1, NULL },
    { "getNumTotalBytes", NULL, "I", 0x1, NULL },
    { "getNumDataBytes", NULL, "I", 0x1, NULL },
    { "getNumECBytes", NULL, "I", 0x1, NULL },
    { "getNumRSBlocks", NULL, "I", 0x1, NULL },
    { "getMatrix", NULL, "Lcom.itextpdf.text.pdf.qrcode.ByteMatrix;", 0x1, NULL },
    { "atWithInt:withInt:", "at", "I", 0x1, NULL },
    { "isValid", NULL, "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "setModeWithComItextpdfTextPdfQrcodeMode:", "setMode", "V", 0x1, NULL },
    { "setECLevelWithComItextpdfTextPdfQrcodeErrorCorrectionLevel:", "setECLevel", "V", 0x1, NULL },
    { "setVersionWithInt:", "setVersion", "V", 0x1, NULL },
    { "setMatrixWidthWithInt:", "setMatrixWidth", "V", 0x1, NULL },
    { "setMaskPatternWithInt:", "setMaskPattern", "V", 0x1, NULL },
    { "setNumTotalBytesWithInt:", "setNumTotalBytes", "V", 0x1, NULL },
    { "setNumDataBytesWithInt:", "setNumDataBytes", "V", 0x1, NULL },
    { "setNumECBytesWithInt:", "setNumECBytes", "V", 0x1, NULL },
    { "setNumRSBlocksWithInt:", "setNumRSBlocks", "V", 0x1, NULL },
    { "setMatrixWithComItextpdfTextPdfQrcodeByteMatrix:", "setMatrix", "V", 0x1, NULL },
    { "isValidMaskPatternWithInt:", "isValidMaskPattern", "Z", 0x9, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NUM_MASK_PATTERNS_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfQrcodeQRCode_NUM_MASK_PATTERNS },
    { "mode_", NULL, 0x2, "Lcom.itextpdf.text.pdf.qrcode.Mode;", NULL,  },
    { "ecLevel_", NULL, 0x2, "Lcom.itextpdf.text.pdf.qrcode.ErrorCorrectionLevel;", NULL,  },
    { "version__", "version", 0x2, "I", NULL,  },
    { "matrixWidth_", NULL, 0x2, "I", NULL,  },
    { "maskPattern_", NULL, 0x2, "I", NULL,  },
    { "numTotalBytes_", NULL, 0x2, "I", NULL,  },
    { "numDataBytes_", NULL, 0x2, "I", NULL,  },
    { "numECBytes_", NULL, 0x2, "I", NULL,  },
    { "numRSBlocks_", NULL, 0x2, "I", NULL,  },
    { "matrix_", NULL, 0x2, "Lcom.itextpdf.text.pdf.qrcode.ByteMatrix;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfQrcodeQRCode = { "QRCode", "com.itextpdf.text.pdf.qrcode", NULL, 0x11, 25, methods, 11, fields, 0, NULL};
  return &_ComItextpdfTextPdfQrcodeQRCode;
}

@end

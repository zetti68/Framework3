//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/SequenceList.java
//

#ifndef _ComItextpdfTextPdfSequenceList_H_
#define _ComItextpdfTextPdfSequenceList_H_

#include "J2ObjC_header.h"

@class IOSCharArray;
@protocol JavaUtilList;

#define ComItextpdfTextPdfSequenceList_COMMA 1
#define ComItextpdfTextPdfSequenceList_MINUS 2
#define ComItextpdfTextPdfSequenceList_NOT 3
#define ComItextpdfTextPdfSequenceList_TEXT 4
#define ComItextpdfTextPdfSequenceList_NUMBER 5
#define ComItextpdfTextPdfSequenceList_END 6
#define ComItextpdfTextPdfSequenceList_EOT 0xffff

@interface ComItextpdfTextPdfSequenceList : NSObject {
 @public
  IOSCharArray *text_;
  jint ptr_;
  jint number_;
  NSString *other_;
  jint low_;
  jint high_;
  jboolean odd_;
  jboolean even_;
  jboolean inverse_;
}

#pragma mark Public

+ (id<JavaUtilList>)expandWithNSString:(NSString *)ranges
                               withInt:(jint)maxNumber;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)range;

- (jboolean)getAttributes;

- (jint)getType;

- (jchar)nextChar;

- (void)putBack;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfSequenceList)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfSequenceList, text_, IOSCharArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfSequenceList, other_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSequenceList, COMMA, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSequenceList, MINUS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSequenceList, NOT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSequenceList, TEXT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSequenceList, NUMBER, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSequenceList, END, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSequenceList, EOT, jchar)

FOUNDATION_EXPORT void ComItextpdfTextPdfSequenceList_initWithNSString_(ComItextpdfTextPdfSequenceList *self, NSString *range);

FOUNDATION_EXPORT ComItextpdfTextPdfSequenceList *new_ComItextpdfTextPdfSequenceList_initWithNSString_(NSString *range) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<JavaUtilList> ComItextpdfTextPdfSequenceList_expandWithNSString_withInt_(NSString *ranges, jint maxNumber);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfSequenceList)

#endif // _ComItextpdfTextPdfSequenceList_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/languages/ArabicLigaturizer.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/languages/ArabicLigaturizer.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/pdf/BidiLine.h"
#include "com/itextpdf/text/pdf/BidiOrder.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "com/itextpdf/text/pdf/languages/ArabicLigaturizer.h"
#include "java/lang/Character.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/util/HashMap.h"

BOOL ComItextpdfTextPdfLanguagesArabicLigaturizer_initialized = NO;


#line 59
@implementation ComItextpdfTextPdfLanguagesArabicLigaturizer

JavaUtilHashMap * ComItextpdfTextPdfLanguagesArabicLigaturizer_maptable_;
IOSObjectArray * ComItextpdfTextPdfLanguagesArabicLigaturizer_chartable_;


#line 63
+ (jboolean)isVowelWithChar:(jchar)s {
  return ((s >= (jint) 0x064B) && (s <= (jint) 0x0655)) || (s == (jint) 0x0670);
}

+ (jchar)charshapeWithChar:(jchar)s
                   withInt:(jint)which {
  
#line 70
  if ((s >= (jint) 0x0621) && (s <= (jint) 0x06D3)) {
    IOSCharArray *c = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfLanguagesArabicLigaturizer_maptable_)) getWithId:[JavaLangCharacter valueOfWithChar:s]];
    if (c != nil)
#line 73
    return IOSCharArray_Get(c, which + 1);
  }
  else if (s >= (jint) 0xfef5 && s <= (jint) 0xfefb)
#line 76
  return (jchar) (s + which);
  return s;
}


#line 80
+ (jint)shapecountWithChar:(jchar)s {
  
#line 81
  if ((s >= (jint) 0x0621) && (s <= (jint) 0x06D3) && ![ComItextpdfTextPdfLanguagesArabicLigaturizer isVowelWithChar:s]) {
    IOSCharArray *c = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfLanguagesArabicLigaturizer_maptable_)) getWithId:[JavaLangCharacter valueOfWithChar:s]];
    if (c != nil)
#line 84
    return c->size_ - 1;
  }
  else if (s == ComItextpdfTextPdfLanguagesArabicLigaturizer_ZWJ) {
    return 4;
  }
  return 1;
}


#line 92
+ (jint)ligatureWithChar:(jchar)newchar
withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:(ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *)oldchar {
  
#line 94
  jint retval = 0;
  
#line 96
  if (((ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *) nil_chk(oldchar))->basechar_ == 0)
#line 97
  return 0;
  if ([ComItextpdfTextPdfLanguagesArabicLigaturizer isVowelWithChar:newchar]) {
    retval = 1;
    if ((oldchar->vowel_ != 0) && (newchar != ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA)) {
      retval = 2;
    }
    switch (newchar) {
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA:
      if (oldchar->mark1_ == 0) {
        oldchar->mark1_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA;
      }
      else {
        return 0;
      }
      break;
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_HAMZABELOW:
      switch (oldchar->basechar_) {
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEF:
        oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFHAMZABELOW;
        retval = 2;
        break;
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEF:
        oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFHAMZABELOW;
        retval = 2;
        break;
        default:
        oldchar->mark1_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_HAMZABELOW;
        break;
      }
      break;
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_HAMZAABOVE:
      switch (oldchar->basechar_) {
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEF:
        oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFHAMZA;
        retval = 2;
        break;
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEF:
        oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFHAMZA;
        retval = 2;
        break;
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_WAW:
        oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_WAWHAMZA;
        retval = 2;
        break;
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_YEH:
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFMAKSURA:
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_FARSIYEH:
        oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_YEHHAMZA;
        retval = 2;
        break;
        default:
        oldchar->mark1_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_HAMZAABOVE;
        break;
      }
      break;
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_MADDA:
      switch (oldchar->basechar_) {
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEF:
        oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFMADDA;
        retval = 2;
        break;
      }
      break;
      default:
      oldchar->vowel_ = newchar;
      break;
    }
    if (retval == 1) {
      oldchar->lignum_++;
    }
    return retval;
  }
  if (oldchar->vowel_ != 0) {
    return 0;
  }
  
#line 173
  switch (oldchar->basechar_) {
    case ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM:
    switch (newchar) {
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEF:
      oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEF;
      oldchar->numshapes_ = 2;
      retval = 3;
      break;
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFHAMZA:
      oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFHAMZA;
      oldchar->numshapes_ = 2;
      retval = 3;
      break;
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFHAMZABELOW:
      oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFHAMZABELOW;
      oldchar->numshapes_ = 2;
      retval = 3;
      break;
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFMADDA:
      oldchar->basechar_ = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFMADDA;
      oldchar->numshapes_ = 2;
      retval = 3;
      break;
    }
    break;
    case 0:
    oldchar->basechar_ = newchar;
    oldchar->numshapes_ = [ComItextpdfTextPdfLanguagesArabicLigaturizer shapecountWithChar:newchar];
    retval = 1;
    break;
  }
  return retval;
}


#line 207
+ (void)copycstostringWithJavaLangStringBuffer:(JavaLangStringBuffer *)string
withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:(ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *)s
                                       withInt:(jint)level {
  
#line 209
  if (((ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *) nil_chk(s))->basechar_ == 0)
#line 210
  return;
  
#line 212
  (void) [((JavaLangStringBuffer *) nil_chk(string)) appendWithChar:s->basechar_];
  s->lignum_--;
  if (s->mark1_ != 0) {
    if ((level & ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_novowel) == 0) {
      (void) [string appendWithChar:s->mark1_];
      s->lignum_--;
    }
    else {
      s->lignum_--;
    }
  }
  if (s->vowel_ != 0) {
    if ((level & ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_novowel) == 0) {
      (void) [string appendWithChar:s->vowel_];
      s->lignum_--;
    }
    else {
      s->lignum_--;
    }
  }
}


#line 241
+ (void)doubleligWithJavaLangStringBuffer:(JavaLangStringBuffer *)string
                                  withInt:(jint)level {
  
#line 244
  jint len;
  jint olen = len = [((JavaLangStringBuffer *) nil_chk(string)) sequenceLength];
  jint j = 0, si = 1;
  jchar lapresult;
  
#line 249
  while (si < olen) {
    lapresult = 0;
    if ((level & ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_composedtashkeel) != 0) {
      switch ([string charAtWithInt:j]) {
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA:
        switch ([string charAtWithInt:si]) {
          case ComItextpdfTextPdfLanguagesArabicLigaturizer_KASRA:
          lapresult = (jint) 0xFC62;
          break;
          case ComItextpdfTextPdfLanguagesArabicLigaturizer_FATHA:
          lapresult = (jint) 0xFC60;
          break;
          case ComItextpdfTextPdfLanguagesArabicLigaturizer_DAMMA:
          lapresult = (jint) 0xFC61;
          break;
          case (jint) 0x064C:
          lapresult = (jint) 0xFC5E;
          break;
          case (jint) 0x064D:
          lapresult = (jint) 0xFC5F;
          break;
        }
        break;
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_KASRA:
        if ([string charAtWithInt:si] == ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA)
#line 274
        lapresult = (jint) 0xFC62;
        break;
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_FATHA:
        if ([string charAtWithInt:si] == ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA)
#line 278
        lapresult = (jint) 0xFC60;
        break;
        case ComItextpdfTextPdfLanguagesArabicLigaturizer_DAMMA:
        if ([string charAtWithInt:si] == ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA)
#line 282
        lapresult = (jint) 0xFC61;
        break;
      }
    }
    
#line 287
    if ((level & ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_lig) != 0) {
      switch ([string charAtWithInt:j]) {
        case (jint) 0xFEDF:
        switch ([string charAtWithInt:si]) {
          case (jint) 0xFE9E:
          lapresult = (jint) 0xFC3F;
          break;
          case (jint) 0xFEA0:
          lapresult = (jint) 0xFCC9;
          break;
          case (jint) 0xFEA2:
          lapresult = (jint) 0xFC40;
          break;
          case (jint) 0xFEA4:
          lapresult = (jint) 0xFCCA;
          break;
          case (jint) 0xFEA6:
          lapresult = (jint) 0xFC41;
          break;
          case (jint) 0xFEA8:
          lapresult = (jint) 0xFCCB;
          break;
          case (jint) 0xFEE2:
          lapresult = (jint) 0xFC42;
          break;
          case (jint) 0xFEE4:
          lapresult = (jint) 0xFCCC;
          break;
        }
        break;
        case (jint) 0xFE97:
        switch ([string charAtWithInt:si]) {
          case (jint) 0xFEA0:
          lapresult = (jint) 0xFCA1;
          break;
          case (jint) 0xFEA4:
          lapresult = (jint) 0xFCA2;
          break;
          case (jint) 0xFEA8:
          lapresult = (jint) 0xFCA3;
          break;
        }
        break;
        case (jint) 0xFE91:
        switch ([string charAtWithInt:si]) {
          case (jint) 0xFEA0:
          lapresult = (jint) 0xFC9C;
          break;
          case (jint) 0xFEA4:
          lapresult = (jint) 0xFC9D;
          break;
          case (jint) 0xFEA8:
          lapresult = (jint) 0xFC9E;
          break;
        }
        break;
        case (jint) 0xFEE7:
        switch ([string charAtWithInt:si]) {
          case (jint) 0xFEA0:
          lapresult = (jint) 0xFCD2;
          break;
          case (jint) 0xFEA4:
          lapresult = (jint) 0xFCD3;
          break;
          case (jint) 0xFEA8:
          lapresult = (jint) 0xFCD4;
          break;
        }
        break;
        
#line 357
        case (jint) 0xFEE8:
        switch ([string charAtWithInt:si]) {
          case (jint) 0xFEAE:
          lapresult = (jint) 0xFC8A;
          break;
          case (jint) 0xFEB0:
          lapresult = (jint) 0xFC8B;
          break;
        }
        break;
        case (jint) 0xFEE3:
        switch ([string charAtWithInt:si]) {
          case (jint) 0xFEA0:
          lapresult = (jint) 0xFCCE;
          break;
          case (jint) 0xFEA4:
          lapresult = (jint) 0xFCCF;
          break;
          case (jint) 0xFEA8:
          lapresult = (jint) 0xFCD0;
          break;
          case (jint) 0xFEE4:
          lapresult = (jint) 0xFCD1;
          break;
        }
        break;
        
#line 384
        case (jint) 0xFED3:
        switch ([string charAtWithInt:si]) {
          case (jint) 0xFEF2:
          lapresult = (jint) 0xFC32;
          break;
        }
        break;
        
#line 392
        default:
        break;
      }
    }
    if (lapresult != 0) {
      [string setCharAtWithInt:j withChar:lapresult];
      len--;
      si++;
    }
    else {
      
#line 403
      j++;
      [string setCharAtWithInt:j withChar:[string charAtWithInt:si]];
      si++;
    }
  }
  [string setLengthWithInt:len];
}


#line 411
+ (jboolean)connects_to_leftWithComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:(ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *)a {
  
#line 412
  return ((ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *) nil_chk(a))->numshapes_ > 2;
}


#line 415
+ (void)shapeWithCharArray:(IOSCharArray *)text
  withJavaLangStringBuffer:(JavaLangStringBuffer *)string
                   withInt:(jint)level {
  
#line 423
  jint join;
  jint which;
  jchar nextletter;
  
#line 427
  jint p = 0;
  ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *oldchar = [[ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct alloc] init];
  ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *curchar = [[ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct alloc] init];
  while (p < ((IOSCharArray *) nil_chk(text))->size_) {
    nextletter = IOSCharArray_Get(text, p++);
    
#line 434
    join = [ComItextpdfTextPdfLanguagesArabicLigaturizer ligatureWithChar:nextletter withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:curchar];
    if (join == 0) {
      jint nc = [ComItextpdfTextPdfLanguagesArabicLigaturizer shapecountWithChar:nextletter];
      
#line 438
      if (nc == 1) {
        which = 0;
      }
      else {
        which = 2;
      }
      if ([ComItextpdfTextPdfLanguagesArabicLigaturizer connects_to_leftWithComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:oldchar]) {
        which++;
      }
      
#line 448
      which = which % (curchar->numshapes_);
      curchar->basechar_ = [ComItextpdfTextPdfLanguagesArabicLigaturizer charshapeWithChar:curchar->basechar_ withInt:which];
      
#line 452
      [ComItextpdfTextPdfLanguagesArabicLigaturizer copycstostringWithJavaLangStringBuffer:string withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:oldchar withInt:level];
      oldchar = curchar;
      
#line 456
      curchar = [[ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct alloc] init];
      curchar->basechar_ = nextletter;
      curchar->numshapes_ = nc;
      curchar->lignum_++;
    }
    else
#line 462
    if (join == 1) {
    }
  }
  
#line 472
  if ([ComItextpdfTextPdfLanguagesArabicLigaturizer connects_to_leftWithComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:oldchar])
#line 473
  which = 1;
  else
#line 475
  which = 0;
  which = which % (curchar->numshapes_);
  curchar->basechar_ = [ComItextpdfTextPdfLanguagesArabicLigaturizer charshapeWithChar:curchar->basechar_ withInt:which];
  
#line 480
  [ComItextpdfTextPdfLanguagesArabicLigaturizer copycstostringWithJavaLangStringBuffer:string withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:oldchar withInt:level];
  [ComItextpdfTextPdfLanguagesArabicLigaturizer copycstostringWithJavaLangStringBuffer:string withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:curchar withInt:level];
}


#line 484
+ (jint)arabic_shapeWithCharArray:(IOSCharArray *)src
                          withInt:(jint)srcoffset
                          withInt:(jint)srclength
                    withCharArray:(IOSCharArray *)dest
                          withInt:(jint)destoffset
                          withInt:(jint)destlength
                          withInt:(jint)level {
  
#line 485
  IOSCharArray *str = [IOSCharArray arrayWithLength:srclength];
  for (jint k = srclength + srcoffset - 1; k >= srcoffset; --k)
#line 487
  *IOSCharArray_GetRef(str, k - srcoffset) = IOSCharArray_Get(nil_chk(src), k);
  JavaLangStringBuffer *string = [[JavaLangStringBuffer alloc] initWithInt:srclength];
  [ComItextpdfTextPdfLanguagesArabicLigaturizer shapeWithCharArray:str withJavaLangStringBuffer:string withInt:level];
  if ((level & (ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_composedtashkeel | ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_lig)) != 0)
#line 491
  [ComItextpdfTextPdfLanguagesArabicLigaturizer doubleligWithJavaLangStringBuffer:string withInt:level];
  
#line 493
  [JavaLangSystem arraycopyWithId:[((NSString *) nil_chk([string description])) toCharArray] withInt:0 withId:dest withInt:destoffset withInt:[string sequenceLength]];
  return [string sequenceLength];
}


#line 497
+ (void)processNumbersWithCharArray:(IOSCharArray *)text
                            withInt:(jint)offset
                            withInt:(jint)length
                            withInt:(jint)options {
  
#line 498
  jint limit = offset + length;
  if ((options & ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_MASK) != 0) {
    jchar digitBase = '0';
    switch (options & ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGIT_TYPE_MASK) {
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGIT_TYPE_AN:
      digitBase = 0x0660;
      break;
      
#line 506
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGIT_TYPE_AN_EXTENDED:
      digitBase = 0x06f0;
      break;
      
#line 510
      default:
      break;
    }
    
#line 514
    switch (options & ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_MASK) {
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_EN2AN:
      {
        
#line 516
        jint digitDelta = digitBase - '0';
        for (jint i = offset; i < limit; ++i) {
          jchar ch = IOSCharArray_Get(nil_chk(text), i);
          if (ch <= '9' && ch >= '0') {
            *IOSCharArray_GetRef(text, i) += digitDelta;
          }
        }
      }
      break;
      
#line 526
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_AN2EN:
      {
        
#line 527
        jchar digitTop = (jchar) (digitBase + 9);
        jint digitDelta = '0' - digitBase;
        for (jint i = offset; i < limit; ++i) {
          jchar ch = IOSCharArray_Get(nil_chk(text), i);
          if (ch <= digitTop && ch >= digitBase) {
            *IOSCharArray_GetRef(text, i) += digitDelta;
          }
        }
      }
      break;
      
#line 538
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_EN2AN_INIT_LR:
      [ComItextpdfTextPdfLanguagesArabicLigaturizer shapeToArabicDigitsWithContextWithCharArray:text withInt:0 withInt:length withChar:digitBase withBoolean:NO];
      break;
      
#line 542
      case ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_EN2AN_INIT_AL:
      [ComItextpdfTextPdfLanguagesArabicLigaturizer shapeToArabicDigitsWithContextWithCharArray:text withInt:0 withInt:length withChar:digitBase withBoolean:YES];
      break;
      
#line 546
      default:
      break;
    }
  }
}


#line 552
+ (void)shapeToArabicDigitsWithContextWithCharArray:(IOSCharArray *)dest
                                            withInt:(jint)start
                                            withInt:(jint)length
                                           withChar:(jchar)digitBase
                                        withBoolean:(jboolean)lastStrongWasAL {
  
#line 553
  digitBase -= '0';
  
#line 555
  jint limit = start + length;
  for (jint i = start; i < limit; ++i) {
    jchar ch = IOSCharArray_Get(nil_chk(dest), i);
    switch ([ComItextpdfTextPdfBidiOrder getDirectionWithChar:ch]) {
      case ComItextpdfTextPdfBidiOrder_L:
      case ComItextpdfTextPdfBidiOrder_R:
      lastStrongWasAL = NO;
      break;
      case ComItextpdfTextPdfBidiOrder_AL:
      lastStrongWasAL = YES;
      break;
      case ComItextpdfTextPdfBidiOrder_EN:
      if (lastStrongWasAL && ch <= '9') {
        *IOSCharArray_GetRef(dest, i) = (jchar) (ch + digitBase);
      }
      break;
      default:
      break;
    }
  }
}


#line 757
- (instancetype)init {
  if (self = [super init]) {
    options_ =
#line 754
    0;
    runDirection_ =
#line 755
    ComItextpdfTextPdfPdfWriter_RUN_DIRECTION_RTL;
  }
  return self;
}


#line 760
- (instancetype)initWithInt:(jint)runDirection
                    withInt:(jint)options {
  if (self = [super init]) {
    options_ =
#line 754
    0;
    runDirection_ =
#line 755
    ComItextpdfTextPdfPdfWriter_RUN_DIRECTION_RTL;
    
#line 761
    self->runDirection_ = runDirection;
    
#line 762
    self->options_ = options;
  }
  return self;
}


#line 765
- (NSString *)processWithNSString:(NSString *)s {
  
#line 766
  return [ComItextpdfTextPdfBidiLine processLTRWithNSString:s withInt:runDirection_ withInt:options_];
}


#line 774
- (jboolean)isRTL {
  
#line 775
  return YES;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfLanguagesArabicLigaturizer *)other {
  [super copyAllFieldsTo:other];
  other->options_ = options_;
  other->runDirection_ = runDirection_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfLanguagesArabicLigaturizer class]) {
    ComItextpdfTextPdfLanguagesArabicLigaturizer_maptable_ =
#line 61
    [[JavaUtilHashMap alloc] init];
    ComItextpdfTextPdfLanguagesArabicLigaturizer_chartable_ = [IOSObjectArray arrayWithObjects:(id[]){ [IOSCharArray arrayWithChars:(jchar[]){
#line 608
      (jint) 0x0621, (jint) 0xFE80 } count:2], [IOSCharArray arrayWithChars:(jchar[]){
#line 609
        (jint) 0x0622, (jint) 0xFE81, (jint) 0xFE82 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 610
          (jint) 0x0623, (jint) 0xFE83, (jint) 0xFE84 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 611
            (jint) 0x0624, (jint) 0xFE85, (jint) 0xFE86 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 612
              (jint) 0x0625, (jint) 0xFE87, (jint) 0xFE88 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 613
                (jint) 0x0626, (jint) 0xFE89, (jint) 0xFE8A, (jint) 0xFE8B, (jint) 0xFE8C } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 614
                  (jint) 0x0627, (jint) 0xFE8D, (jint) 0xFE8E } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 615
                    (jint) 0x0628, (jint) 0xFE8F, (jint) 0xFE90, (jint) 0xFE91, (jint) 0xFE92 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 616
                      (jint) 0x0629, (jint) 0xFE93, (jint) 0xFE94 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 617
                        (jint) 0x062A, (jint) 0xFE95, (jint) 0xFE96, (jint) 0xFE97, (jint) 0xFE98 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 618
                          (jint) 0x062B, (jint) 0xFE99, (jint) 0xFE9A, (jint) 0xFE9B, (jint) 0xFE9C } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 619
                            (jint) 0x062C, (jint) 0xFE9D, (jint) 0xFE9E, (jint) 0xFE9F, (jint) 0xFEA0 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 620
                              (jint) 0x062D, (jint) 0xFEA1, (jint) 0xFEA2, (jint) 0xFEA3, (jint) 0xFEA4 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 621
                                (jint) 0x062E, (jint) 0xFEA5, (jint) 0xFEA6, (jint) 0xFEA7, (jint) 0xFEA8 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 622
                                  (jint) 0x062F, (jint) 0xFEA9, (jint) 0xFEAA } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 623
                                    (jint) 0x0630, (jint) 0xFEAB, (jint) 0xFEAC } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 624
                                      (jint) 0x0631, (jint) 0xFEAD, (jint) 0xFEAE } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 625
                                        (jint) 0x0632, (jint) 0xFEAF, (jint) 0xFEB0 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 626
                                          (jint) 0x0633, (jint) 0xFEB1, (jint) 0xFEB2, (jint) 0xFEB3, (jint) 0xFEB4 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 627
                                            (jint) 0x0634, (jint) 0xFEB5, (jint) 0xFEB6, (jint) 0xFEB7, (jint) 0xFEB8 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 628
                                              (jint) 0x0635, (jint) 0xFEB9, (jint) 0xFEBA, (jint) 0xFEBB, (jint) 0xFEBC } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 629
                                                (jint) 0x0636, (jint) 0xFEBD, (jint) 0xFEBE, (jint) 0xFEBF, (jint) 0xFEC0 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 630
                                                  (jint) 0x0637, (jint) 0xFEC1, (jint) 0xFEC2, (jint) 0xFEC3, (jint) 0xFEC4 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 631
                                                    (jint) 0x0638, (jint) 0xFEC5, (jint) 0xFEC6, (jint) 0xFEC7, (jint) 0xFEC8 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 632
                                                      (jint) 0x0639, (jint) 0xFEC9, (jint) 0xFECA, (jint) 0xFECB, (jint) 0xFECC } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 633
                                                        (jint) 0x063A, (jint) 0xFECD, (jint) 0xFECE, (jint) 0xFECF, (jint) 0xFED0 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 634
                                                          (jint) 0x0640, (jint) 0x0640, (jint) 0x0640, (jint) 0x0640, (jint) 0x0640 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 635
                                                            (jint) 0x0641, (jint) 0xFED1, (jint) 0xFED2, (jint) 0xFED3, (jint) 0xFED4 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 636
                                                              (jint) 0x0642, (jint) 0xFED5, (jint) 0xFED6, (jint) 0xFED7, (jint) 0xFED8 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 637
                                                                (jint) 0x0643, (jint) 0xFED9, (jint) 0xFEDA, (jint) 0xFEDB, (jint) 0xFEDC } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 638
                                                                  (jint) 0x0644, (jint) 0xFEDD, (jint) 0xFEDE, (jint) 0xFEDF, (jint) 0xFEE0 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 639
                                                                    (jint) 0x0645, (jint) 0xFEE1, (jint) 0xFEE2, (jint) 0xFEE3, (jint) 0xFEE4 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 640
                                                                      (jint) 0x0646, (jint) 0xFEE5, (jint) 0xFEE6, (jint) 0xFEE7, (jint) 0xFEE8 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 641
                                                                        (jint) 0x0647, (jint) 0xFEE9, (jint) 0xFEEA, (jint) 0xFEEB, (jint) 0xFEEC } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 642
                                                                          (jint) 0x0648, (jint) 0xFEED, (jint) 0xFEEE } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 643
                                                                            (jint) 0x0649, (jint) 0xFEEF, (jint) 0xFEF0, (jint) 0xFBE8, (jint) 0xFBE9 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 644
                                                                              (jint) 0x064A, (jint) 0xFEF1, (jint) 0xFEF2, (jint) 0xFEF3, (jint) 0xFEF4 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 645
                                                                                (jint) 0x0671, (jint) 0xFB50, (jint) 0xFB51 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 646
                                                                                  (jint) 0x0679, (jint) 0xFB66, (jint) 0xFB67, (jint) 0xFB68, (jint) 0xFB69 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 647
                                                                                    (jint) 0x067A, (jint) 0xFB5E, (jint) 0xFB5F, (jint) 0xFB60, (jint) 0xFB61 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 648
                                                                                      (jint) 0x067B, (jint) 0xFB52, (jint) 0xFB53, (jint) 0xFB54, (jint) 0xFB55 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 649
                                                                                        (jint) 0x067E, (jint) 0xFB56, (jint) 0xFB57, (jint) 0xFB58, (jint) 0xFB59 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 650
                                                                                          (jint) 0x067F, (jint) 0xFB62, (jint) 0xFB63, (jint) 0xFB64, (jint) 0xFB65 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 651
                                                                                            (jint) 0x0680, (jint) 0xFB5A, (jint) 0xFB5B, (jint) 0xFB5C, (jint) 0xFB5D } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 652
                                                                                              (jint) 0x0683, (jint) 0xFB76, (jint) 0xFB77, (jint) 0xFB78, (jint) 0xFB79 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 653
                                                                                                (jint) 0x0684, (jint) 0xFB72, (jint) 0xFB73, (jint) 0xFB74, (jint) 0xFB75 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 654
                                                                                                  (jint) 0x0686, (jint) 0xFB7A, (jint) 0xFB7B, (jint) 0xFB7C, (jint) 0xFB7D } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 655
                                                                                                    (jint) 0x0687, (jint) 0xFB7E, (jint) 0xFB7F, (jint) 0xFB80, (jint) 0xFB81 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 656
                                                                                                      (jint) 0x0688, (jint) 0xFB88, (jint) 0xFB89 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 657
                                                                                                        (jint) 0x068C, (jint) 0xFB84, (jint) 0xFB85 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 658
                                                                                                          (jint) 0x068D, (jint) 0xFB82, (jint) 0xFB83 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 659
                                                                                                            (jint) 0x068E, (jint) 0xFB86, (jint) 0xFB87 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 660
                                                                                                              (jint) 0x0691, (jint) 0xFB8C, (jint) 0xFB8D } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 661
                                                                                                                (jint) 0x0698, (jint) 0xFB8A, (jint) 0xFB8B } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 662
                                                                                                                  (jint) 0x06A4, (jint) 0xFB6A, (jint) 0xFB6B, (jint) 0xFB6C, (jint) 0xFB6D } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 663
                                                                                                                    (jint) 0x06A6, (jint) 0xFB6E, (jint) 0xFB6F, (jint) 0xFB70, (jint) 0xFB71 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 664
                                                                                                                      (jint) 0x06A9, (jint) 0xFB8E, (jint) 0xFB8F, (jint) 0xFB90, (jint) 0xFB91 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 665
                                                                                                                        (jint) 0x06AD, (jint) 0xFBD3, (jint) 0xFBD4, (jint) 0xFBD5, (jint) 0xFBD6 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 666
                                                                                                                          (jint) 0x06AF, (jint) 0xFB92, (jint) 0xFB93, (jint) 0xFB94, (jint) 0xFB95 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 667
                                                                                                                            (jint) 0x06B1, (jint) 0xFB9A, (jint) 0xFB9B, (jint) 0xFB9C, (jint) 0xFB9D } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 668
                                                                                                                              (jint) 0x06B3, (jint) 0xFB96, (jint) 0xFB97, (jint) 0xFB98, (jint) 0xFB99 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 669
                                                                                                                                (jint) 0x06BA, (jint) 0xFB9E, (jint) 0xFB9F } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 670
                                                                                                                                  (jint) 0x06BB, (jint) 0xFBA0, (jint) 0xFBA1, (jint) 0xFBA2, (jint) 0xFBA3 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 671
                                                                                                                                    (jint) 0x06BE, (jint) 0xFBAA, (jint) 0xFBAB, (jint) 0xFBAC, (jint) 0xFBAD } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 672
                                                                                                                                      (jint) 0x06C0, (jint) 0xFBA4, (jint) 0xFBA5 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 673
                                                                                                                                        (jint) 0x06C1, (jint) 0xFBA6, (jint) 0xFBA7, (jint) 0xFBA8, (jint) 0xFBA9 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 674
                                                                                                                                          (jint) 0x06C5, (jint) 0xFBE0, (jint) 0xFBE1 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 675
                                                                                                                                            (jint) 0x06C6, (jint) 0xFBD9, (jint) 0xFBDA } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 676
                                                                                                                                              (jint) 0x06C7, (jint) 0xFBD7, (jint) 0xFBD8 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 677
                                                                                                                                                (jint) 0x06C8, (jint) 0xFBDB, (jint) 0xFBDC } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 678
                                                                                                                                                  (jint) 0x06C9, (jint) 0xFBE2, (jint) 0xFBE3 } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 679
                                                                                                                                                    (jint) 0x06CB, (jint) 0xFBDE, (jint) 0xFBDF } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 680
                                                                                                                                                      (jint) 0x06CC, (jint) 0xFBFC, (jint) 0xFBFD, (jint) 0xFBFE, (jint) 0xFBFF } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 681
                                                                                                                                                        (jint) 0x06D0, (jint) 0xFBE4, (jint) 0xFBE5, (jint) 0xFBE6, (jint) 0xFBE7 } count:5], [IOSCharArray arrayWithChars:(jchar[]){
#line 682
                                                                                                                                                          (jint) 0x06D2, (jint) 0xFBAE, (jint) 0xFBAF } count:3], [IOSCharArray arrayWithChars:(jchar[]){
#line 683
                                                                                                                                                            (jint) 0x06D3, (jint) 0xFBB0, (jint) 0xFBB1 } count:3] } count:76 type:[IOSCharArray iosClass]];
                                                                                                                                                            {
                                                                                                                                                              {
                                                                                                                                                                IOSObjectArray *a__ =
#line 779
                                                                                                                                                                ComItextpdfTextPdfLanguagesArabicLigaturizer_chartable_;
                                                                                                                                                                IOSCharArray * const *b__ = a__->buffer_;
                                                                                                                                                                IOSCharArray * const *e__ = b__ + a__->size_;
                                                                                                                                                                while (b__ < e__) {
                                                                                                                                                                  IOSCharArray *c = *b__++;
                                                                                                                                                                  
#line 780
                                                                                                                                                                  (void) [ComItextpdfTextPdfLanguagesArabicLigaturizer_maptable_ putWithId:[JavaLangCharacter valueOfWithChar:IOSCharArray_Get(nil_chk(c), 0)] withId:c];
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                            ComItextpdfTextPdfLanguagesArabicLigaturizer_initialized = YES;
                                                                                                                                                          }
                                                                                                                                                        }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isVowelWithChar:", "isVowel", "Z", 0x8, NULL },
    { "charshapeWithChar:withInt:", "charshape", "C", 0x8, NULL },
    { "shapecountWithChar:", "shapecount", "I", 0x8, NULL },
    { "ligatureWithChar:withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:", "ligature", "I", 0x8, NULL },
    { "copycstostringWithJavaLangStringBuffer:withComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:withInt:", "copycstostring", "V", 0x8, NULL },
    { "doubleligWithJavaLangStringBuffer:withInt:", "doublelig", "V", 0x8, NULL },
    { "connects_to_leftWithComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct:", "connects_to_left", "Z", 0x8, NULL },
    { "shapeWithCharArray:withJavaLangStringBuffer:withInt:", "shape", "V", 0x8, NULL },
    { "arabic_shapeWithCharArray:withInt:withInt:withCharArray:withInt:withInt:withInt:", "arabic_shape", "I", 0x9, NULL },
    { "processNumbersWithCharArray:withInt:withInt:withInt:", "processNumbers", "V", 0x9, NULL },
    { "shapeToArabicDigitsWithContextWithCharArray:withInt:withInt:withChar:withBoolean:", "shapeToArabicDigitsWithContext", "V", 0x8, NULL },
    { "init", "ArabicLigaturizer", NULL, 0x1, NULL },
    { "initWithInt:withInt:", "ArabicLigaturizer", NULL, 0x1, NULL },
    { "processWithNSString:", "process", "Ljava.lang.String;", 0x1, NULL },
    { "isRTL", NULL, "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maptable_", NULL, 0xa, "Ljava.util.HashMap;", &ComItextpdfTextPdfLanguagesArabicLigaturizer_maptable_,  },
    { "ALEF_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEF },
    { "ALEFHAMZA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFHAMZA },
    { "ALEFHAMZABELOW_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFHAMZABELOW },
    { "ALEFMADDA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFMADDA },
    { "LAM_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM },
    { "HAMZA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_HAMZA },
    { "TATWEEL_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_TATWEEL },
    { "ZWJ_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_ZWJ },
    { "HAMZAABOVE_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_HAMZAABOVE },
    { "HAMZABELOW_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_HAMZABELOW },
    { "WAWHAMZA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_WAWHAMZA },
    { "YEHHAMZA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_YEHHAMZA },
    { "WAW_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_WAW },
    { "ALEFMAKSURA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_ALEFMAKSURA },
    { "YEH_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_YEH },
    { "FARSIYEH_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_FARSIYEH },
    { "SHADDA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_SHADDA },
    { "KASRA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_KASRA },
    { "FATHA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_FATHA },
    { "DAMMA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_DAMMA },
    { "MADDA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_MADDA },
    { "LAM_ALEF_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEF },
    { "LAM_ALEFHAMZA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFHAMZA },
    { "LAM_ALEFHAMZABELOW_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFHAMZABELOW },
    { "LAM_ALEFMADDA_", NULL, 0x1a, "C", NULL, .constantValue.asUnichar = ComItextpdfTextPdfLanguagesArabicLigaturizer_LAM_ALEFMADDA },
    { "chartable_", NULL, 0x1a, "[[C", &ComItextpdfTextPdfLanguagesArabicLigaturizer_chartable_,  },
    { "ar_nothing_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_nothing },
    { "ar_novowel_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_novowel },
    { "ar_composedtashkeel_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_composedtashkeel },
    { "ar_lig_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_ar_lig },
    { "DIGITS_EN2AN_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_EN2AN },
    { "DIGITS_AN2EN_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_AN2EN },
    { "DIGITS_EN2AN_INIT_LR_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_EN2AN_INIT_LR },
    { "DIGITS_EN2AN_INIT_AL_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_EN2AN_INIT_AL },
    { "DIGITS_RESERVED_", NULL, 0x1a, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_RESERVED },
    { "DIGITS_MASK_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGITS_MASK },
    { "DIGIT_TYPE_AN_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGIT_TYPE_AN },
    { "DIGIT_TYPE_AN_EXTENDED_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGIT_TYPE_AN_EXTENDED },
    { "DIGIT_TYPE_MASK_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfLanguagesArabicLigaturizer_DIGIT_TYPE_MASK },
    { "options_", NULL, 0x4, "I", NULL,  },
    { "runDirection_", NULL, 0x4, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfLanguagesArabicLigaturizer = { "ArabicLigaturizer", "com.itextpdf.text.pdf.languages", NULL, 0x1, 15, methods, 42, fields, 0, NULL};
  return &_ComItextpdfTextPdfLanguagesArabicLigaturizer;
}

@end


#line 745
@implementation ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct

- (instancetype)init {
  if (self = [super init]) {
    numshapes_ =
#line 750
    1;
  }
  return self;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct *)other {
  [super copyAllFieldsTo:other];
  other->basechar_ = basechar_;
  other->lignum_ = lignum_;
  other->mark1_ = mark1_;
  other->numshapes_ = numshapes_;
  other->vowel_ = vowel_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "basechar_", NULL, 0x0, "C", NULL,  },
    { "mark1_", NULL, 0x0, "C", NULL,  },
    { "vowel_", NULL, 0x0, "C", NULL,  },
    { "lignum_", NULL, 0x0, "I", NULL,  },
    { "numshapes_", NULL, 0x0, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct = { "charstruct", "com.itextpdf.text.pdf.languages", "ArabicLigaturizer", 0x8, 1, methods, 5, fields, 0, NULL};
  return &_ComItextpdfTextPdfLanguagesArabicLigaturizer_charstruct;
}

@end

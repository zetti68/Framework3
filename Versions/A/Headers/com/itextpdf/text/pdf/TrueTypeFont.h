//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/TrueTypeFont.java
//

#ifndef _ComItextpdfTextPdfTrueTypeFont_H_
#define _ComItextpdfTextPdfTrueTypeFont_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/BaseFont.h"

@class ComItextpdfTextPdfIntHashtable;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfStream;
@class ComItextpdfTextPdfPdfWriter;
@class ComItextpdfTextPdfRandomAccessFileOrArray;
@class ComItextpdfTextPdfTrueTypeFont_FontHeader;
@class ComItextpdfTextPdfTrueTypeFont_HorizontalHeader;
@class ComItextpdfTextPdfTrueTypeFont_WindowsMetrics;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@class JavaUtilHashSet;

@interface ComItextpdfTextPdfTrueTypeFont : ComItextpdfTextPdfBaseFont {
 @public
  jboolean justNames_;
  JavaUtilHashMap *tables_;
  ComItextpdfTextPdfRandomAccessFileOrArray *rf_;
  NSString *fileName_;
  jboolean cff_;
  jint cffOffset_;
  jint cffLength_;
  jint directoryOffset_;
  NSString *ttcIndex_;
  NSString *style_;
  ComItextpdfTextPdfTrueTypeFont_FontHeader *head_;
  ComItextpdfTextPdfTrueTypeFont_HorizontalHeader *hhea_;
  ComItextpdfTextPdfTrueTypeFont_WindowsMetrics *os_2_;
  IOSIntArray *glyphWidthsByIndex_;
  IOSObjectArray *bboxes_;
  JavaUtilHashMap *cmap10_;
  JavaUtilHashMap *cmap31_;
  JavaUtilHashMap *cmapExt_;
  ComItextpdfTextPdfIntHashtable *kerning_;
  NSString *fontName_;
  IOSObjectArray *fullName_;
  IOSObjectArray *allNameEntries_;
  IOSObjectArray *familyName_;
  jdouble italicAngle_;
  jboolean isFixedPitch_;
  jint underlinePosition_;
  jint underlineThickness_;
}

#pragma mark Public

- (IOSObjectArray *)getAllNameEntries;

- (IOSObjectArray *)getCodePagesSupported;

- (IOSObjectArray *)getFamilyFontName;

- (jfloat)getFontDescriptorWithInt:(jint)key
                         withFloat:(jfloat)fontSize;

- (IOSObjectArray *)getFullFontName;

- (ComItextpdfTextPdfPdfStream *)getFullFontStream;

- (jint)getKerningWithInt:(jint)char1
                  withInt:(jint)char2;

- (IOSIntArray *)getMetricsTTWithInt:(jint)c;

- (NSString *)getPostscriptFontName;

- (jboolean)hasKernPairs;

- (jboolean)setKerningWithInt:(jint)char1
                      withInt:(jint)char2
                      withInt:(jint)kern;

- (void)setPostscriptFontNameWithNSString:(NSString *)name;

#pragma mark Protected

- (instancetype)init;

- (void)addRangeUniWithJavaUtilHashMap:(JavaUtilHashMap *)longTag
                           withBoolean:(jboolean)includeMetrics
                           withBoolean:(jboolean)subsetp;

- (void)addRangeUniWithJavaUtilHashSet:(JavaUtilHashSet *)longTag
                           withBoolean:(jboolean)subsetp;

+ (IOSIntArray *)compactRangesWithJavaUtilArrayList:(JavaUtilArrayList *)ranges;

- (ComItextpdfTextPdfPdfDictionary *)getFontBaseTypeWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)fontDescriptor
                                                                                  withNSString:(NSString *)subsetPrefix
                                                                                       withInt:(jint)firstChar
                                                                                       withInt:(jint)lastChar
                                                                                 withByteArray:(IOSByteArray *)shortTag;

- (ComItextpdfTextPdfPdfDictionary *)getFontDescriptorWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)fontStream
                                                                                    withNSString:(NSString *)subsetPrefix
                                                      withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)cidset;

- (IOSByteArray *)getFullFont;

- (jint)getGlyphWidthWithInt:(jint)glyph;

- (IOSIntArray *)getRawCharBBoxWithInt:(jint)c
                          withNSString:(NSString *)name;

- (IOSByteArray *)getSubSetWithJavaUtilHashSet:(JavaUtilHashSet *)glyphs
                                   withBoolean:(jboolean)subsetp;

+ (NSString *)getTTCNameWithNSString:(NSString *)name;

- (IOSByteArray *)readCffFont;

- (void)readGlyphWidths;

- (NSString *)readStandardStringWithInt:(jint)length;

- (NSString *)readUnicodeStringWithInt:(jint)length;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)ttFile
                    withNSString:(NSString *)enc
                     withBoolean:(jboolean)emb
                   withByteArray:(IOSByteArray *)ttfAfm
                     withBoolean:(jboolean)justNames
                     withBoolean:(jboolean)forceRead;

- (void)checkCff;

- (void)fillTables;

- (IOSObjectArray *)getAllNames;

- (NSString *)getBaseFont;

- (IOSObjectArray *)getNamesWithInt:(jint)id_;

- (jint)getRawWidthWithInt:(jint)c
              withNSString:(NSString *)name;

- (void)processWithByteArray:(IOSByteArray *)ttfAfm
                 withBoolean:(jboolean)preload;

- (void)readCMaps;

- (JavaUtilHashMap *)readFormat0;

- (JavaUtilHashMap *)readFormat12;

- (JavaUtilHashMap *)readFormat4;

- (JavaUtilHashMap *)readFormat6;

- (void)readKerning;

- (void)writeFontWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
      withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                               withNSObjectArray:(IOSObjectArray *)params;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfTrueTypeFont)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, tables_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, rf_, ComItextpdfTextPdfRandomAccessFileOrArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, fileName_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, ttcIndex_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, style_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, head_, ComItextpdfTextPdfTrueTypeFont_FontHeader *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, hhea_, ComItextpdfTextPdfTrueTypeFont_HorizontalHeader *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, os_2_, ComItextpdfTextPdfTrueTypeFont_WindowsMetrics *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, glyphWidthsByIndex_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, bboxes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, cmap10_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, cmap31_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, cmapExt_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, kerning_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, fontName_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, fullName_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, allNameEntries_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont, familyName_, IOSObjectArray *)

FOUNDATION_EXPORT IOSObjectArray *ComItextpdfTextPdfTrueTypeFont_codePages_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfTrueTypeFont, codePages_, IOSObjectArray *)

FOUNDATION_EXPORT void ComItextpdfTextPdfTrueTypeFont_init(ComItextpdfTextPdfTrueTypeFont *self);

FOUNDATION_EXPORT ComItextpdfTextPdfTrueTypeFont *new_ComItextpdfTextPdfTrueTypeFont_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfTrueTypeFont_initWithNSString_withNSString_withBoolean_withByteArray_withBoolean_withBoolean_(ComItextpdfTextPdfTrueTypeFont *self, NSString *ttFile, NSString *enc, jboolean emb, IOSByteArray *ttfAfm, jboolean justNames, jboolean forceRead);

FOUNDATION_EXPORT ComItextpdfTextPdfTrueTypeFont *new_ComItextpdfTextPdfTrueTypeFont_initWithNSString_withNSString_withBoolean_withByteArray_withBoolean_withBoolean_(NSString *ttFile, NSString *enc, jboolean emb, IOSByteArray *ttfAfm, jboolean justNames, jboolean forceRead) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfTrueTypeFont_getTTCNameWithNSString_(NSString *name);

FOUNDATION_EXPORT IOSIntArray *ComItextpdfTextPdfTrueTypeFont_compactRangesWithJavaUtilArrayList_(JavaUtilArrayList *ranges);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfTrueTypeFont)

@interface ComItextpdfTextPdfTrueTypeFont_FontHeader : NSObject {
 @public
  jint flags_;
  jint unitsPerEm_;
  jshort xMin_;
  jshort yMin_;
  jshort xMax_;
  jshort yMax_;
  jint macStyle_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfTrueTypeFont_FontHeader)

FOUNDATION_EXPORT void ComItextpdfTextPdfTrueTypeFont_FontHeader_init(ComItextpdfTextPdfTrueTypeFont_FontHeader *self);

FOUNDATION_EXPORT ComItextpdfTextPdfTrueTypeFont_FontHeader *new_ComItextpdfTextPdfTrueTypeFont_FontHeader_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfTrueTypeFont_FontHeader)

@interface ComItextpdfTextPdfTrueTypeFont_HorizontalHeader : NSObject {
 @public
  jshort Ascender_;
  jshort Descender_;
  jshort LineGap_;
  jint advanceWidthMax_;
  jshort minLeftSideBearing_;
  jshort minRightSideBearing_;
  jshort xMaxExtent_;
  jshort caretSlopeRise_;
  jshort caretSlopeRun_;
  jint numberOfHMetrics_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfTrueTypeFont_HorizontalHeader)

FOUNDATION_EXPORT void ComItextpdfTextPdfTrueTypeFont_HorizontalHeader_init(ComItextpdfTextPdfTrueTypeFont_HorizontalHeader *self);

FOUNDATION_EXPORT ComItextpdfTextPdfTrueTypeFont_HorizontalHeader *new_ComItextpdfTextPdfTrueTypeFont_HorizontalHeader_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfTrueTypeFont_HorizontalHeader)

@interface ComItextpdfTextPdfTrueTypeFont_WindowsMetrics : NSObject {
 @public
  jshort xAvgCharWidth_;
  jint usWeightClass_;
  jint usWidthClass_;
  jshort fsType_;
  jshort ySubscriptXSize_;
  jshort ySubscriptYSize_;
  jshort ySubscriptXOffset_;
  jshort ySubscriptYOffset_;
  jshort ySuperscriptXSize_;
  jshort ySuperscriptYSize_;
  jshort ySuperscriptXOffset_;
  jshort ySuperscriptYOffset_;
  jshort yStrikeoutSize_;
  jshort yStrikeoutPosition_;
  jshort sFamilyClass_;
  IOSByteArray *panose_;
  IOSByteArray *achVendID_;
  jint fsSelection_;
  jint usFirstCharIndex_;
  jint usLastCharIndex_;
  jshort sTypoAscender_;
  jshort sTypoDescender_;
  jshort sTypoLineGap_;
  jint usWinAscent_;
  jint usWinDescent_;
  jint ulCodePageRange1_;
  jint ulCodePageRange2_;
  jint sCapHeight_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfTrueTypeFont_WindowsMetrics)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont_WindowsMetrics, panose_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfTrueTypeFont_WindowsMetrics, achVendID_, IOSByteArray *)

FOUNDATION_EXPORT void ComItextpdfTextPdfTrueTypeFont_WindowsMetrics_init(ComItextpdfTextPdfTrueTypeFont_WindowsMetrics *self);

FOUNDATION_EXPORT ComItextpdfTextPdfTrueTypeFont_WindowsMetrics *new_ComItextpdfTextPdfTrueTypeFont_WindowsMetrics_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfTrueTypeFont_WindowsMetrics)

#endif // _ComItextpdfTextPdfTrueTypeFont_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPRow.java
//

#ifndef _ComItextpdfTextPdfPdfPRow_H_
#define _ComItextpdfTextPdfPdfPRow_H_

@class ComItextpdfTextAccessibleElementId;
@class ComItextpdfTextPdfColumnText;
@class ComItextpdfTextPdfPdfContentByte;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfPCell;
@class ComItextpdfTextPdfPdfPTable;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;
@protocol ComItextpdfTextLogLogger;

#import "JreEmulation.h"
#include "com/itextpdf/text/pdf/interfaces/IAccessibleElement.h"

#define ComItextpdfTextPdfPdfPRow_BOTTOM_LIMIT -1.07374182E9f
#define ComItextpdfTextPdfPdfPRow_RIGHT_LIMIT 20000.0f

@interface ComItextpdfTextPdfPdfPRow : NSObject < ComItextpdfTextPdfInterfacesIAccessibleElement > {
 @public
  id<ComItextpdfTextLogLogger> LOGGER_;
  jboolean mayNotBreak_;
  IOSObjectArray *cells_;
  IOSFloatArray *widths_;
  IOSFloatArray *extraHeights_;
  jfloat maxHeight_;
  jboolean calculated_;
  jboolean adjusted_;
  IOSIntArray *canvasesPos_;
  ComItextpdfTextPdfPdfName *role_;
  JavaUtilHashMap *accessibleAttributes_;
  ComItextpdfTextAccessibleElementId *id__;
}

- (instancetype)initWithComItextpdfTextPdfPdfPCellArray:(IOSObjectArray *)cells;

- (instancetype)initWithComItextpdfTextPdfPdfPCellArray:(IOSObjectArray *)cells
                          withComItextpdfTextPdfPdfPRow:(ComItextpdfTextPdfPdfPRow *)source;

- (instancetype)initWithComItextpdfTextPdfPdfPRow:(ComItextpdfTextPdfPdfPRow *)row;

- (jboolean)setWidthsWithFloatArray:(IOSFloatArray *)widths;

- (void)initExtraHeights OBJC_METHOD_FAMILY_NONE;

- (void)setExtraHeightWithInt:(jint)cell
                    withFloat:(jfloat)height;

- (void)calculateHeights;

- (void)setMayNotBreakWithBoolean:(jboolean)mayNotBreak;

- (jboolean)isMayNotBreak;

- (void)writeBorderAndBackgroundWithFloat:(jfloat)xPos
                                withFloat:(jfloat)yPos
                                withFloat:(jfloat)currentMaxHeight
           withComItextpdfTextPdfPdfPCell:(ComItextpdfTextPdfPdfPCell *)cell
withComItextpdfTextPdfPdfContentByteArray:(IOSObjectArray *)canvases;

- (void)saveAndRotateCanvasesWithComItextpdfTextPdfPdfContentByteArray:(IOSObjectArray *)canvases
                                                             withFloat:(jfloat)a
                                                             withFloat:(jfloat)b
                                                             withFloat:(jfloat)c
                                                             withFloat:(jfloat)d
                                                             withFloat:(jfloat)e
                                                             withFloat:(jfloat)f;

- (void)restoreCanvasesWithComItextpdfTextPdfPdfContentByteArray:(IOSObjectArray *)canvases;

+ (jfloat)setColumnWithComItextpdfTextPdfColumnText:(ComItextpdfTextPdfColumnText *)ct
                                          withFloat:(jfloat)left
                                          withFloat:(jfloat)bottom
                                          withFloat:(jfloat)right
                                          withFloat:(jfloat)top;

- (void)writeCellsWithInt:(jint)colStart
                  withInt:(jint)colEnd
                withFloat:(jfloat)xPos
                withFloat:(jfloat)yPos
withComItextpdfTextPdfPdfContentByteArray:(IOSObjectArray *)canvases
              withBoolean:(jboolean)reusable;

- (jboolean)isCalculated;

- (jfloat)getMaxHeights;

- (void)setMaxHeightsWithFloat:(jfloat)maxHeight;

- (IOSFloatArray *)getEventWidthWithFloat:(jfloat)xPos
                           withFloatArray:(IOSFloatArray *)absoluteWidths;

- (void)copyRowContentWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)table
                                              withInt:(jint)idx OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfPRow *)splitRowWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)table
                                                               withInt:(jint)rowIndex
                                                             withFloat:(jfloat)new_height;

- (jfloat)getMaxRowHeightsWithoutCalculating;

- (void)setFinalMaxHeightsWithFloat:(jfloat)maxHeight;

- (void)splitRowspansWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)original
                                             withInt:(jint)originalIdx
                     withComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)part
                                             withInt:(jint)partIdx;

- (IOSObjectArray *)getCells;

- (jboolean)hasRowspan;

- (jboolean)isAdjusted;

- (void)setAdjustedWithBoolean:(jboolean)adjusted;

- (ComItextpdfTextPdfPdfObject *)getAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key;

- (void)setAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                            withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (JavaUtilHashMap *)getAccessibleAttributes;

- (ComItextpdfTextPdfPdfName *)getRole;

- (void)setRoleWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)role;

- (ComItextpdfTextAccessibleElementId *)getId;

- (void)setIdWithComItextpdfTextAccessibleElementId:(ComItextpdfTextAccessibleElementId *)id_;

+ (jboolean)isTaggedWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)canvas;

- (jboolean)isInline;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfPRow *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfPdfPRow_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, LOGGER_, id<ComItextpdfTextLogLogger>)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, cells_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, widths_, IOSFloatArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, extraHeights_, IOSFloatArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, canvasesPos_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, role_, ComItextpdfTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, accessibleAttributes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPRow, id__, ComItextpdfTextAccessibleElementId *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfPRow, BOTTOM_LIMIT, jfloat)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfPRow, RIGHT_LIMIT, jfloat)

#endif // _ComItextpdfTextPdfPdfPRow_H_

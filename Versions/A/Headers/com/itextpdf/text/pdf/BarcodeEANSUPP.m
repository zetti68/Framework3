//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodeEANSUPP.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodeEANSUPP.java"

#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/pdf/Barcode.h"
#include "com/itextpdf/text/pdf/BarcodeEANSUPP.h"
#include "com/itextpdf/text/pdf/BaseFont.h"
#include "com/itextpdf/text/pdf/PdfContentByte.h"


#line 63
@implementation ComItextpdfTextPdfBarcodeEANSUPP


#line 76
- (instancetype)initWithComItextpdfTextPdfBarcode:(ComItextpdfTextPdfBarcode *)ean
                    withComItextpdfTextPdfBarcode:(ComItextpdfTextPdfBarcode *)supp {
  if (self = [super init]) {
    
#line 77
    n_ = 8;
    
#line 78
    self->ean_ = ean;
    
#line 79
    self->supp_ = supp;
  }
  return self;
}


#line 86
- (ComItextpdfTextRectangle *)getBarcodeSize {
  
#line 87
  ComItextpdfTextRectangle *rect = [((ComItextpdfTextPdfBarcode *) nil_chk(ean_)) getBarcodeSize];
  [rect setRightWithFloat:[((ComItextpdfTextRectangle *) nil_chk(rect)) getWidth] + [((ComItextpdfTextRectangle *) nil_chk([((ComItextpdfTextPdfBarcode *) nil_chk(supp_)) getBarcodeSize])) getWidth] + n_];
  return rect;
}


#line 128
- (ComItextpdfTextRectangle *)placeBarcodeWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)cb
                                                  withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)barColor
                                                  withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)textColor {
  
#line 129
  if ([((ComItextpdfTextPdfBarcode *) nil_chk(supp_)) getFont] != nil)
#line 130
  [supp_ setBarHeightWithFloat:[((ComItextpdfTextPdfBarcode *) nil_chk(ean_)) getBarHeight] + [supp_ getBaseline] - [((ComItextpdfTextPdfBaseFont *) nil_chk([supp_ getFont])) getFontDescriptorWithInt:ComItextpdfTextPdfBaseFont_CAPHEIGHT withFloat:[supp_ getSize]]];
  else
#line 132
  [supp_ setBarHeightWithFloat:[((ComItextpdfTextPdfBarcode *) nil_chk(ean_)) getBarHeight]];
  ComItextpdfTextRectangle *eanR = [((ComItextpdfTextPdfBarcode *) nil_chk(ean_)) getBarcodeSize];
  [((ComItextpdfTextPdfPdfContentByte *) nil_chk(cb)) saveState];
  (void) [ean_ placeBarcodeWithComItextpdfTextPdfPdfContentByte:cb withComItextpdfTextBaseColor:barColor withComItextpdfTextBaseColor:textColor];
  [cb restoreState];
  [cb saveState];
  [cb concatCTMWithFloat:1 withFloat:0 withFloat:0 withFloat:1 withFloat:[((ComItextpdfTextRectangle *) nil_chk(eanR)) getWidth] + n_ withFloat:[eanR getHeight] - [ean_ getBarHeight]];
  (void) [supp_ placeBarcodeWithComItextpdfTextPdfPdfContentByte:cb withComItextpdfTextBaseColor:barColor withComItextpdfTextBaseColor:textColor];
  [cb restoreState];
  return [self getBarcodeSize];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBarcodeEANSUPP *)other {
  [super copyAllFieldsTo:other];
  other->ean_ = ean_;
  other->supp_ = supp_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfBarcode:withComItextpdfTextPdfBarcode:", "BarcodeEANSUPP", NULL, 0x1, NULL },
    { "getBarcodeSize", NULL, "Lcom.itextpdf.text.Rectangle;", 0x1, NULL },
    { "placeBarcodeWithComItextpdfTextPdfPdfContentByte:withComItextpdfTextBaseColor:withComItextpdfTextBaseColor:", "placeBarcode", "Lcom.itextpdf.text.Rectangle;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ean_", NULL, 0x4, "Lcom.itextpdf.text.pdf.Barcode;", NULL,  },
    { "supp_", NULL, 0x4, "Lcom.itextpdf.text.pdf.Barcode;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodeEANSUPP = { "BarcodeEANSUPP", "com.itextpdf.text.pdf", NULL, 0x1, 3, methods, 2, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodeEANSUPP;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodeDatamatrix.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodeDatamatrix.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/BadElementException.h"
#include "com/itextpdf/text/Element.h"
#include "com/itextpdf/text/Image.h"
#include "com/itextpdf/text/pdf/BarcodeDatamatrix.h"
#include "com/itextpdf/text/pdf/codec/CCITTG4Encoder.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/Hashtable.h"

BOOL ComItextpdfTextPdfBarcodeDatamatrix_initialized = NO;


#line 58
@implementation ComItextpdfTextPdfBarcodeDatamatrix

IOSObjectArray * ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_;
NSString * ComItextpdfTextPdfBarcodeDatamatrix_x12_ = 
#line 150
@"\x0d*> 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";


#line 162
- (instancetype)init {
  return [super init];
}


#line 165
- (void)setBitWithInt:(jint)x
              withInt:(jint)y
              withInt:(jint)xByte {
  *IOSByteArray_GetRef(nil_chk(image_), y * xByte + x / 8) |= (jbyte) (RShift32(128, (x & 7)));
}


#line 169
- (void)drawWithByteArray:(IOSByteArray *)data
                  withInt:(jint)dataSize
withComItextpdfTextPdfBarcodeDatamatrix_DmParams:(ComItextpdfTextPdfBarcodeDatamatrix_DmParams *)dm {
  
#line 170
  jint i, j, p, x, y, xs, ys, z;
  jint xByte = (((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(dm))->width_ + ws_ * 2 + 7) / 8;
  [JavaUtilArrays fillWithByteArray:image_ withByte:(jbyte) 0];
  
#line 175
  for (i = ws_; i < dm->height_ + ws_; i += dm->heightSection_) {
    for (j = ws_; j < dm->width_ + ws_; j += 2) {
      [self setBitWithInt:j withInt:i withInt:xByte];
    }
  }
  
#line 181
  for (i = dm->heightSection_ - 1 + ws_; i < dm->height_ + ws_; i += dm->heightSection_) {
    for (j = ws_; j < dm->width_ + ws_; ++j) {
      [self setBitWithInt:j withInt:i withInt:xByte];
    }
  }
  
#line 187
  for (i = ws_; i < dm->width_ + ws_; i += dm->widthSection_) {
    for (j = ws_; j < dm->height_ + ws_; ++j) {
      [self setBitWithInt:i withInt:j withInt:xByte];
    }
  }
  
#line 193
  for (i = dm->widthSection_ - 1 + ws_; i < dm->width_ + ws_; i += dm->widthSection_) {
    for (j = 1 + ws_; j < dm->height_ + ws_; j += 2) {
      [self setBitWithInt:i withInt:j withInt:xByte];
    }
  }
  p = 0;
  for (ys = 0; ys < dm->height_; ys += dm->heightSection_) {
    for (y = 1; y < dm->heightSection_ - 1; ++y) {
      for (xs = 0; xs < dm->width_; xs += dm->widthSection_) {
        for (x = 1; x < dm->widthSection_ - 1; ++x) {
          z = IOSShortArray_Get(nil_chk(place_), p++);
          if (z == 1 || (z > 1 && (IOSByteArray_Get(nil_chk(data), z / 8 - 1) & (jint) 0xff & RShift32(128, z % 8)) != 0))
#line 205
          [self setBitWithInt:x + xs + ws_ withInt:y + ys + ws_ withInt:xByte];
        }
      }
    }
  }
}


#line 212
+ (void)makePaddingWithByteArray:(IOSByteArray *)data
                         withInt:(jint)position
                         withInt:(jint)count {
  
#line 214
  if (count <= 0)
#line 215
  return;
  *IOSByteArray_GetRef(nil_chk(data), position++) = (jbyte) 129;
  while (--count > 0) {
    jint t = 129 + (position + 1) * 149 % 253 + 1;
    if (t > 254)
#line 220
    t -= 254;
    *IOSByteArray_GetRef(data, position++) = (jbyte) t;
  }
}


#line 225
+ (jboolean)isDigitWithInt:(jint)c {
  
#line 226
  return c >= '0' && c <= '9';
}


#line 229
+ (jint)asciiEncodationWithByteArray:(IOSByteArray *)text
                             withInt:(jint)textOffset
                             withInt:(jint)textLength
                       withByteArray:(IOSByteArray *)data
                             withInt:(jint)dataOffset
                             withInt:(jint)dataLength {
  
#line 230
  jint ptrIn, ptrOut, c;
  ptrIn = textOffset;
  ptrOut = dataOffset;
  textLength += textOffset;
  dataLength += dataOffset;
  while (ptrIn < textLength) {
    if (ptrOut >= dataLength)
#line 237
    return -1;
    c = IOSByteArray_Get(nil_chk(text), ptrIn++) & (jint) 0xff;
    if ([ComItextpdfTextPdfBarcodeDatamatrix isDigitWithInt:c] && ptrIn < textLength && [ComItextpdfTextPdfBarcodeDatamatrix isDigitWithInt:IOSByteArray_Get(text, ptrIn) & (jint) 0xff]) {
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) ((c - '0') * 10 + (IOSByteArray_Get(text, ptrIn++) & (jint) 0xff) - '0' + 130);
    }
    else if (c > 127) {
      if (ptrOut + 1 >= dataLength)
#line 244
      return -1;
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) 235;
      *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) (c - 128 + 1);
    }
    else {
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) (c + 1);
    }
  }
  return ptrOut - dataOffset;
}


#line 255
+ (jint)b256EncodationWithByteArray:(IOSByteArray *)text
                            withInt:(jint)textOffset
                            withInt:(jint)textLength
                      withByteArray:(IOSByteArray *)data
                            withInt:(jint)dataOffset
                            withInt:(jint)dataLength {
  
#line 256
  jint k, j, prn, tv, c;
  if (textLength == 0)
#line 258
  return 0;
  if (textLength < 250 && textLength + 2 > dataLength)
#line 260
  return -1;
  if (textLength >= 250 && textLength + 3 > dataLength)
#line 262
  return -1;
  *IOSByteArray_GetRef(nil_chk(data), dataOffset) = (jbyte) 231;
  if (textLength < 250) {
    *IOSByteArray_GetRef(data, dataOffset + 1) = (jbyte) textLength;
    k = 2;
  }
  else {
    *IOSByteArray_GetRef(data, dataOffset + 1) = (jbyte) (textLength / 250 + 249);
    *IOSByteArray_GetRef(data, dataOffset + 2) = (jbyte) (textLength % 250);
    k = 3;
  }
  [JavaLangSystem arraycopyWithId:text withInt:textOffset withId:data withInt:k + dataOffset withInt:textLength];
  k += textLength + dataOffset;
  for (j = dataOffset + 1; j < k; ++j) {
    c = IOSByteArray_Get(data, j) & (jint) 0xff;
    prn = 149 * (j + 1) % 255 + 1;
    tv = c + prn;
    if (tv > 255)
#line 280
    tv -= 256;
    *IOSByteArray_GetRef(data, j) = (jbyte) tv;
  }
  
#line 284
  return k - dataOffset;
}


#line 287
+ (jint)X12EncodationWithByteArray:(IOSByteArray *)text
                           withInt:(jint)textOffset
                           withInt:(jint)textLength
                     withByteArray:(IOSByteArray *)data
                           withInt:(jint)dataOffset
                           withInt:(jint)dataLength {
  
#line 288
  jint ptrIn, ptrOut, count, k, n, ci;
  jbyte c;
  if (textLength == 0)
#line 291
  return 0;
  ptrIn = 0;
  ptrOut = 0;
  IOSByteArray *x = [IOSByteArray arrayWithLength:textLength];
  count = 0;
  for (; ptrIn < textLength; ++ptrIn) {
    jint i = [((NSString *) nil_chk(ComItextpdfTextPdfBarcodeDatamatrix_x12_)) indexOf:(jchar) IOSByteArray_Get(nil_chk(text), ptrIn + textOffset)];
    if (i >= 0) {
      *IOSByteArray_GetRef(x, ptrIn) = (jbyte) i;
      ++count;
    }
    else {
      *IOSByteArray_GetRef(x, ptrIn) = 100;
      if (count >= 6)
#line 305
      count -= count / 3 * 3;
      for (k = 0; k < count; ++k)
#line 307
      *IOSByteArray_GetRef(x, ptrIn - k - 1) = 100;
      count = 0;
    }
  }
  if (count >= 6)
#line 312
  count -= count / 3 * 3;
  for (k = 0; k < count; ++k)
#line 314
  *IOSByteArray_GetRef(x, ptrIn - k - 1) = 100;
  ptrIn = 0;
  c = 0;
  for (; ptrIn < textLength; ++ptrIn) {
    c = IOSByteArray_Get(x, ptrIn);
    if (ptrOut >= dataLength)
#line 320
    break;
    if (c < 40) {
      if (ptrIn == 0 || (ptrIn > 0 && IOSByteArray_Get(x, ptrIn - 1) > 40))
#line 323
      *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 238;
      if (ptrOut + 2 > dataLength)
#line 325
      break;
      n = 1600 * IOSByteArray_Get(x, ptrIn) + 40 * IOSByteArray_Get(x, ptrIn + 1) + IOSByteArray_Get(x, ptrIn + 2) + 1;
      *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) (n / 256);
      *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) n;
      ptrIn += 2;
    }
    else {
      if (ptrIn > 0 && IOSByteArray_Get(x, ptrIn - 1) < 40)
#line 333
      *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 254;
      ci = IOSByteArray_Get(nil_chk(text), ptrIn + textOffset) & (jint) 0xff;
      if (ci > 127) {
        *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 235;
        ci -= 128;
      }
      if (ptrOut >= dataLength)
#line 340
      break;
      *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) (ci + 1);
    }
  }
  c = 100;
  if (textLength > 0)
#line 346
  c = IOSByteArray_Get(x, textLength - 1);
  if (ptrIn != textLength || (c < 40 && ptrOut >= dataLength))
#line 348
  return -1;
  if (c < 40)
#line 350
  *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 254;
  return ptrOut;
}


#line 354
+ (jint)EdifactEncodationWithByteArray:(IOSByteArray *)text
                               withInt:(jint)textOffset
                               withInt:(jint)textLength
                         withByteArray:(IOSByteArray *)data
                               withInt:(jint)dataOffset
                               withInt:(jint)dataLength {
  
#line 355
  jint ptrIn, ptrOut, edi, pedi, c;
  if (textLength == 0)
#line 357
  return 0;
  ptrIn = 0;
  ptrOut = 0;
  edi = 0;
  pedi = 18;
  jboolean ascii = YES;
  for (; ptrIn < textLength; ++ptrIn) {
    c = IOSByteArray_Get(nil_chk(text), ptrIn + textOffset) & (jint) 0xff;
    if (((c & (jint) 0xe0) == (jint) 0x40 || (c & (jint) 0xe0) == (jint) 0x20) && c != '_') {
      if (ascii) {
        if (ptrOut + 1 > dataLength)
#line 368
        break;
        *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 240;
        ascii = NO;
      }
      c &= (jint) 0x3f;
      edi |= LShift32(c, pedi);
      if (pedi == 0) {
        if (ptrOut + 3 > dataLength)
#line 376
        break;
        *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) (RShift32(edi, 16));
        *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) (RShift32(edi, 8));
        *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) edi;
        edi = 0;
        pedi = 18;
      }
      else
#line 384
      pedi -= 6;
    }
    else {
      if (!ascii) {
        edi |= LShift32(('_' & (jint) 0x3f), pedi);
        if (ptrOut + 3 - pedi / 8 > dataLength)
#line 390
        break;
        *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) (RShift32(edi, 16));
        if (pedi <= 12)
#line 393
        *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) (RShift32(edi, 8));
        if (pedi <= 6)
#line 395
        *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) edi;
        ascii = YES;
        pedi = 18;
        edi = 0;
      }
      if (c > 127) {
        if (ptrOut >= dataLength)
#line 402
        break;
        *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 235;
        c -= 128;
      }
      if (ptrOut >= dataLength)
#line 407
      break;
      *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) (c + 1);
    }
  }
  if (ptrIn != textLength)
#line 412
  return -1;
  if (!ascii) {
    edi |= LShift32(('_' & (jint) 0x3f), pedi);
    if (ptrOut + 3 - pedi / 8 > dataLength)
#line 416
    return -1;
    *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) (RShift32(edi, 16));
    if (pedi <= 12)
#line 419
    *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) (RShift32(edi, 8));
    if (pedi <= 6)
#line 421
    *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) edi;
  }
  return ptrOut;
}


#line 426
+ (jint)C40OrTextEncodationWithByteArray:(IOSByteArray *)text
                                 withInt:(jint)textOffset
                                 withInt:(jint)textLength
                           withByteArray:(IOSByteArray *)data
                                 withInt:(jint)dataOffset
                                 withInt:(jint)dataLength
                             withBoolean:(jboolean)c40 {
  
#line 427
  jint ptrIn, ptrOut, encPtr, last0, last1, i, a, c;
  NSString *basic, *shift2, *shift3;
  if (textLength == 0)
#line 430
  return 0;
  ptrIn = 0;
  ptrOut = 0;
  if (c40)
#line 434
  *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 230;
  else
#line 436
  *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) 239;
  shift2 = @"!\"#$%&'()*+,-./:;<=>?@[\\]^_";
  if (c40) {
    basic = @" 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    shift3 = @"`abcdefghijklmnopqrstuvwxyz{|}~\x7f";
  }
  else {
    basic = @" 0123456789abcdefghijklmnopqrstuvwxyz";
    shift3 = @"`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~\x7f";
  }
  IOSIntArray *enc = [IOSIntArray arrayWithLength:textLength * 4 + 10];
  encPtr = 0;
  last0 = 0;
  last1 = 0;
  while (ptrIn < textLength) {
    if (encPtr % 3 == 0) {
      last0 = ptrIn;
      last1 = encPtr;
    }
    c = IOSByteArray_Get(nil_chk(text), textOffset + ptrIn++) & (jint) 0xff;
    if (c > 127) {
      c -= 128;
      *IOSIntArray_GetRef(enc, encPtr++) = 1;
      *IOSIntArray_GetRef(enc, encPtr++) = 30;
    }
    jint idx = [((NSString *) nil_chk(basic)) indexOf:(jchar) c];
    if (idx >= 0) {
      *IOSIntArray_GetRef(enc, encPtr++) = idx + 3;
    }
    else if (c < 32) {
      *IOSIntArray_GetRef(enc, encPtr++) = 0;
      *IOSIntArray_GetRef(enc, encPtr++) = c;
    }
    else if ((idx = [shift2 indexOf:(jchar) c]) >= 0) {
      *IOSIntArray_GetRef(enc, encPtr++) = 1;
      *IOSIntArray_GetRef(enc, encPtr++) = idx;
    }
    else if ((idx = [((NSString *) nil_chk(shift3)) indexOf:(jchar) c]) >= 0) {
      *IOSIntArray_GetRef(enc, encPtr++) = 2;
      *IOSIntArray_GetRef(enc, encPtr++) = idx;
    }
  }
  if (encPtr % 3 != 0) {
    ptrIn = last0;
    encPtr = last1;
  }
  if (encPtr / 3 * 2 > dataLength - 2) {
    return -1;
  }
  i = 0;
  for (; i < encPtr; i += 3) {
    a = 1600 * IOSIntArray_Get(enc, i) + 40 * IOSIntArray_Get(enc, i + 1) + IOSIntArray_Get(enc, i + 2) + 1;
    *IOSByteArray_GetRef(nil_chk(data), dataOffset + ptrOut++) = (jbyte) (a / 256);
    *IOSByteArray_GetRef(data, dataOffset + ptrOut++) = (jbyte) a;
  }
  *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) 254;
  i = [ComItextpdfTextPdfBarcodeDatamatrix asciiEncodationWithByteArray:text withInt:ptrIn withInt:textLength - ptrIn withByteArray:data withInt:ptrOut withInt:dataLength - ptrOut];
  if (i < 0)
#line 494
  return i;
  return ptrOut + i;
}


#line 498
+ (jint)getEncodationWithByteArray:(IOSByteArray *)text
                           withInt:(jint)textOffset
                           withInt:(jint)textSize
                     withByteArray:(IOSByteArray *)data
                           withInt:(jint)dataOffset
                           withInt:(jint)dataSize
                           withInt:(jint)options
                       withBoolean:(jboolean)firstMatch {
  
#line 499
  jint e, j, k;
  IOSIntArray *e1 = [IOSIntArray arrayWithLength:6];
  if (dataSize < 0)
#line 502
  return -1;
  e = -1;
  options &= 7;
  if (options == 0) {
    *IOSIntArray_GetRef(e1, 0) = [ComItextpdfTextPdfBarcodeDatamatrix asciiEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    if (firstMatch && IOSIntArray_Get(e1, 0) >= 0)
#line 508
    return IOSIntArray_Get(e1, 0);
    *IOSIntArray_GetRef(e1, 1) = [ComItextpdfTextPdfBarcodeDatamatrix C40OrTextEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize withBoolean:NO];
    if (firstMatch && IOSIntArray_Get(e1, 1) >= 0)
#line 511
    return IOSIntArray_Get(e1, 1);
    *IOSIntArray_GetRef(e1, 2) = [ComItextpdfTextPdfBarcodeDatamatrix C40OrTextEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize withBoolean:YES];
    if (firstMatch && IOSIntArray_Get(e1, 2) >= 0)
#line 514
    return IOSIntArray_Get(e1, 2);
    *IOSIntArray_GetRef(e1, 3) = [ComItextpdfTextPdfBarcodeDatamatrix b256EncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    if (firstMatch && IOSIntArray_Get(e1, 3) >= 0)
#line 517
    return IOSIntArray_Get(e1, 3);
    *IOSIntArray_GetRef(e1, 4) = [ComItextpdfTextPdfBarcodeDatamatrix X12EncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    if (firstMatch && IOSIntArray_Get(e1, 4) >= 0)
#line 520
    return IOSIntArray_Get(e1, 4);
    *IOSIntArray_GetRef(e1, 5) = [ComItextpdfTextPdfBarcodeDatamatrix EdifactEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    if (firstMatch && IOSIntArray_Get(e1, 5) >= 0)
#line 523
    return IOSIntArray_Get(e1, 5);
    if (IOSIntArray_Get(e1, 0) < 0 && IOSIntArray_Get(e1, 1) < 0 && IOSIntArray_Get(e1, 2) < 0 && IOSIntArray_Get(e1, 3) < 0 && IOSIntArray_Get(e1, 4) < 0 && IOSIntArray_Get(e1, 5) < 0) {
      return -1;
    }
    j = 0;
    e = 99999;
    for (k = 0; k < 6; ++k) {
      if (IOSIntArray_Get(e1, k) >= 0 && IOSIntArray_Get(e1, k) < e) {
        e = IOSIntArray_Get(e1, k);
        j = k;
      }
    }
    if (j == 0)
#line 536
    e = [ComItextpdfTextPdfBarcodeDatamatrix asciiEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    else if (j == 1)
#line 538
    e = [ComItextpdfTextPdfBarcodeDatamatrix C40OrTextEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize withBoolean:NO];
    else if (j == 2)
#line 540
    e = [ComItextpdfTextPdfBarcodeDatamatrix C40OrTextEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize withBoolean:YES];
    else if (j == 3)
#line 542
    e = [ComItextpdfTextPdfBarcodeDatamatrix b256EncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    else if (j == 4)
#line 544
    e = [ComItextpdfTextPdfBarcodeDatamatrix X12EncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    return e;
  }
  switch (options) {
    case ComItextpdfTextPdfBarcodeDatamatrix_DM_ASCII:
    return [ComItextpdfTextPdfBarcodeDatamatrix asciiEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    case ComItextpdfTextPdfBarcodeDatamatrix_DM_C40:
    return [ComItextpdfTextPdfBarcodeDatamatrix C40OrTextEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize withBoolean:YES];
    case ComItextpdfTextPdfBarcodeDatamatrix_DM_TEXT:
    return [ComItextpdfTextPdfBarcodeDatamatrix C40OrTextEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize withBoolean:NO];
    case ComItextpdfTextPdfBarcodeDatamatrix_DM_B256:
    return [ComItextpdfTextPdfBarcodeDatamatrix b256EncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    case ComItextpdfTextPdfBarcodeDatamatrix_DM_X21:
    return [ComItextpdfTextPdfBarcodeDatamatrix X12EncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    case ComItextpdfTextPdfBarcodeDatamatrix_DM_EDIFACT:
    return [ComItextpdfTextPdfBarcodeDatamatrix EdifactEncodationWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data withInt:dataOffset withInt:dataSize];
    case ComItextpdfTextPdfBarcodeDatamatrix_DM_RAW:
    if (textSize > dataSize)
#line 562
    return -1;
    [JavaLangSystem arraycopyWithId:text withInt:textOffset withId:data withInt:dataOffset withInt:textSize];
    return textSize;
  }
  return -1;
}


#line 569
+ (jint)getNumberWithByteArray:(IOSByteArray *)text
                       withInt:(jint)ptrIn
                       withInt:(jint)n {
  
#line 570
  jint v, j, c;
  v = 0;
  for (j = 0; j < n; ++j) {
    c = IOSByteArray_Get(nil_chk(text), ptrIn++) & (jint) 0xff;
    if (c < '0' || c > '9')
#line 575
    return -1;
    v = v * 10 + c - '0';
  }
  return v;
}


#line 581
- (jint)processExtensionsWithByteArray:(IOSByteArray *)text
                               withInt:(jint)textOffset
                               withInt:(jint)textSize
                         withByteArray:(IOSByteArray *)data {
  
#line 582
  jint order, ptrIn, ptrOut, eci, fn, ft, fi, c;
  if ((options_ & ComItextpdfTextPdfBarcodeDatamatrix_DM_EXTENSION) == 0)
#line 584
  return 0;
  order = 0;
  ptrIn = 0;
  ptrOut = 0;
  while (ptrIn < textSize) {
    if (order > 20)
#line 590
    return -1;
    c = IOSByteArray_Get(nil_chk(text), textOffset + ptrIn++) & (jint) 0xff;
    ++order;
    switch (c) {
      case '.':
      extOut_ = ptrIn;
      return ptrOut;
      case 'e':
      if (ptrIn + 6 > textSize)
#line 599
      return -1;
      eci = [ComItextpdfTextPdfBarcodeDatamatrix getNumberWithByteArray:text withInt:textOffset + ptrIn withInt:6];
      if (eci < 0)
#line 602
      return -1;
      ptrIn += 6;
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) 241;
      if (eci < 127)
#line 606
      *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) (eci + 1);
      else if (eci < 16383) {
        *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) ((eci - 127) / 254 + 128);
        *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) ((eci - 127) % 254 + 1);
      }
      else {
        *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) ((eci - 16383) / 64516 + 192);
        *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) ((eci - 16383) / 254 % 254 + 1);
        *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) ((eci - 16383) % 254 + 1);
      }
      break;
      case 's':
      if (order != 1)
#line 619
      return -1;
      if (ptrIn + 9 > textSize)
#line 621
      return -1;
      fn = [ComItextpdfTextPdfBarcodeDatamatrix getNumberWithByteArray:text withInt:textOffset + ptrIn withInt:2];
      if (fn <= 0 || fn > 16)
#line 624
      return -1;
      ptrIn += 2;
      ft = [ComItextpdfTextPdfBarcodeDatamatrix getNumberWithByteArray:text withInt:textOffset + ptrIn withInt:2];
      if (ft <= 1 || ft > 16)
#line 628
      return -1;
      ptrIn += 2;
      fi = [ComItextpdfTextPdfBarcodeDatamatrix getNumberWithByteArray:text withInt:textOffset + ptrIn withInt:5];
      if (fi < 0 || fn >= 64516)
#line 632
      return -1;
      ptrIn += 5;
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) 233;
      *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) ((LShift32(fn - 1, 4)) | (17 - ft));
      *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) (fi / 254 + 1);
      *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) (fi % 254 + 1);
      break;
      case 'p':
      if (order != 1)
#line 641
      return -1;
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) 234;
      break;
      case 'm':
      if (order != 1)
#line 646
      return -1;
      if (ptrIn + 1 > textSize)
#line 648
      return -1;
      c = IOSByteArray_Get(text, textOffset + ptrIn++) & (jint) 0xff;
      if (c != '5' && c != '5')
#line 651
      return -1;
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) 234;
      *IOSByteArray_GetRef(data, ptrOut++) = (jbyte) (c == '5' ? 236 : 237);
      break;
      case 'f':
      if (order != 1 && (order != 2 || (IOSByteArray_Get(text, textOffset) != 's' && IOSByteArray_Get(text, textOffset) != 'm')))
#line 657
      return -1;
      *IOSByteArray_GetRef(nil_chk(data), ptrOut++) = (jbyte) 232;
    }
  }
  return -1;
}


#line 675
- (jint)generateWithNSString:(NSString *)text {
  
#line 676
  IOSByteArray *t = [((NSString *) nil_chk(text)) getBytesWithCharsetName:@"iso-8859-1"];
  return [self generateWithByteArray:t withInt:0 withInt:((IOSByteArray *) nil_chk(t))->size_];
}


#line 692
- (jint)generateWithByteArray:(IOSByteArray *)text
                      withInt:(jint)textOffset
                      withInt:(jint)textSize {
  
#line 693
  jint extCount, e, k, full;
  ComItextpdfTextPdfBarcodeDatamatrix_DmParams *dm, *last;
  IOSByteArray *data = [IOSByteArray arrayWithLength:2500];
  extOut_ = 0;
  extCount = [self processExtensionsWithByteArray:text withInt:textOffset withInt:textSize withByteArray:data];
  if (extCount < 0) {
    return ComItextpdfTextPdfBarcodeDatamatrix_DM_ERROR_EXTENSION;
  }
  e = -1;
  if (height_ == 0 || width_ == 0) {
    last = IOSObjectArray_Get(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_, ((IOSObjectArray *) nil_chk(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_))->size_ - 1);
    e = [ComItextpdfTextPdfBarcodeDatamatrix getEncodationWithByteArray:text withInt:textOffset + extOut_ withInt:textSize - extOut_ withByteArray:data withInt:extCount withInt:((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(last))->dataSize_ - extCount withInt:options_ withBoolean:NO];
    if (e < 0) {
      return ComItextpdfTextPdfBarcodeDatamatrix_DM_ERROR_TEXT_TOO_BIG;
    }
    e += extCount;
    for (k = 0; k < ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_->size_; ++k) {
      if (((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(IOSObjectArray_Get(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_, k)))->dataSize_ >= e)
#line 711
      break;
    }
    dm = IOSObjectArray_Get(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_, k);
    height_ = ((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(dm))->height_;
    width_ = dm->width_;
  }
  else {
    for (k = 0; k < ((IOSObjectArray *) nil_chk(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_))->size_; ++k) {
      if (height_ == ((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(IOSObjectArray_Get(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_, k)))->height_ && width_ == ((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(IOSObjectArray_Get(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_, k)))->width_)
#line 720
      break;
    }
    if (k == ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_->size_) {
      return ComItextpdfTextPdfBarcodeDatamatrix_DM_ERROR_INVALID_SQUARE;
    }
    dm = IOSObjectArray_Get(ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_, k);
    e = [ComItextpdfTextPdfBarcodeDatamatrix getEncodationWithByteArray:text withInt:textOffset + extOut_ withInt:textSize - extOut_ withByteArray:data withInt:extCount withInt:((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(dm))->dataSize_ - extCount withInt:options_ withBoolean:YES];
    if (e < 0) {
      return ComItextpdfTextPdfBarcodeDatamatrix_DM_ERROR_TEXT_TOO_BIG;
    }
    e += extCount;
  }
  if ((options_ & ComItextpdfTextPdfBarcodeDatamatrix_DM_TEST) != 0) {
    return ComItextpdfTextPdfBarcodeDatamatrix_DM_NO_ERROR;
  }
  image_ = [IOSByteArray arrayWithLength:(((ComItextpdfTextPdfBarcodeDatamatrix_DmParams *) nil_chk(dm))->width_ + 2 * ws_ + 7) / 8 * (dm->height_ + 2 * ws_)];
  [ComItextpdfTextPdfBarcodeDatamatrix makePaddingWithByteArray:data withInt:e withInt:dm->dataSize_ - e];
  place_ = [ComItextpdfTextPdfBarcodeDatamatrix_Placement doPlacementWithInt:dm->height_ - dm->height_ / dm->heightSection_ * 2 withInt:dm->width_ - dm->width_ / dm->widthSection_ * 2];
  full = dm->dataSize_ + (dm->dataSize_ + 2) / dm->dataBlock_ * dm->errorBlock_;
  [ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon generateECCWithByteArray:data withInt:dm->dataSize_ withInt:dm->dataBlock_ withInt:dm->errorBlock_];
  [self drawWithByteArray:data withInt:full withComItextpdfTextPdfBarcodeDatamatrix_DmParams:dm];
  return ComItextpdfTextPdfBarcodeDatamatrix_DM_NO_ERROR;
}


#line 749
- (ComItextpdfTextImage *)createImage {
  if (image_ == nil)
#line 751
  return nil;
  IOSByteArray *g4 = [ComItextpdfTextPdfCodecCCITTG4Encoder compressWithByteArray:image_ withInt:width_ + 2 * ws_ withInt:height_ + 2 * ws_];
  return [ComItextpdfTextImage getInstanceWithInt:width_ + 2 * ws_ withInt:height_ + 2 * ws_ withBoolean:NO withInt:ComItextpdfTextElement_CCITTG4 withInt:0 withByteArray:g4 withIntArray:nil];
}


#line 783
- (IOSByteArray *)getImage {
  
#line 784
  return image_;
}


#line 792
- (jint)getHeight {
  
#line 793
  return height_;
}


#line 832
- (void)setHeightWithInt:(jint)height {
  
#line 833
  self->height_ = height;
}


#line 841
- (jint)getWidth {
  
#line 842
  return width_;
}


#line 881
- (void)setWidthWithInt:(jint)width {
  
#line 882
  self->width_ = width;
}


#line 889
- (jint)getWs {
  
#line 890
  return ws_;
}


#line 897
- (void)setWsWithInt:(jint)ws {
  
#line 898
  self->ws_ = ws;
}


#line 905
- (jint)getOptions {
  
#line 906
  return options_;
}


#line 936
- (void)setOptionsWithInt:(jint)options {
  
#line 937
  self->options_ = options;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBarcodeDatamatrix *)other {
  [super copyAllFieldsTo:other];
  other->extOut_ = extOut_;
  other->height_ = height_;
  other->image_ = image_;
  other->options_ = options_;
  other->place_ = place_;
  other->width_ = width_;
  other->ws_ = ws_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfBarcodeDatamatrix class]) {
    ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_ = [IOSObjectArray arrayWithObjects:(id[]){
#line 119
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:10 withInt:10 withInt:10 withInt:10 withInt:3 withInt:3 withInt:5],
#line 120
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:12 withInt:12 withInt:12 withInt:12 withInt:5 withInt:5 withInt:7],
#line 121
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:8 withInt:18 withInt:8 withInt:18 withInt:5 withInt:5 withInt:7],
#line 122
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:14 withInt:14 withInt:14 withInt:14 withInt:8 withInt:8 withInt:10],
#line 123
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:8 withInt:32 withInt:8 withInt:16 withInt:10 withInt:10 withInt:11],
#line 124
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:16 withInt:16 withInt:16 withInt:16 withInt:12 withInt:12 withInt:12],
#line 125
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:12 withInt:26 withInt:12 withInt:26 withInt:16 withInt:16 withInt:14],
#line 126
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:18 withInt:18 withInt:18 withInt:18 withInt:18 withInt:18 withInt:14],
#line 127
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:20 withInt:20 withInt:20 withInt:20 withInt:22 withInt:22 withInt:18],
#line 128
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:12 withInt:36 withInt:12 withInt:18 withInt:22 withInt:22 withInt:18],
#line 129
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:22 withInt:22 withInt:22 withInt:22 withInt:30 withInt:30 withInt:20],
#line 130
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:16 withInt:36 withInt:16 withInt:18 withInt:32 withInt:32 withInt:24],
#line 131
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:24 withInt:24 withInt:24 withInt:24 withInt:36 withInt:36 withInt:24],
#line 132
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:26 withInt:26 withInt:26 withInt:26 withInt:44 withInt:44 withInt:28],
#line 133
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:16 withInt:48 withInt:16 withInt:24 withInt:49 withInt:49 withInt:28],
#line 134
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:32 withInt:32 withInt:16 withInt:16 withInt:62 withInt:62 withInt:36],
#line 135
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:36 withInt:36 withInt:18 withInt:18 withInt:86 withInt:86 withInt:42],
#line 136
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:40 withInt:40 withInt:20 withInt:20 withInt:114 withInt:114 withInt:48],
#line 137
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:44 withInt:44 withInt:22 withInt:22 withInt:144 withInt:144 withInt:56],
#line 138
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:48 withInt:48 withInt:24 withInt:24 withInt:174 withInt:174 withInt:68],
#line 139
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:52 withInt:52 withInt:26 withInt:26 withInt:204 withInt:102 withInt:42],
#line 140
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:64 withInt:64 withInt:16 withInt:16 withInt:280 withInt:140 withInt:56],
#line 141
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:72 withInt:72 withInt:18 withInt:18 withInt:368 withInt:92 withInt:36],
#line 142
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:80 withInt:80 withInt:20 withInt:20 withInt:456 withInt:114 withInt:48],
#line 143
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:88 withInt:88 withInt:22 withInt:22 withInt:576 withInt:144 withInt:56],
#line 144
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:96 withInt:96 withInt:24 withInt:24 withInt:696 withInt:174 withInt:68],
#line 145
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:104 withInt:104 withInt:26 withInt:26 withInt:816 withInt:136 withInt:56],
#line 146
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:120 withInt:120 withInt:20 withInt:20 withInt:1050 withInt:175 withInt:68],
#line 147
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:132 withInt:132 withInt:22 withInt:22 withInt:1304 withInt:163 withInt:62],
#line 148
      [[ComItextpdfTextPdfBarcodeDatamatrix_DmParams alloc] initWithInt:144 withInt:144 withInt:24 withInt:24 withInt:1558 withInt:156 withInt:62] } count:30 type:[IOSClass classWithClass:[ComItextpdfTextPdfBarcodeDatamatrix_DmParams class]]];
      ComItextpdfTextPdfBarcodeDatamatrix_initialized = YES;
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BarcodeDatamatrix", NULL, 0x1, NULL },
    { "setBitWithInt:withInt:withInt:", "setBit", "V", 0x2, NULL },
    { "drawWithByteArray:withInt:withComItextpdfTextPdfBarcodeDatamatrix_DmParams:", "draw", "V", 0x2, NULL },
    { "makePaddingWithByteArray:withInt:withInt:", "makePadding", "V", 0xa, NULL },
    { "isDigitWithInt:", "isDigit", "Z", 0xa, NULL },
    { "asciiEncodationWithByteArray:withInt:withInt:withByteArray:withInt:withInt:", "asciiEncodation", "I", 0xa, NULL },
    { "b256EncodationWithByteArray:withInt:withInt:withByteArray:withInt:withInt:", "b256Encodation", "I", 0xa, NULL },
    { "X12EncodationWithByteArray:withInt:withInt:withByteArray:withInt:withInt:", "X12Encodation", "I", 0xa, NULL },
    { "EdifactEncodationWithByteArray:withInt:withInt:withByteArray:withInt:withInt:", "EdifactEncodation", "I", 0xa, NULL },
    { "C40OrTextEncodationWithByteArray:withInt:withInt:withByteArray:withInt:withInt:withBoolean:", "C40OrTextEncodation", "I", 0xa, NULL },
    { "getEncodationWithByteArray:withInt:withInt:withByteArray:withInt:withInt:withInt:withBoolean:", "getEncodation", "I", 0xa, NULL },
    { "getNumberWithByteArray:withInt:withInt:", "getNumber", "I", 0xa, NULL },
    { "processExtensionsWithByteArray:withInt:withInt:withByteArray:", "processExtensions", "I", 0x2, NULL },
    { "generateWithNSString:", "generate", "I", 0x1, "Ljava.io.UnsupportedEncodingException;" },
    { "generateWithByteArray:withInt:withInt:", "generate", "I", 0x1, NULL },
    { "createImage", NULL, "Lcom.itextpdf.text.Image;", 0x1, "Lcom.itextpdf.text.BadElementException;" },
    { "getImage", NULL, "[B", 0x1, NULL },
    { "getHeight", NULL, "I", 0x1, NULL },
    { "setHeightWithInt:", "setHeight", "V", 0x1, NULL },
    { "getWidth", NULL, "I", 0x1, NULL },
    { "setWidthWithInt:", "setWidth", "V", 0x1, NULL },
    { "getWs", NULL, "I", 0x1, NULL },
    { "setWsWithInt:", "setWs", "V", 0x1, NULL },
    { "getOptions", NULL, "I", 0x1, NULL },
    { "setOptionsWithInt:", "setOptions", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DM_NO_ERROR_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_NO_ERROR },
    { "DM_ERROR_TEXT_TOO_BIG_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_ERROR_TEXT_TOO_BIG },
    { "DM_ERROR_INVALID_SQUARE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_ERROR_INVALID_SQUARE },
    { "DM_ERROR_EXTENSION_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_ERROR_EXTENSION },
    { "DM_AUTO_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_AUTO },
    { "DM_ASCII_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_ASCII },
    { "DM_C40_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_C40 },
    { "DM_TEXT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_TEXT },
    { "DM_B256_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_B256 },
    { "DM_X21_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_X21 },
    { "DM_EDIFACT_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_EDIFACT },
    { "DM_RAW_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_RAW },
    { "DM_EXTENSION_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_EXTENSION },
    { "DM_TEST_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodeDatamatrix_DM_TEST },
    { "dmSizes_", NULL, 0x1a, "[Lcom.itextpdf.text.pdf.BarcodeDatamatrix$DmParams;", &ComItextpdfTextPdfBarcodeDatamatrix_dmSizes_,  },
    { "x12_", NULL, 0x1a, "Ljava.lang.String;", &ComItextpdfTextPdfBarcodeDatamatrix_x12_,  },
    { "extOut_", NULL, 0x2, "I", NULL,  },
    { "place_", NULL, 0x2, "[S", NULL,  },
    { "image_", NULL, 0x2, "[B", NULL,  },
    { "height_", NULL, 0x2, "I", NULL,  },
    { "width_", NULL, 0x2, "I", NULL,  },
    { "ws_", NULL, 0x2, "I", NULL,  },
    { "options_", NULL, 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodeDatamatrix = { "BarcodeDatamatrix", "com.itextpdf.text.pdf", NULL, 0x1, 25, methods, 23, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodeDatamatrix;
}

@end


#line 756
@implementation ComItextpdfTextPdfBarcodeDatamatrix_DmParams


#line 757
- (instancetype)initWithInt:(jint)height
                    withInt:(jint)width
                    withInt:(jint)heightSection
                    withInt:(jint)widthSection
                    withInt:(jint)dataSize
                    withInt:(jint)dataBlock
                    withInt:(jint)errorBlock {
  if (self = [super init]) {
    
#line 758
    self->height_ = height;
    
#line 759
    self->width_ = width;
    
#line 760
    self->heightSection_ = heightSection;
    
#line 761
    self->widthSection_ = widthSection;
    
#line 762
    self->dataSize_ = dataSize;
    
#line 763
    self->dataBlock_ = dataBlock;
    
#line 764
    self->errorBlock_ = errorBlock;
  }
  return self;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBarcodeDatamatrix_DmParams *)other {
  [super copyAllFieldsTo:other];
  other->dataBlock_ = dataBlock_;
  other->dataSize_ = dataSize_;
  other->errorBlock_ = errorBlock_;
  other->height_ = height_;
  other->heightSection_ = heightSection_;
  other->width_ = width_;
  other->widthSection_ = widthSection_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withInt:withInt:withInt:withInt:withInt:", "DmParams", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "height_", NULL, 0x0, "I", NULL,  },
    { "width_", NULL, 0x0, "I", NULL,  },
    { "heightSection_", NULL, 0x0, "I", NULL,  },
    { "widthSection_", NULL, 0x0, "I", NULL,  },
    { "dataSize_", NULL, 0x0, "I", NULL,  },
    { "dataBlock_", NULL, 0x0, "I", NULL,  },
    { "errorBlock_", NULL, 0x0, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodeDatamatrix_DmParams = { "DmParams", "com.itextpdf.text.pdf", "BarcodeDatamatrix", 0xa, 1, methods, 7, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodeDatamatrix_DmParams;
}

@end

BOOL ComItextpdfTextPdfBarcodeDatamatrix_Placement_initialized = NO;


#line 940
@implementation ComItextpdfTextPdfBarcodeDatamatrix_Placement

JavaUtilHashtable * ComItextpdfTextPdfBarcodeDatamatrix_Placement_cache_;


#line 946
- (instancetype)init {
  return [super init];
}


#line 949
+ (IOSShortArray *)doPlacementWithInt:(jint)nrow
                              withInt:(jint)ncol {
  JavaLangInteger *key = [JavaLangInteger valueOfWithInt:nrow * 1000 + ncol];
  IOSShortArray *pc = [((JavaUtilHashtable *) nil_chk(ComItextpdfTextPdfBarcodeDatamatrix_Placement_cache_)) getWithId:key];
  if (pc != nil)
#line 953
  return pc;
  ComItextpdfTextPdfBarcodeDatamatrix_Placement *p = [[ComItextpdfTextPdfBarcodeDatamatrix_Placement alloc] init];
  p->nrow_ = nrow;
  p->ncol_ = ncol;
  p->array_ = [IOSShortArray arrayWithLength:nrow * ncol];
  [p ecc200];
  (void) [ComItextpdfTextPdfBarcodeDatamatrix_Placement_cache_ putWithId:key withId:p->array_];
  return p->array_;
}


#line 964
- (void)moduleWithInt:(jint)row
              withInt:(jint)col
              withInt:(jint)chr
              withInt:(jint)bit {
  if (row < 0) {
    
#line 965
    row += nrow_;
    
#line 965
    col += 4 - (nrow_ + 4) % 8;
  }
  
#line 966
  if (col < 0) {
    
#line 966
    col += ncol_;
    
#line 966
    row += 4 - (ncol_ + 4) % 8;
  }
  
#line 967
  *IOSShortArray_GetRef(nil_chk(array_), row * ncol_ + col) = (jshort) (8 * chr + bit);
}


#line 970
- (void)utahWithInt:(jint)row
            withInt:(jint)col
            withInt:(jint)chr {
  
#line 971
  [self moduleWithInt:row - 2 withInt:col - 2 withInt:chr withInt:0];
  [self moduleWithInt:row - 2 withInt:col - 1 withInt:chr withInt:1];
  [self moduleWithInt:row - 1 withInt:col - 2 withInt:chr withInt:2];
  [self moduleWithInt:row - 1 withInt:col - 1 withInt:chr withInt:3];
  [self moduleWithInt:row - 1 withInt:col withInt:chr withInt:4];
  [self moduleWithInt:row withInt:col - 2 withInt:chr withInt:5];
  [self moduleWithInt:row withInt:col - 1 withInt:chr withInt:6];
  [self moduleWithInt:row withInt:col withInt:chr withInt:7];
}


#line 981
- (void)corner1WithInt:(jint)chr {
  
#line 982
  [self moduleWithInt:nrow_ - 1 withInt:0 withInt:chr withInt:0];
  [self moduleWithInt:nrow_ - 1 withInt:1 withInt:chr withInt:1];
  [self moduleWithInt:nrow_ - 1 withInt:2 withInt:chr withInt:2];
  [self moduleWithInt:0 withInt:ncol_ - 2 withInt:chr withInt:3];
  [self moduleWithInt:0 withInt:ncol_ - 1 withInt:chr withInt:4];
  [self moduleWithInt:1 withInt:ncol_ - 1 withInt:chr withInt:5];
  [self moduleWithInt:2 withInt:ncol_ - 1 withInt:chr withInt:6];
  [self moduleWithInt:3 withInt:ncol_ - 1 withInt:chr withInt:7];
}


#line 991
- (void)corner2WithInt:(jint)chr {
  
#line 992
  [self moduleWithInt:nrow_ - 3 withInt:0 withInt:chr withInt:0];
  [self moduleWithInt:nrow_ - 2 withInt:0 withInt:chr withInt:1];
  [self moduleWithInt:nrow_ - 1 withInt:0 withInt:chr withInt:2];
  [self moduleWithInt:0 withInt:ncol_ - 4 withInt:chr withInt:3];
  [self moduleWithInt:0 withInt:ncol_ - 3 withInt:chr withInt:4];
  [self moduleWithInt:0 withInt:ncol_ - 2 withInt:chr withInt:5];
  [self moduleWithInt:0 withInt:ncol_ - 1 withInt:chr withInt:6];
  [self moduleWithInt:1 withInt:ncol_ - 1 withInt:chr withInt:7];
}


#line 1001
- (void)corner3WithInt:(jint)chr {
  
#line 1002
  [self moduleWithInt:nrow_ - 3 withInt:0 withInt:chr withInt:0];
  [self moduleWithInt:nrow_ - 2 withInt:0 withInt:chr withInt:1];
  [self moduleWithInt:nrow_ - 1 withInt:0 withInt:chr withInt:2];
  [self moduleWithInt:0 withInt:ncol_ - 2 withInt:chr withInt:3];
  [self moduleWithInt:0 withInt:ncol_ - 1 withInt:chr withInt:4];
  [self moduleWithInt:1 withInt:ncol_ - 1 withInt:chr withInt:5];
  [self moduleWithInt:2 withInt:ncol_ - 1 withInt:chr withInt:6];
  [self moduleWithInt:3 withInt:ncol_ - 1 withInt:chr withInt:7];
}


#line 1011
- (void)corner4WithInt:(jint)chr {
  
#line 1012
  [self moduleWithInt:nrow_ - 1 withInt:0 withInt:chr withInt:0];
  [self moduleWithInt:nrow_ - 1 withInt:ncol_ - 1 withInt:chr withInt:1];
  [self moduleWithInt:0 withInt:ncol_ - 3 withInt:chr withInt:2];
  [self moduleWithInt:0 withInt:ncol_ - 2 withInt:chr withInt:3];
  [self moduleWithInt:0 withInt:ncol_ - 1 withInt:chr withInt:4];
  [self moduleWithInt:1 withInt:ncol_ - 3 withInt:chr withInt:5];
  [self moduleWithInt:1 withInt:ncol_ - 2 withInt:chr withInt:6];
  [self moduleWithInt:1 withInt:ncol_ - 1 withInt:chr withInt:7];
}


#line 1022
- (void)ecc200 {
  
#line 1023
  jint row, col, chr;
  
#line 1025
  [JavaUtilArrays fillWithShortArray:array_ withShort:(jshort) 0];
  
#line 1027
  chr = 1;
  
#line 1027
  row = 4;
  
#line 1027
  col = 0;
  do {
    
#line 1030
    if (row == nrow_ && col == 0) [self corner1WithInt:chr++];
    if (row == nrow_ - 2 && col == 0 && ncol_ % 4 != 0) [self corner2WithInt:chr++];
    if (row == nrow_ - 2 && col == 0 && ncol_ % 8 == 4) [self corner3WithInt:chr++];
    if (row == nrow_ + 4 && col == 2 && ncol_ % 8 == 0) [self corner4WithInt:chr++];
    
#line 1035
    do {
      if (row < nrow_ && col >= 0 && IOSShortArray_Get(nil_chk(array_), row * ncol_ + col) == 0)
#line 1037
      [self utahWithInt:row withInt:col withInt:chr++];
      row -= 2;
      
#line 1038
      col += 2;
    }
    while (
#line 1039
    row >= 0 && col < ncol_);
    row += 1;
    
#line 1040
    col += 3;
    
#line 1043
    do {
      if (row >= 0 && col < ncol_ && IOSShortArray_Get(nil_chk(array_), row * ncol_ + col) == 0)
#line 1045
      [self utahWithInt:row withInt:col withInt:chr++];
      row += 2;
      
#line 1046
      col -= 2;
    }
    while (
#line 1047
    row < nrow_ && col >= 0);
    row += 3;
    
#line 1048
    col += 1;
  }
  while (row < nrow_ || col < ncol_);
  
#line 1052
  if (IOSShortArray_Get(nil_chk(array_), nrow_ * ncol_ - 1) == 0) {
    *IOSShortArray_GetRef(array_, nrow_ * ncol_ - 1) = *IOSShortArray_GetRef(array_, nrow_ * ncol_ - ncol_ - 2) = 1;
  }
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBarcodeDatamatrix_Placement *)other {
  [super copyAllFieldsTo:other];
  other->array_ = array_;
  other->ncol_ = ncol_;
  other->nrow_ = nrow_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfBarcodeDatamatrix_Placement class]) {
    ComItextpdfTextPdfBarcodeDatamatrix_Placement_cache_ =
#line 944
    [[JavaUtilHashtable alloc] init];
    ComItextpdfTextPdfBarcodeDatamatrix_Placement_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Placement", NULL, 0x2, NULL },
    { "doPlacementWithInt:withInt:", "doPlacement", "[S", 0x8, NULL },
    { "moduleWithInt:withInt:withInt:withInt:", "module", "V", 0x2, NULL },
    { "utahWithInt:withInt:withInt:", "utah", "V", 0x2, NULL },
    { "corner1WithInt:", "corner1", "V", 0x2, NULL },
    { "corner2WithInt:", "corner2", "V", 0x2, NULL },
    { "corner3WithInt:", "corner3", "V", 0x2, NULL },
    { "corner4WithInt:", "corner4", "V", 0x2, NULL },
    { "ecc200", NULL, "V", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nrow_", NULL, 0x2, "I", NULL,  },
    { "ncol_", NULL, 0x2, "I", NULL,  },
    { "array_", NULL, 0x2, "[S", NULL,  },
    { "cache_", NULL, 0x1a, "Ljava.util.Hashtable;", &ComItextpdfTextPdfBarcodeDatamatrix_Placement_cache_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodeDatamatrix_Placement = { "Placement", "com.itextpdf.text.pdf", "BarcodeDatamatrix", 0x8, 9, methods, 4, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodeDatamatrix_Placement;
}

@end

BOOL ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_initialized = NO;


#line 1058
@implementation ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon

IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_log_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_alog_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly5_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly7_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly10_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly11_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly12_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly14_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly18_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly20_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly24_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly28_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly36_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly42_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly48_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly56_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly62_;
IOSIntArray * ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly68_;


#line 1182
+ (IOSIntArray *)getPolyWithInt:(jint)nc {
  
#line 1183
  switch (nc) {
    case 5:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly5_;
    case 7:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly7_;
    case 10:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly10_;
    case 11:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly11_;
    case 12:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly12_;
    case 14:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly14_;
    case 18:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly18_;
    case 20:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly20_;
    case 24:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly24_;
    case 28:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly28_;
    case 36:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly36_;
    case 42:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly42_;
    case 48:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly48_;
    case 56:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly56_;
    case 62:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly62_;
    case 68:
    return ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly68_;
  }
  return nil;
}


#line 1220
+ (void)reedSolomonBlockWithByteArray:(IOSByteArray *)wd
                              withInt:(jint)nd
                        withByteArray:(IOSByteArray *)ncout
                              withInt:(jint)nc
                         withIntArray:(IOSIntArray *)c {
  
#line 1221
  jint i, j, k;
  
#line 1223
  for (i = 0; i <= nc; i++) *IOSByteArray_GetRef(nil_chk(ncout), i) = 0;
  for (i = 0; i < nd; i++) {
    k = (IOSByteArray_Get(nil_chk(ncout), 0) ^ IOSByteArray_Get(nil_chk(wd), i)) & (jint) 0xff;
    for (j = 0; j < nc; j++) {
      *IOSByteArray_GetRef(ncout, j) = (jbyte) (IOSByteArray_Get(ncout, j + 1) ^ (k == 0 ? 0 : (jbyte) IOSIntArray_Get(nil_chk(ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_alog_), (IOSIntArray_Get(nil_chk(ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_log_), k) + IOSIntArray_Get(ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_log_, IOSIntArray_Get(nil_chk(c), nc - j - 1))) % 255)));
    }
  }
}


#line 1232
+ (void)generateECCWithByteArray:(IOSByteArray *)wd
                         withInt:(jint)nd
                         withInt:(jint)datablock
                         withInt:(jint)nc {
  
#line 1233
  jint blocks = (nd + 2) / datablock;
  jint b;
  IOSByteArray *buf = [IOSByteArray arrayWithLength:256];
  IOSByteArray *ecc = [IOSByteArray arrayWithLength:256];
  IOSIntArray *c = [ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon getPolyWithInt:nc];
  for (b = 0; b < blocks; b++) {
    
#line 1240
    jint n, p = 0;
    for (n = b; n < nd; n += blocks)
#line 1242
    *IOSByteArray_GetRef(buf, p++) = IOSByteArray_Get(nil_chk(wd), n);
    [ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon reedSolomonBlockWithByteArray:buf withInt:p withByteArray:ecc withInt:nc withIntArray:c];
    p = 0;
    for (n = b; n < nc * blocks; n += blocks)
#line 1246
    *IOSByteArray_GetRef(nil_chk(wd), nd + n) = IOSByteArray_Get(ecc, p++);
  }
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon class]) {
    ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_log_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1061
      0, 255, 1, 240, 2, 225, 241, 53, 3, 38, 226, 133, 242, 43, 54, 210,
#line 1062
      4, 195, 39, 114, 227, 106, 134, 28, 243, 140, 44, 23, 55, 118, 211, 234,
#line 1063
      5, 219, 196, 96, 40, 222, 115, 103, 228, 78, 107, 125, 135, 8, 29, 162,
#line 1064
      244, 186, 141, 180, 45, 99, 24, 49, 56, 13, 119, 153, 212, 199, 235, 91,
#line 1065
      6, 76, 220, 217, 197, 11, 97, 184, 41, 36, 223, 253, 116, 138, 104, 193,
#line 1066
      229, 86, 79, 171, 108, 165, 126, 145, 136, 34, 9, 74, 30, 32, 163, 84,
#line 1067
      245, 173, 187, 204, 142, 81, 181, 190, 46, 88, 100, 159, 25, 231, 50, 207,
#line 1068
      57, 147, 14, 67, 120, 128, 154, 248, 213, 167, 200, 63, 236, 110, 92, 176,
#line 1069
      7, 161, 77, 124, 221, 102, 218, 95, 198, 90, 12, 152, 98, 48, 185, 179,
#line 1070
      42, 209, 37, 132, 224, 52, 254, 239, 117, 233, 139, 22, 105, 27, 194, 113,
#line 1071
      230, 206, 87, 158, 80, 189, 172, 203, 109, 175, 166, 62, 127, 247, 146, 66,
#line 1072
      137, 192, 35, 252, 10, 183, 75, 216, 31, 83, 33, 73, 164, 144, 85, 170,
#line 1073
      246, 65, 174, 61, 188, 202, 205, 157, 143, 169, 82, 72, 182, 215, 191, 251,
#line 1074
      47, 178, 89, 151, 101, 94, 160, 123, 26, 112, 232, 21, 51, 238, 208, 131,
#line 1075
      58, 69, 148, 18, 15, 16, 68, 17, 121, 149, 129, 19, 155, 59, 249, 70,
#line 1076
      214, 250, 168, 71, 201, 156, 64, 60, 237, 130, 111, 20, 93, 122, 177, 150 } count:256];
      ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_alog_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1080
        1, 2, 4, 8, 16, 32, 64, 128, 45, 90, 180, 69, 138, 57, 114, 228,
#line 1081
        229, 231, 227, 235, 251, 219, 155, 27, 54, 108, 216, 157, 23, 46, 92, 184,
#line 1082
        93, 186, 89, 178, 73, 146, 9, 18, 36, 72, 144, 13, 26, 52, 104, 208,
#line 1083
        141, 55, 110, 220, 149, 7, 14, 28, 56, 112, 224, 237, 247, 195, 171, 123,
#line 1084
        246, 193, 175, 115, 230, 225, 239, 243, 203, 187, 91, 182, 65, 130, 41, 82,
#line 1085
        164, 101, 202, 185, 95, 190, 81, 162, 105, 210, 137, 63, 126, 252, 213, 135,
#line 1086
        35, 70, 140, 53, 106, 212, 133, 39, 78, 156, 21, 42, 84, 168, 125, 250,
#line 1087
        217, 159, 19, 38, 76, 152, 29, 58, 116, 232, 253, 215, 131, 43, 86, 172,
#line 1088
        117, 234, 249, 223, 147, 11, 22, 44, 88, 176, 77, 154, 25, 50, 100, 200,
#line 1089
        189, 87, 174, 113, 226, 233, 255, 211, 139, 59, 118, 236, 245, 199, 163, 107,
#line 1090
        214, 129, 47, 94, 188, 85, 170, 121, 242, 201, 191, 83, 166, 97, 194, 169,
#line 1091
        127, 254, 209, 143, 51, 102, 204, 181, 71, 142, 49, 98, 196, 165, 103, 206,
#line 1092
        177, 79, 158, 17, 34, 68, 136, 61, 122, 244, 197, 167, 99, 198, 161, 111,
#line 1093
        222, 145, 15, 30, 60, 120, 240, 205, 183, 67, 134, 33, 66, 132, 37, 74,
#line 1094
        148, 5, 10, 20, 40, 80, 160, 109, 218, 153, 31, 62, 124, 248, 221, 151,
#line 1095
        3, 6, 12, 24, 48, 96, 192, 173, 119, 238, 241, 207, 179, 75, 150, 1 } count:256];
        ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly5_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1099
          228, 48, 15, 111, 62 } count:5];
          ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly7_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1103
            23, 68, 144, 134, 240, 92, 254 } count:7];
            ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly10_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1107
              28, 24, 185, 166, 223, 248, 116, 255, 110, 61 } count:10];
              ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly11_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1111
                175, 138, 205, 12, 194, 168, 39, 245, 60, 97, 120 } count:11];
                ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly12_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1115
                  41, 153, 158, 91, 61, 42, 142, 213, 97, 178, 100, 242 } count:12];
                  ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly14_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1119
                    156, 97, 192, 252, 95, 9, 157, 119, 138, 45, 18, 186, 83, 185 } count:14];
                    ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly18_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1123
                      83, 195, 100, 39, 188, 75, 66, 61, 241, 213, 109, 129, 94, 254, 225, 48,
#line 1124
                      90, 188 } count:18];
                      ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly20_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1128
                        15, 195, 244, 9, 233, 71, 168, 2, 188, 160, 153, 145, 253, 79, 108, 82,
#line 1129
                        27, 174, 186, 172 } count:20];
                        ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly24_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1133
                          52, 190, 88, 205, 109, 39, 176, 21, 155, 197, 251, 223, 155, 21, 5, 172,
#line 1134
                          254, 124, 12, 181, 184, 96, 50, 193 } count:24];
                          ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly28_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1138
                            211, 231, 43, 97, 71, 96, 103, 174, 37, 151, 170, 53, 75, 34, 249, 121,
#line 1139
                            17, 138, 110, 213, 141, 136, 120, 151, 233, 168, 93, 255 } count:28];
                            ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly36_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1143
                              245, 127, 242, 218, 130, 250, 162, 181, 102, 120, 84, 179, 220, 251, 80, 182,
#line 1144
                              229, 18, 2, 4, 68, 33, 101, 137, 95, 119, 115, 44, 175, 184, 59, 25,
#line 1145
                              225, 98, 81, 112 } count:36];
                              ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly42_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1149
                                77, 193, 137, 31, 19, 38, 22, 153, 247, 105, 122, 2, 245, 133, 242, 8,
#line 1150
                                175, 95, 100, 9, 167, 105, 214, 111, 57, 121, 21, 1, 253, 57, 54, 101,
#line 1151
                                248, 202, 69, 50, 150, 177, 226, 5, 9, 5 } count:42];
                                ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly48_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1155
                                  245, 132, 172, 223, 96, 32, 117, 22, 238, 133, 238, 231, 205, 188, 237, 87,
#line 1156
                                  191, 106, 16, 147, 118, 23, 37, 90, 170, 205, 131, 88, 120, 100, 66, 138,
#line 1157
                                  186, 240, 82, 44, 176, 87, 187, 147, 160, 175, 69, 213, 92, 253, 225, 19 } count:48];
                                  ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly56_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1161
                                    175, 9, 223, 238, 12, 17, 220, 208, 100, 29, 175, 170, 230, 192, 215, 235,
#line 1162
                                    150, 159, 36, 223, 38, 200, 132, 54, 228, 146, 218, 234, 117, 203, 29, 232,
#line 1163
                                    144, 238, 22, 150, 201, 117, 62, 207, 164, 13, 137, 245, 127, 67, 247, 28,
#line 1164
                                    155, 43, 203, 107, 233, 53, 143, 46 } count:56];
                                    ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly62_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1168
                                      242, 93, 169, 50, 144, 210, 39, 118, 202, 188, 201, 189, 143, 108, 196, 37,
#line 1169
                                      185, 112, 134, 230, 245, 63, 197, 190, 250, 106, 185, 221, 175, 64, 114, 71,
#line 1170
                                      161, 44, 147, 6, 27, 218, 51, 63, 87, 10, 40, 130, 188, 17, 163, 31,
#line 1171
                                      176, 170, 4, 107, 232, 7, 94, 166, 224, 124, 86, 47, 11, 204 } count:62];
                                      ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly68_ = [IOSIntArray arrayWithInts:(jint[]){
#line 1175
                                        220, 228, 173, 89, 251, 149, 159, 56, 89, 33, 147, 244, 154, 36, 73, 127,
#line 1176
                                        213, 136, 248, 180, 234, 197, 158, 177, 68, 122, 93, 213, 15, 160, 227, 236,
#line 1177
                                        66, 139, 153, 185, 202, 167, 179, 25, 220, 232, 96, 210, 231, 136, 223, 239,
#line 1178
                                        181, 241, 59, 52, 172, 25, 49, 232, 211, 189, 64, 54, 108, 153, 132, 63,
#line 1179
                                        96, 103, 82, 186 } count:68];
                                        ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_initialized = YES;
                                      }
                                    }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPolyWithInt:", "getPoly", "[I", 0xa, NULL },
    { "reedSolomonBlockWithByteArray:withInt:withByteArray:withInt:withIntArray:", "reedSolomonBlock", "V", 0xa, NULL },
    { "generateECCWithByteArray:withInt:withInt:withInt:", "generateECC", "V", 0x8, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "log_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_log_,  },
    { "alog_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_alog_,  },
    { "poly5_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly5_,  },
    { "poly7_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly7_,  },
    { "poly10_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly10_,  },
    { "poly11_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly11_,  },
    { "poly12_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly12_,  },
    { "poly14_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly14_,  },
    { "poly18_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly18_,  },
    { "poly20_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly20_,  },
    { "poly24_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly24_,  },
    { "poly28_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly28_,  },
    { "poly36_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly36_,  },
    { "poly42_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly42_,  },
    { "poly48_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly48_,  },
    { "poly56_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly56_,  },
    { "poly62_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly62_,  },
    { "poly68_", NULL, 0x1a, "[I", &ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon_poly68_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon = { "ReedSolomon", "com.itextpdf.text.pdf", "BarcodeDatamatrix", 0x8, 4, methods, 18, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodeDatamatrix_ReedSolomon;
}

@end

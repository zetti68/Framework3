//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfCopy.java
//

#ifndef _ComItextpdfTextPdfPdfCopy_H_
#define _ComItextpdfTextPdfPdfCopy_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/PdfContentByte.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"

@class ComItextpdfTextDocument;
@class ComItextpdfTextPdfByteBuffer;
@class ComItextpdfTextPdfPRIndirectReference;
@class ComItextpdfTextPdfPRStream;
@class ComItextpdfTextPdfPageResources;
@class ComItextpdfTextPdfPdfAnnotation;
@class ComItextpdfTextPdfPdfArray;
@class ComItextpdfTextPdfPdfContents;
@class ComItextpdfTextPdfPdfCopy_PageStamp;
@class ComItextpdfTextPdfPdfCopy_StampContent;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfImportedPage;
@class ComItextpdfTextPdfPdfIndirectObject;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfOutline;
@class ComItextpdfTextPdfPdfPage;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfStream;
@class ComItextpdfTextRectangle;
@class IOSIntArray;
@class JavaIoOutputStream;
@class JavaLangInteger;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@protocol ComItextpdfTextLogCounter;
@protocol ComItextpdfTextPdfPdfPageEvent;
@protocol JavaUtilList;

@interface ComItextpdfTextPdfPdfCopy : ComItextpdfTextPdfPdfWriter {
 @public
  JavaUtilHashMap *indirects_;
  JavaUtilHashMap *indirectMap_;
  JavaUtilHashMap *parentObjects_;
  JavaUtilHashSet *disableIndirects_;
  ComItextpdfTextPdfPdfReader *reader_;
  IOSIntArray *namePtr_;
  ComItextpdfTextPdfPdfArray *fieldArray_;
  JavaUtilHashSet *fieldTemplates_;
  ComItextpdfTextPdfPRIndirectReference *structTreeRootReference_;
  JavaUtilHashMap *indirectObjects_;
  JavaUtilArrayList *savedObjects_;
  JavaUtilArrayList *importedPages_;
  jboolean updateRootKids_;
  jboolean mergeFields__;
  JavaUtilArrayList *fields_;
}

#pragma mark Public

- (instancetype)initWithComItextpdfTextDocument:(ComItextpdfTextDocument *)document
                         withJavaIoOutputStream:(JavaIoOutputStream *)os;

- (ComItextpdfTextPdfPdfIndirectReference *)addWithComItextpdfTextPdfPdfOutline:(ComItextpdfTextPdfPdfOutline *)outline;

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot;

- (void)addDocumentWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (void)addDocumentWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                  withJavaUtilList:(id<JavaUtilList>)pagesToKeep;

- (void)addPageWithComItextpdfTextPdfPdfImportedPage:(ComItextpdfTextPdfPdfImportedPage *)iPage;

- (void)addPageWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)rect
                                    withInt:(jint)rotation;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                       withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                       withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                                                                      withBoolean:(jboolean)formBranching;

- (void)close;

- (ComItextpdfTextPdfPdfCopy_PageStamp *)createPageStampWithComItextpdfTextPdfPdfImportedPage:(ComItextpdfTextPdfPdfImportedPage *)iPage;

- (void)freeReaderWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (ComItextpdfTextPdfPdfImportedPage *)getImportedPageWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                                              withInt:(jint)pageNumber;

- (ComItextpdfTextPdfPdfImportedPage *)getImportedPageWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                                              withInt:(jint)pageNumber
                                                                          withBoolean:(jboolean)keepTaggedPdfStructure;

- (jboolean)isRotateContents;

- (void)setMergeFields;

- (void)setPageEventWithComItextpdfTextPdfPdfPageEvent:(id<ComItextpdfTextPdfPdfPageEvent>)event;

- (void)setRotateContentsWithBoolean:(jboolean)rotateContents;

#pragma mark Protected

- (ComItextpdfTextPdfPdfArray *)copyArrayWithComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)inArg OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfArray *)copyArrayWithComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)inArg
                                                            withBoolean:(jboolean)keepStruct
                                                            withBoolean:(jboolean)directRootKids OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfDictionary *)copyDictionaryWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)inArg OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfDictionary *)copyDictionaryWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)inArg
                                                                           withBoolean:(jboolean)keepStruct
                                                                           withBoolean:(jboolean)directRootKids OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfIndirectReference *)copyIndirectWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)inArg OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfIndirectReference *)copyIndirectWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)inArg
                                                                                      withBoolean:(jboolean)keepStructure
                                                                                      withBoolean:(jboolean)directRootKids OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfObject *)copyObjectWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)inArg OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfObject *)copyObjectWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)inArg
                                                               withBoolean:(jboolean)keepStruct
                                                               withBoolean:(jboolean)directRootKids OBJC_METHOD_FAMILY_NONE;

- (ComItextpdfTextPdfPdfStream *)copyStreamWithComItextpdfTextPdfPRStream:(ComItextpdfTextPdfPRStream *)inArg OBJC_METHOD_FAMILY_NONE;

- (void)fixStructureTreeRootWithJavaUtilHashSet:(JavaUtilHashSet *)activeKeys
                            withJavaUtilHashSet:(JavaUtilHashSet *)activeClassMaps;

- (void)fixTaggedStructure;

- (void)flushAcroFields;

- (void)flushIndirectObjects;

- (void)flushTaggedObjects;

- (ComItextpdfTextPdfPdfDictionary *)getCatalogWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)rootObj;

- (id<ComItextpdfTextLogCounter>)getCounter;

- (ComItextpdfTextPdfPdfImportedPage *)getImportedPageImplWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                                                  withInt:(jint)pageNumber;

- (ComItextpdfTextPdfPdfName *)getOffStateNameWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)widget;

- (jboolean)isStructTreeRootReferenceWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)prRef;

- (jint)setFromIPageWithComItextpdfTextPdfPdfImportedPage:(ComItextpdfTextPdfPdfImportedPage *)iPage;

- (void)setFromReaderWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

#pragma mark Package-Private

- (ComItextpdfTextPdfPdfIndirectReference *)addWithComItextpdfTextPdfPdfPage:(ComItextpdfTextPdfPdfPage *)page
                                           withComItextpdfTextPdfPdfContents:(ComItextpdfTextPdfPdfContents *)contents;

+ (JavaLangInteger *)getFlagsWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)field;

+ (jboolean)isCheckButtonWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)field;

+ (jboolean)isRadioButtonWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)field;

+ (jboolean)isTextFieldWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)field;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfCopy)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, indirects_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, indirectMap_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, parentObjects_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, disableIndirects_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, reader_, ComItextpdfTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, namePtr_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, fieldArray_, ComItextpdfTextPdfPdfArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, fieldTemplates_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, structTreeRootReference_, ComItextpdfTextPdfPRIndirectReference *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, indirectObjects_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, savedObjects_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, importedPages_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, fields_, JavaUtilArrayList *)

FOUNDATION_EXPORT id<ComItextpdfTextLogCounter> ComItextpdfTextPdfPdfCopy_COUNTER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfCopy, COUNTER_, id<ComItextpdfTextLogCounter>)
J2OBJC_STATIC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy, COUNTER_, id<ComItextpdfTextLogCounter>)

FOUNDATION_EXPORT JavaUtilHashSet *ComItextpdfTextPdfPdfCopy_widgetKeys_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfCopy, widgetKeys_, JavaUtilHashSet *)

FOUNDATION_EXPORT JavaUtilHashSet *ComItextpdfTextPdfPdfCopy_fieldKeys_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfCopy, fieldKeys_, JavaUtilHashSet *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfCopy_initWithComItextpdfTextDocument_withJavaIoOutputStream_(ComItextpdfTextPdfPdfCopy *self, ComItextpdfTextDocument *document, JavaIoOutputStream *os);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfCopy *new_ComItextpdfTextPdfPdfCopy_initWithComItextpdfTextDocument_withJavaIoOutputStream_(ComItextpdfTextDocument *document, JavaIoOutputStream *os) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangInteger *ComItextpdfTextPdfPdfCopy_getFlagsWithComItextpdfTextPdfPdfDictionary_(ComItextpdfTextPdfPdfDictionary *field);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfCopy_isCheckButtonWithComItextpdfTextPdfPdfDictionary_(ComItextpdfTextPdfPdfDictionary *field);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfCopy_isRadioButtonWithComItextpdfTextPdfPdfDictionary_(ComItextpdfTextPdfPdfDictionary *field);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfCopy_isTextFieldWithComItextpdfTextPdfPdfDictionary_(ComItextpdfTextPdfPdfDictionary *field);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfCopy)

@interface ComItextpdfTextPdfPdfCopy_IndirectReferences : NSObject {
 @public
  ComItextpdfTextPdfPdfIndirectReference *theRef_;
  jboolean hasCopied_;
}

#pragma mark Public

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref;

- (jboolean)getCopied;

- (ComItextpdfTextPdfPdfIndirectReference *)getRef;

- (void)setCopied;

- (void)setNotCopied;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfCopy_IndirectReferences)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_IndirectReferences, theRef_, ComItextpdfTextPdfPdfIndirectReference *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfCopy_IndirectReferences_initWithComItextpdfTextPdfPdfIndirectReference_(ComItextpdfTextPdfPdfCopy_IndirectReferences *self, ComItextpdfTextPdfPdfIndirectReference *ref);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfCopy_IndirectReferences *new_ComItextpdfTextPdfPdfCopy_IndirectReferences_initWithComItextpdfTextPdfPdfIndirectReference_(ComItextpdfTextPdfPdfIndirectReference *ref) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfCopy_IndirectReferences)

@interface ComItextpdfTextPdfPdfCopy_ImportedPage : NSObject {
 @public
  jint pageNumber_;
  ComItextpdfTextPdfPdfReader *reader_;
  ComItextpdfTextPdfPdfArray *mergedFields_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                            withInt:(jint)pageNumber
                                        withBoolean:(jboolean)keepFields;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfCopy_ImportedPage)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_ImportedPage, reader_, ComItextpdfTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_ImportedPage, mergedFields_, ComItextpdfTextPdfPdfArray *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfCopy_ImportedPage_initWithComItextpdfTextPdfPdfReader_withInt_withBoolean_(ComItextpdfTextPdfPdfCopy_ImportedPage *self, ComItextpdfTextPdfPdfReader *reader, jint pageNumber, jboolean keepFields);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfCopy_ImportedPage *new_ComItextpdfTextPdfPdfCopy_ImportedPage_initWithComItextpdfTextPdfPdfReader_withInt_withBoolean_(ComItextpdfTextPdfPdfReader *reader, jint pageNumber, jboolean keepFields) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfCopy_ImportedPage)

@interface ComItextpdfTextPdfPdfCopy_PageStamp : NSObject {
 @public
  ComItextpdfTextPdfPdfDictionary *pageN_;
  ComItextpdfTextPdfPdfCopy_StampContent *under_;
  ComItextpdfTextPdfPdfCopy_StampContent *over_;
  ComItextpdfTextPdfPageResources *pageResources_;
  ComItextpdfTextPdfPdfReader *reader_;
  ComItextpdfTextPdfPdfCopy *cstp_;
}

#pragma mark Public

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot;

- (void)alterContents;

- (ComItextpdfTextPdfPdfContentByte *)getOverContent;

- (ComItextpdfTextPdfPdfContentByte *)getUnderContent;

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)pageN
                      withComItextpdfTextPdfPdfCopy:(ComItextpdfTextPdfPdfCopy *)cstp;

- (void)applyRotationWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)pageN
                        withComItextpdfTextPdfByteBuffer:(ComItextpdfTextPdfByteBuffer *)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfCopy_PageStamp)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_PageStamp, pageN_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_PageStamp, under_, ComItextpdfTextPdfPdfCopy_StampContent *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_PageStamp, over_, ComItextpdfTextPdfPdfCopy_StampContent *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_PageStamp, pageResources_, ComItextpdfTextPdfPageResources *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_PageStamp, reader_, ComItextpdfTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_PageStamp, cstp_, ComItextpdfTextPdfPdfCopy *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfCopy_PageStamp_initWithComItextpdfTextPdfPdfReader_withComItextpdfTextPdfPdfDictionary_withComItextpdfTextPdfPdfCopy_(ComItextpdfTextPdfPdfCopy_PageStamp *self, ComItextpdfTextPdfPdfReader *reader, ComItextpdfTextPdfPdfDictionary *pageN, ComItextpdfTextPdfPdfCopy *cstp);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfCopy_PageStamp *new_ComItextpdfTextPdfPdfCopy_PageStamp_initWithComItextpdfTextPdfPdfReader_withComItextpdfTextPdfPdfDictionary_withComItextpdfTextPdfPdfCopy_(ComItextpdfTextPdfPdfReader *reader, ComItextpdfTextPdfPdfDictionary *pageN, ComItextpdfTextPdfPdfCopy *cstp) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfCopy_PageStamp)

@interface ComItextpdfTextPdfPdfCopy_StampContent : ComItextpdfTextPdfPdfContentByte {
 @public
  ComItextpdfTextPdfPageResources *pageResources_;
}

#pragma mark Public

- (ComItextpdfTextPdfPdfContentByte *)getDuplicate;

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                withComItextpdfTextPdfPageResources:(ComItextpdfTextPdfPageResources *)pageResources;

- (ComItextpdfTextPdfPageResources *)getPageResources;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfCopy_StampContent)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfCopy_StampContent, pageResources_, ComItextpdfTextPdfPageResources *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfCopy_StampContent_initWithComItextpdfTextPdfPdfWriter_withComItextpdfTextPdfPageResources_(ComItextpdfTextPdfPdfCopy_StampContent *self, ComItextpdfTextPdfPdfWriter *writer, ComItextpdfTextPdfPageResources *pageResources);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfCopy_StampContent *new_ComItextpdfTextPdfPdfCopy_StampContent_initWithComItextpdfTextPdfPdfWriter_withComItextpdfTextPdfPageResources_(ComItextpdfTextPdfPdfWriter *writer, ComItextpdfTextPdfPageResources *pageResources) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfCopy_StampContent)

#endif // _ComItextpdfTextPdfPdfCopy_H_

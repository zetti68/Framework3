//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfStamperImp.java
//

#ifndef _ComItextpdfTextPdfPdfStamperImp_H_
#define _ComItextpdfTextPdfPdfStamperImp_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"

@class ComItextpdfTextImage;
@class ComItextpdfTextPdfAcroFields;
@class ComItextpdfTextPdfByteBuffer;
@class ComItextpdfTextPdfCollectionPdfCollection;
@class ComItextpdfTextPdfFdfReader;
@class ComItextpdfTextPdfIntHashtable;
@class ComItextpdfTextPdfInternalPdfViewerPreferencesImp;
@class ComItextpdfTextPdfPageResources;
@class ComItextpdfTextPdfPdfAction;
@class ComItextpdfTextPdfPdfAnnotation;
@class ComItextpdfTextPdfPdfContentByte;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfFormField;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfStamperImp_PageStamp;
@class ComItextpdfTextPdfPdfTransition;
@class ComItextpdfTextPdfRandomAccessFileOrArray;
@class ComItextpdfTextPdfStampContent;
@class ComItextpdfTextRectangle;
@class IOSIntArray;
@class JavaIoOutputStream;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@protocol ComItextpdfTextLogCounter;
@protocol JavaUtilMap;

@interface ComItextpdfTextPdfPdfStamperImp : ComItextpdfTextPdfPdfWriter {
 @public
  JavaUtilHashMap *readers2intrefs_;
  JavaUtilHashMap *readers2file_;
  ComItextpdfTextPdfRandomAccessFileOrArray *file_;
  ComItextpdfTextPdfPdfReader *reader_;
  ComItextpdfTextPdfIntHashtable *myXref_;
  JavaUtilHashMap *pagesToContent_;
  jboolean closed_;
  ComItextpdfTextPdfAcroFields *acroFields_;
  jboolean flat_;
  jboolean flatFreeText_;
  IOSIntArray *namePtr_;
  JavaUtilHashSet *partialFlattening_;
  jboolean useVp_;
  ComItextpdfTextPdfInternalPdfViewerPreferencesImp *viewerPreferences_;
  JavaUtilHashSet *fieldTemplates_;
  jboolean fieldsAdded_;
  jint sigFlags_;
  jboolean append_;
  ComItextpdfTextPdfIntHashtable *marked_;
  jint initialXrefSize_;
  ComItextpdfTextPdfPdfAction *openAction_;
  id<ComItextpdfTextLogCounter> COUNTER_;
}

#pragma mark Public

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot;

- (void)addCommentsWithComItextpdfTextPdfFdfReader:(ComItextpdfTextPdfFdfReader *)fdf;

- (void)addViewerPreferenceWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                         withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (void)createXmpMetadata;

- (ComItextpdfTextPdfPdfContentByte *)getDirectContent;

- (ComItextpdfTextPdfPdfContentByte *)getDirectContentUnder;

- (ComItextpdfTextPdfPdfIndirectReference *)getPageReferenceWithInt:(jint)page;

- (id<JavaUtilMap>)getPdfLayers;

- (void)registerReaderWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                          withBoolean:(jboolean)openFile;

- (void)setAdditionalActionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)actionType
                         withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setDurationWithInt:(jint)seconds;

- (void)setOpenActionWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setOpenActionWithNSString:(NSString *)name;

- (void)setPageActionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)actionType
                   withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setSigFlagsWithInt:(jint)f;

- (void)setThumbnailWithComItextpdfTextImage:(ComItextpdfTextImage *)image;

- (void)setTransitionWithComItextpdfTextPdfPdfTransition:(ComItextpdfTextPdfPdfTransition *)transition;

- (void)setViewerPreferencesWithInt:(jint)preferences;

- (void)unRegisterReaderWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

#pragma mark Protected

- (instancetype)initWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                             withJavaIoOutputStream:(JavaIoOutputStream *)os
                                           withChar:(jchar)pdfVersion
                                        withBoolean:(jboolean)append;

- (void)addFieldResources;

- (void)addFileAttachments;

- (void)alterContents;

- (void)closeWithJavaUtilMap:(id<JavaUtilMap>)moreInfo;

- (void)closeWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)info
                                                withInt:(jint)skipInfo;

- (void)flatFields;

- (void)flatFreeTextFields;

- (id<ComItextpdfTextLogCounter>)getCounter;

- (jint)getNewObjectNumberWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                  withInt:(jint)number
                                                  withInt:(jint)generation;

- (void)markUsedWithInt:(jint)num;

- (void)markUsedWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)obj;

- (void)readColorProfile;

- (void)readOCProperties;

- (void)setJavaScript;

- (void)setOutlines;

- (void)setViewerPreferences;

#pragma mark Package-Private

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot
                                                 withInt:(jint)page;

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot
                     withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)pageN;

- (void)addDocumentFieldWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref;

- (void)alterResourcesWithComItextpdfTextPdfPdfStamperImp_PageStamp:(ComItextpdfTextPdfPdfStamperImp_PageStamp *)ps;

- (void)applyRotationWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)pageN
                        withComItextpdfTextPdfByteBuffer:(ComItextpdfTextPdfByteBuffer *)outArg;

- (void)correctAcroFieldPagesWithInt:(jint)page;

- (void)deleteOutlines;

- (void)eliminateAcroformObjects;

- (void)expandFieldsWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                 withJavaUtilArrayList:(JavaUtilArrayList *)allAnnots;

+ (void)findAllObjectsWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                      withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)obj
                   withComItextpdfTextPdfIntHashtable:(ComItextpdfTextPdfIntHashtable *)hits;

- (ComItextpdfTextPdfAcroFields *)getAcroFields;

- (ComItextpdfTextPdfPdfContentByte *)getOverContentWithInt:(jint)pageNum;

- (ComItextpdfTextPdfPdfStamperImp_PageStamp *)getPageStampWithInt:(jint)pageNum;

- (ComItextpdfTextPdfRandomAccessFileOrArray *)getReaderFileWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (ComItextpdfTextPdfPdfContentByte *)getUnderContentWithInt:(jint)pageNum;

- (void)insertPageWithInt:(jint)pageNumber
withComItextpdfTextRectangle:(ComItextpdfTextRectangle *)mediabox;

- (jboolean)isAppend;

- (jboolean)isContentWritten;

- (jboolean)isRotateContents;

- (void)makePackageWithComItextpdfTextPdfCollectionPdfCollection:(ComItextpdfTextPdfCollectionPdfCollection *)collection;

- (jboolean)partialFormFlatteningWithNSString:(NSString *)name;

- (void)replacePageWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)r
                                           withInt:(jint)pageImported
                                           withInt:(jint)pageReplaced;

- (void)setDurationWithInt:(jint)seconds
                   withInt:(jint)page;

- (void)setFormFlatteningWithBoolean:(jboolean)flat;

- (void)setFreeTextFlatteningWithBoolean:(jboolean)flat;

- (void)setPageActionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)actionType
                   withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
                                           withInt:(jint)page;

- (void)setRotateContentsWithBoolean:(jboolean)rotateContents;

- (void)setThumbnailWithComItextpdfTextImage:(ComItextpdfTextImage *)image
                                     withInt:(jint)page;

- (void)setTransitionWithComItextpdfTextPdfPdfTransition:(ComItextpdfTextPdfPdfTransition *)transition
                                                 withInt:(jint)page;

- (void)sweepKidsWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)obj;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfStamperImp)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, readers2intrefs_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, readers2file_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, file_, ComItextpdfTextPdfRandomAccessFileOrArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, reader_, ComItextpdfTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, myXref_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, pagesToContent_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, acroFields_, ComItextpdfTextPdfAcroFields *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, namePtr_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, partialFlattening_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, viewerPreferences_, ComItextpdfTextPdfInternalPdfViewerPreferencesImp *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, fieldTemplates_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, marked_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, openAction_, ComItextpdfTextPdfPdfAction *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp, COUNTER_, id<ComItextpdfTextLogCounter>)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfStamperImp_initWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_(ComItextpdfTextPdfPdfStamperImp *self, ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, jchar pdfVersion, jboolean append);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfStamperImp *new_ComItextpdfTextPdfPdfStamperImp_initWithComItextpdfTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_(ComItextpdfTextPdfPdfReader *reader, JavaIoOutputStream *os, jchar pdfVersion, jboolean append) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfStamperImp_findAllObjectsWithComItextpdfTextPdfPdfReader_withComItextpdfTextPdfPdfObject_withComItextpdfTextPdfIntHashtable_(ComItextpdfTextPdfPdfReader *reader, ComItextpdfTextPdfPdfObject *obj, ComItextpdfTextPdfIntHashtable *hits);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfStamperImp)

@interface ComItextpdfTextPdfPdfStamperImp_PageStamp : NSObject {
 @public
  ComItextpdfTextPdfPdfDictionary *pageN_;
  ComItextpdfTextPdfStampContent *under_;
  ComItextpdfTextPdfStampContent *over_;
  ComItextpdfTextPdfPageResources *pageResources_;
  jint replacePoint_;
}

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextPdfPdfStamperImp:(ComItextpdfTextPdfPdfStamperImp *)stamper
                        withComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                    withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)pageN;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfStamperImp_PageStamp)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp_PageStamp, pageN_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp_PageStamp, under_, ComItextpdfTextPdfStampContent *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp_PageStamp, over_, ComItextpdfTextPdfStampContent *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfStamperImp_PageStamp, pageResources_, ComItextpdfTextPdfPageResources *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfStamperImp_PageStamp_initWithComItextpdfTextPdfPdfStamperImp_withComItextpdfTextPdfPdfReader_withComItextpdfTextPdfPdfDictionary_(ComItextpdfTextPdfPdfStamperImp_PageStamp *self, ComItextpdfTextPdfPdfStamperImp *stamper, ComItextpdfTextPdfPdfReader *reader, ComItextpdfTextPdfPdfDictionary *pageN);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfStamperImp_PageStamp *new_ComItextpdfTextPdfPdfStamperImp_PageStamp_initWithComItextpdfTextPdfPdfStamperImp_withComItextpdfTextPdfPdfReader_withComItextpdfTextPdfPdfDictionary_(ComItextpdfTextPdfPdfStamperImp *stamper, ComItextpdfTextPdfPdfReader *reader, ComItextpdfTextPdfPdfDictionary *pageN) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfStamperImp_PageStamp)

#endif // _ComItextpdfTextPdfPdfStamperImp_H_

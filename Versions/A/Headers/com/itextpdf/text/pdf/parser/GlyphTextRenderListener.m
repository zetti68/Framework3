//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/GlyphTextRenderListener.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/GlyphTextRenderListener.java"

#include "com/itextpdf/text/pdf/parser/GlyphTextRenderListener.h"
#include "com/itextpdf/text/pdf/parser/TextExtractionStrategy.h"


#line 47
@implementation ComItextpdfTextPdfParserGlyphTextRenderListener


#line 51
- (instancetype)initWithComItextpdfTextPdfParserTextExtractionStrategy:(id<ComItextpdfTextPdfParserTextExtractionStrategy>)delegate {
  if (self =
#line 52
  [super initWithComItextpdfTextPdfParserRenderListener:delegate]) {
    
#line 53
    self->delegate_GlyphTextRenderListener_ = delegate;
  }
  return self;
}


#line 56
- (NSString *)getResultantText {
  
#line 57
  return [((id<ComItextpdfTextPdfParserTextExtractionStrategy>) nil_chk(delegate_GlyphTextRenderListener_)) getResultantText];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfParserGlyphTextRenderListener *)other {
  [super copyAllFieldsTo:other];
  other->delegate_GlyphTextRenderListener_ = delegate_GlyphTextRenderListener_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfParserTextExtractionStrategy:", "GlyphTextRenderListener", NULL, 0x1, NULL },
    { "getResultantText", NULL, "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_GlyphTextRenderListener_", "delegate", 0x12, "Lcom.itextpdf.text.pdf.parser.TextExtractionStrategy;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfParserGlyphTextRenderListener = { "GlyphTextRenderListener", "com.itextpdf.text.pdf.parser", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextPdfParserGlyphTextRenderListener;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/LocationTextExtractionStrategy.java
//

#ifndef _ComItextpdfTextPdfParserLocationTextExtractionStrategy_H_
#define _ComItextpdfTextPdfParserLocationTextExtractionStrategy_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/parser/TextExtractionStrategy.h"
#include "java/lang/Comparable.h"

@class ComItextpdfTextPdfParserImageRenderInfo;
@class ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk;
@class ComItextpdfTextPdfParserTextRenderInfo;
@class ComItextpdfTextPdfParserVector;
@protocol ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunkFilter;

@interface ComItextpdfTextPdfParserLocationTextExtractionStrategy : NSObject < ComItextpdfTextPdfParserTextExtractionStrategy >

#pragma mark Public

- (instancetype)init;

- (void)beginTextBlock;

- (void)endTextBlock;

- (NSString *)getResultantText;

- (NSString *)getResultantTextWithComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunkFilter:(id<ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunkFilter>)chunkFilter;

- (void)renderImageWithComItextpdfTextPdfParserImageRenderInfo:(ComItextpdfTextPdfParserImageRenderInfo *)renderInfo;

- (void)renderTextWithComItextpdfTextPdfParserTextRenderInfo:(ComItextpdfTextPdfParserTextRenderInfo *)renderInfo;

#pragma mark Protected

- (jboolean)isChunkAtWordBoundaryWithComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk:(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *)chunk
                                 withComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk:(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *)previousChunk;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfParserLocationTextExtractionStrategy)

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfParserLocationTextExtractionStrategy_DUMP_STATE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfParserLocationTextExtractionStrategy, DUMP_STATE_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(ComItextpdfTextPdfParserLocationTextExtractionStrategy, DUMP_STATE_, jboolean)

FOUNDATION_EXPORT void ComItextpdfTextPdfParserLocationTextExtractionStrategy_init(ComItextpdfTextPdfParserLocationTextExtractionStrategy *self);

FOUNDATION_EXPORT ComItextpdfTextPdfParserLocationTextExtractionStrategy *new_ComItextpdfTextPdfParserLocationTextExtractionStrategy_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfParserLocationTextExtractionStrategy)

@interface ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk : NSObject < JavaLangComparable >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)string
withComItextpdfTextPdfParserVector:(ComItextpdfTextPdfParserVector *)startLocation
withComItextpdfTextPdfParserVector:(ComItextpdfTextPdfParserVector *)endLocation
                       withFloat:(jfloat)charSpaceWidth;

- (jint)compareToWithId:(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *)rhs;

- (jfloat)distanceFromEndOfWithComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk:(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *)other;

- (jfloat)getCharSpaceWidth;

- (ComItextpdfTextPdfParserVector *)getEndLocation;

- (ComItextpdfTextPdfParserVector *)getStartLocation;

- (NSString *)getText;

- (jboolean)sameLineWithComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk:(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *)as;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk)

FOUNDATION_EXPORT void ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk_initWithNSString_withComItextpdfTextPdfParserVector_withComItextpdfTextPdfParserVector_withFloat_(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *self, NSString *string, ComItextpdfTextPdfParserVector *startLocation, ComItextpdfTextPdfParserVector *endLocation, jfloat charSpaceWidth);

FOUNDATION_EXPORT ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *new_ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk_initWithNSString_withComItextpdfTextPdfParserVector_withComItextpdfTextPdfParserVector_withFloat_(NSString *string, ComItextpdfTextPdfParserVector *startLocation, ComItextpdfTextPdfParserVector *endLocation, jfloat charSpaceWidth) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk)

@protocol ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunkFilter < NSObject, JavaObject >

- (jboolean)acceptWithComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk:(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunk *)textChunk;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunkFilter)

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfParserLocationTextExtractionStrategy_TextChunkFilter)

#endif // _ComItextpdfTextPdfParserLocationTextExtractionStrategy_H_

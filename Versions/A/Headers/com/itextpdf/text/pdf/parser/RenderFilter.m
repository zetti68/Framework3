//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/RenderFilter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/RenderFilter.java"

#include "com/itextpdf/text/pdf/parser/ImageRenderInfo.h"
#include "com/itextpdf/text/pdf/parser/RenderFilter.h"
#include "com/itextpdf/text/pdf/parser/TextRenderInfo.h"


#line 52
@implementation ComItextpdfTextPdfParserRenderFilter


#line 58
- (jboolean)allowTextWithComItextpdfTextPdfParserTextRenderInfo:(ComItextpdfTextPdfParserTextRenderInfo *)renderInfo {
  
#line 59
  return YES;
}


#line 67
- (jboolean)allowImageWithComItextpdfTextPdfParserImageRenderInfo:(ComItextpdfTextPdfParserImageRenderInfo *)renderInfo {
  
#line 68
  return YES;
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "allowTextWithComItextpdfTextPdfParserTextRenderInfo:", "allowText", "Z", 0x1, NULL },
    { "allowImageWithComItextpdfTextPdfParserImageRenderInfo:", "allowImage", "Z", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfParserRenderFilter = { "RenderFilter", "com.itextpdf.text.pdf.parser", NULL, 0x401, 3, methods, 0, NULL, 0, NULL};
  return &_ComItextpdfTextPdfParserRenderFilter;
}

@end

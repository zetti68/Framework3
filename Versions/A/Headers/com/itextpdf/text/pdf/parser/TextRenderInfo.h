//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/TextRenderInfo.java
//

#ifndef _ComItextpdfTextPdfParserTextRenderInfo_H_
#define _ComItextpdfTextPdfParserTextRenderInfo_H_

@class ComItextpdfTextBaseColor;
@class ComItextpdfTextPdfDocumentFont;
@class ComItextpdfTextPdfParserGraphicsState;
@class ComItextpdfTextPdfParserLineSegment;
@class ComItextpdfTextPdfParserMatrix;
@class JavaLangInteger;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

#import "JreEmulation.h"

@interface ComItextpdfTextPdfParserTextRenderInfo : NSObject {
 @public
  NSString *text_;
  ComItextpdfTextPdfParserMatrix *textToUserSpaceTransformMatrix_;
  ComItextpdfTextPdfParserGraphicsState *gs_;
  id<JavaUtilCollection> markedContentInfos_;
}

- (instancetype)initWithNSString:(NSString *)text
withComItextpdfTextPdfParserGraphicsState:(ComItextpdfTextPdfParserGraphicsState *)gs
withComItextpdfTextPdfParserMatrix:(ComItextpdfTextPdfParserMatrix *)textMatrix
          withJavaUtilCollection:(id<JavaUtilCollection>)markedContentInfo;

- (instancetype)initWithComItextpdfTextPdfParserTextRenderInfo:(ComItextpdfTextPdfParserTextRenderInfo *)parent
                                                       withInt:(jint)charIndex
                                                     withFloat:(jfloat)horizontalOffset;

- (NSString *)getText;

- (jboolean)hasMcidWithInt:(jint)mcid;

- (jboolean)hasMcidWithInt:(jint)mcid
               withBoolean:(jboolean)checkTheTopmostLevelOnly;

- (JavaLangInteger *)getMcid;

- (jfloat)getUnscaledWidth;

- (ComItextpdfTextPdfParserLineSegment *)getBaseline;

- (ComItextpdfTextPdfParserLineSegment *)getAscentLine;

- (ComItextpdfTextPdfParserLineSegment *)getDescentLine;

- (ComItextpdfTextPdfParserLineSegment *)getUnscaledBaselineWithOffsetWithFloat:(jfloat)yOffset;

- (ComItextpdfTextPdfDocumentFont *)getFont;

- (jfloat)getRise;

- (jfloat)convertWidthFromTextSpaceToUserSpaceWithFloat:(jfloat)width;

- (jfloat)convertHeightFromTextSpaceToUserSpaceWithFloat:(jfloat)height;

- (jfloat)getSingleSpaceWidth;

- (jint)getTextRenderMode;

- (ComItextpdfTextBaseColor *)getFillColor;

- (ComItextpdfTextBaseColor *)getStrokeColor;

- (jfloat)getUnscaledFontSpaceWidth;

- (jfloat)getStringWidthWithNSString:(NSString *)string;

- (id<JavaUtilList>)getCharacterRenderInfos;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfParserTextRenderInfo *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfParserTextRenderInfo_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfParserTextRenderInfo, text_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfParserTextRenderInfo, textToUserSpaceTransformMatrix_, ComItextpdfTextPdfParserMatrix *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfParserTextRenderInfo, gs_, ComItextpdfTextPdfParserGraphicsState *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfParserTextRenderInfo, markedContentInfos_, id<JavaUtilCollection>)

#endif // _ComItextpdfTextPdfParserTextRenderInfo_H_

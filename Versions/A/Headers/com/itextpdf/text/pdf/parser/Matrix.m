//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/Matrix.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/Matrix.java"

#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/pdf/parser/Matrix.h"
#include "java/lang/Float.h"
#include "java/util/Arrays.h"


#line 55
@implementation ComItextpdfTextPdfParserMatrix


#line 90
- (instancetype)init {
  if (self = [super init]) {
    vals_ = [IOSFloatArray arrayWithFloats:(jfloat[]){
#line 82
      1, 0, 0,
#line 83
      0, 1, 0,
#line 84
      0, 0, 1 } count:9];
    }
    return self;
  }


#line 98
- (instancetype)initWithFloat:(jfloat)tx
                    withFloat:(jfloat)ty {
  if (self = [super init]) {
    vals_ = [IOSFloatArray arrayWithFloats:(jfloat[]){
#line 82
      1, 0, 0,
#line 83
      0, 1, 0,
#line 84
      0, 0, 1 } count:9];
      
#line 99
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I31) = tx;
      
#line 100
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I32) = ty;
    }
    return self;
  }


#line 112
- (instancetype)initWithFloat:(jfloat)a
                    withFloat:(jfloat)b
                    withFloat:(jfloat)c
                    withFloat:(jfloat)d
                    withFloat:(jfloat)e
                    withFloat:(jfloat)f {
  if (self = [super init]) {
    vals_ = [IOSFloatArray arrayWithFloats:(jfloat[]){
#line 82
      1, 0, 0,
#line 83
      0, 1, 0,
#line 84
      0, 0, 1 } count:9];
      
#line 113
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I11) = a;
      
#line 114
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I12) = b;
      
#line 115
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I13) = 0;
      
#line 116
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I21) = c;
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I22) = d;
      
#line 118
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I23) = 0;
      
#line 119
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I31) = e;
      
#line 120
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I32) = f;
      
#line 121
      *IOSFloatArray_GetRef(vals_, ComItextpdfTextPdfParserMatrix_I33) = 1;
    }
    return self;
  }


#line 135
- (jfloat)getWithInt:(jint)index {
  
#line 136
  return IOSFloatArray_Get(nil_chk(vals_), index);
}


#line 145
- (ComItextpdfTextPdfParserMatrix *)multiplyWithComItextpdfTextPdfParserMatrix:(ComItextpdfTextPdfParserMatrix *)by {
  
#line 146
  ComItextpdfTextPdfParserMatrix *rslt = [[ComItextpdfTextPdfParserMatrix alloc] init];
  
#line 148
  IOSFloatArray *a = vals_;
  IOSFloatArray *b = ((ComItextpdfTextPdfParserMatrix *) nil_chk(by))->vals_;
  IOSFloatArray *c = rslt->vals_;
  
#line 152
  *IOSFloatArray_GetRef(nil_chk(c), ComItextpdfTextPdfParserMatrix_I11) = IOSFloatArray_Get(nil_chk(a), ComItextpdfTextPdfParserMatrix_I11) * IOSFloatArray_Get(nil_chk(b), ComItextpdfTextPdfParserMatrix_I11) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I12) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I21) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I13) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I31);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I12) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I11) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I12) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I12) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I22) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I13) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I32);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I13) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I11) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I13) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I12) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I23) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I13) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I33);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I21) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I21) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I11) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I22) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I21) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I23) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I31);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I22) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I21) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I12) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I22) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I22) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I23) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I32);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I23) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I21) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I13) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I22) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I23) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I23) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I33);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I31) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I31) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I11) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I32) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I21) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I33) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I31);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I32) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I31) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I12) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I32) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I22) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I33) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I32);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I33) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I31) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I13) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I32) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I23) + IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I33) * IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I33);
  
#line 162
  return rslt;
}

- (ComItextpdfTextPdfParserMatrix *)subtractWithComItextpdfTextPdfParserMatrix:(ComItextpdfTextPdfParserMatrix *)arg {
  
#line 171
  ComItextpdfTextPdfParserMatrix *rslt = [[ComItextpdfTextPdfParserMatrix alloc] init];
  
#line 173
  IOSFloatArray *a = vals_;
  IOSFloatArray *b = ((ComItextpdfTextPdfParserMatrix *) nil_chk(arg))->vals_;
  IOSFloatArray *c = rslt->vals_;
  
#line 177
  *IOSFloatArray_GetRef(nil_chk(c), ComItextpdfTextPdfParserMatrix_I11) = IOSFloatArray_Get(nil_chk(a), ComItextpdfTextPdfParserMatrix_I11) - IOSFloatArray_Get(nil_chk(b), ComItextpdfTextPdfParserMatrix_I11);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I12) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I12) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I12);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I13) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I13) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I13);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I21) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I21) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I21);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I22) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I22) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I22);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I23) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I23) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I23);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I31) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I31) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I31);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I32) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I32) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I32);
  *IOSFloatArray_GetRef(c, ComItextpdfTextPdfParserMatrix_I33) = IOSFloatArray_Get(a, ComItextpdfTextPdfParserMatrix_I33) - IOSFloatArray_Get(b, ComItextpdfTextPdfParserMatrix_I33);
  
#line 187
  return rslt;
}

- (jfloat)getDeterminant {
  
#line 199
  return IOSFloatArray_Get(nil_chk(vals_), ComItextpdfTextPdfParserMatrix_I11) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I22) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I33) +
#line 200
  IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I12) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I23) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I31) +
#line 201
  IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I13) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I21) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I32) -
#line 202
  IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I11) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I23) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I32) -
#line 203
  IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I12) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I21) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I33) -
#line 204
  IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I13) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I22) * IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I31);
}

- (jboolean)isEqual:(id)obj {
  
#line 214
  if (!([obj isKindOfClass:[ComItextpdfTextPdfParserMatrix class]]))
#line 215
  return NO;
  
#line 217
  return [JavaUtilArrays equalsWithFloatArray:vals_ withFloatArray:((ComItextpdfTextPdfParserMatrix *) nil_chk(((ComItextpdfTextPdfParserMatrix *) check_class_cast(obj, [ComItextpdfTextPdfParserMatrix class]))))->vals_];
}

- (NSUInteger)hash {
  
#line 228
  jint result = 1;
  for (jint i = 0; i < ((IOSFloatArray *) nil_chk(vals_))->size_; i++)
#line 230
  result = 31 * result + [JavaLangFloat floatToIntBitsWithFloat:IOSFloatArray_Get(vals_, i)];
  
#line 232
  return result;
}

- (NSString *)description {
  
#line 241
  return JreStrcat("FCFCFCFCFCFCFCFCF", IOSFloatArray_Get(nil_chk(vals_), ComItextpdfTextPdfParserMatrix_I11), 0x0009, IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I12), 0x0009, IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I13), 0x000a, IOSFloatArray_Get(
#line 242
  vals_, ComItextpdfTextPdfParserMatrix_I21), 0x0009, IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I22), 0x0009, IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I13), 0x000a, IOSFloatArray_Get(
#line 243
  vals_, ComItextpdfTextPdfParserMatrix_I31), 0x0009, IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I32), 0x0009, IOSFloatArray_Get(vals_, ComItextpdfTextPdfParserMatrix_I33));
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfParserMatrix *)other {
  [super copyAllFieldsTo:other];
  other->vals_ = vals_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Matrix", NULL, 0x1, NULL },
    { "initWithFloat:withFloat:", "Matrix", NULL, 0x1, NULL },
    { "initWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", "Matrix", NULL, 0x1, NULL },
    { "getWithInt:", "get", "F", 0x1, NULL },
    { "multiplyWithComItextpdfTextPdfParserMatrix:", "multiply", "Lcom.itextpdf.text.pdf.parser.Matrix;", 0x1, NULL },
    { "subtractWithComItextpdfTextPdfParserMatrix:", "subtract", "Lcom.itextpdf.text.pdf.parser.Matrix;", 0x1, NULL },
    { "getDeterminant", NULL, "F", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "I11_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I11 },
    { "I12_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I12 },
    { "I13_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I13 },
    { "I21_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I21 },
    { "I22_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I22 },
    { "I23_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I23 },
    { "I31_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I31 },
    { "I32_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I32 },
    { "I33_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfParserMatrix_I33 },
    { "vals_", NULL, 0x12, "[F", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfParserMatrix = { "Matrix", "com.itextpdf.text.pdf.parser", NULL, 0x1, 10, methods, 10, fields, 0, NULL};
  return &_ComItextpdfTextPdfParserMatrix;
}

@end

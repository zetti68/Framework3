//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/TextMarginFinder.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/parser/TextMarginFinder.java"

#include "com/itextpdf/awt/geom/Rectangle2D.h"
#include "com/itextpdf/text/pdf/parser/ImageRenderInfo.h"
#include "com/itextpdf/text/pdf/parser/LineSegment.h"
#include "com/itextpdf/text/pdf/parser/TextMarginFinder.h"
#include "com/itextpdf/text/pdf/parser/TextRenderInfo.h"


#line 53
@implementation ComItextpdfTextPdfParserTextMarginFinder


#line 62
- (void)renderTextWithComItextpdfTextPdfParserTextRenderInfo:(ComItextpdfTextPdfParserTextRenderInfo *)renderInfo {
  
#line 63
  if (textRectangle_ == nil)
#line 64
  textRectangle_ = [((ComItextpdfTextPdfParserLineSegment *) nil_chk([((ComItextpdfTextPdfParserTextRenderInfo *) nil_chk(renderInfo)) getDescentLine])) getBoundingRectange];
  else
#line 66
  [textRectangle_ addWithComItextpdfAwtGeomRectangle2D:[((ComItextpdfTextPdfParserLineSegment *) nil_chk([((ComItextpdfTextPdfParserTextRenderInfo *) nil_chk(renderInfo)) getDescentLine])) getBoundingRectange]];
  
#line 68
  [((ComItextpdfAwtGeomRectangle2D_Float *) nil_chk(textRectangle_)) addWithComItextpdfAwtGeomRectangle2D:[((ComItextpdfTextPdfParserLineSegment *) nil_chk([((ComItextpdfTextPdfParserTextRenderInfo *) nil_chk(renderInfo)) getAscentLine])) getBoundingRectange]];
}

- (jfloat)getLlx {
  
#line 77
  return ((ComItextpdfAwtGeomRectangle2D_Float *) nil_chk(textRectangle_))->x_;
}


#line 84
- (jfloat)getLly {
  
#line 85
  return ((ComItextpdfAwtGeomRectangle2D_Float *) nil_chk(textRectangle_))->y_;
}


#line 92
- (jfloat)getUrx {
  
#line 93
  return ((ComItextpdfAwtGeomRectangle2D_Float *) nil_chk(textRectangle_))->x_ + textRectangle_->width_;
}


#line 100
- (jfloat)getUry {
  
#line 101
  return ((ComItextpdfAwtGeomRectangle2D_Float *) nil_chk(textRectangle_))->y_ + textRectangle_->height_;
}


#line 108
- (jfloat)getWidth {
  
#line 109
  return ((ComItextpdfAwtGeomRectangle2D_Float *) nil_chk(textRectangle_))->width_;
}


#line 116
- (jfloat)getHeight {
  
#line 117
  return ((ComItextpdfAwtGeomRectangle2D_Float *) nil_chk(textRectangle_))->height_;
}


#line 123
- (void)beginTextBlock {
}


#line 130
- (void)endTextBlock {
}


#line 137
- (void)renderImageWithComItextpdfTextPdfParserImageRenderInfo:(ComItextpdfTextPdfParserImageRenderInfo *)renderInfo {
}

- (instancetype)init {
  if (self = [super init]) {
    textRectangle_ =
#line 54
    nil;
  }
  return self;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfParserTextMarginFinder *)other {
  [super copyAllFieldsTo:other];
  other->textRectangle_ = textRectangle_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "renderTextWithComItextpdfTextPdfParserTextRenderInfo:", "renderText", "V", 0x1, NULL },
    { "getLlx", NULL, "F", 0x1, NULL },
    { "getLly", NULL, "F", 0x1, NULL },
    { "getUrx", NULL, "F", 0x1, NULL },
    { "getUry", NULL, "F", 0x1, NULL },
    { "getWidth", NULL, "F", 0x1, NULL },
    { "getHeight", NULL, "F", 0x1, NULL },
    { "beginTextBlock", NULL, "V", 0x1, NULL },
    { "endTextBlock", NULL, "V", 0x1, NULL },
    { "renderImageWithComItextpdfTextPdfParserImageRenderInfo:", "renderImage", "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "textRectangle_", NULL, 0x2, "Lcom.itextpdf.awt.geom.Rectangle2D$Float;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfParserTextMarginFinder = { "TextMarginFinder", "com.itextpdf.text.pdf.parser", NULL, 0x1, 11, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextPdfParserTextMarginFinder;
}

@end

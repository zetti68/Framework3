//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/VerticalText.java
//

#ifndef _ComItextpdfTextPdfVerticalText_H_
#define _ComItextpdfTextPdfVerticalText_H_

@class ComItextpdfTextChunk;
@class ComItextpdfTextPdfPdfChunk;
@class ComItextpdfTextPdfPdfContentByte;
@class ComItextpdfTextPdfPdfLine;
@class ComItextpdfTextPhrase;
@class JavaLangFloat;
@class JavaUtilArrayList;

#import "JreEmulation.h"

#define ComItextpdfTextPdfVerticalText_NO_MORE_COLUMN 2
#define ComItextpdfTextPdfVerticalText_NO_MORE_TEXT 1

@interface ComItextpdfTextPdfVerticalText : NSObject {
 @public
  JavaUtilArrayList *chunks_;
  ComItextpdfTextPdfPdfContentByte *text_;
  jint alignment_;
  jint currentChunkMarker_;
  ComItextpdfTextPdfPdfChunk *currentStandbyChunk_;
  NSString *splittedChunkText_;
  jfloat leading_;
  jfloat startX_;
  jfloat startY_;
  jint maxLines_;
  jfloat height_;
  JavaLangFloat *curCharSpace_;
}

- (instancetype)initWithComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)text;

- (void)addTextWithComItextpdfTextPhrase:(ComItextpdfTextPhrase *)phrase;

- (void)addTextWithComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk;

- (void)setVerticalLayoutWithFloat:(jfloat)startX
                         withFloat:(jfloat)startY
                         withFloat:(jfloat)height
                           withInt:(jint)maxLines
                         withFloat:(jfloat)leading;

- (void)setLeadingWithFloat:(jfloat)leading;

- (jfloat)getLeading;

- (ComItextpdfTextPdfPdfLine *)createLineWithFloat:(jfloat)width;

- (void)shortenChunkArray;

- (jint)go;

- (jint)goWithBoolean:(jboolean)simulate;

- (void)writeLineWithComItextpdfTextPdfPdfLine:(ComItextpdfTextPdfPdfLine *)line
          withComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)text
          withComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)graphics;

- (void)setOriginWithFloat:(jfloat)startX
                 withFloat:(jfloat)startY;

- (jfloat)getOriginX;

- (jfloat)getOriginY;

- (jint)getMaxLines;

- (void)setMaxLinesWithInt:(jint)maxLines;

- (jfloat)getHeight;

- (void)setHeightWithFloat:(jfloat)height;

- (void)setAlignmentWithInt:(jint)alignment;

- (jint)getAlignment;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfVerticalText *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfVerticalText_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfVerticalText, chunks_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfVerticalText, text_, ComItextpdfTextPdfPdfContentByte *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfVerticalText, currentStandbyChunk_, ComItextpdfTextPdfPdfChunk *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfVerticalText, splittedChunkText_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfVerticalText, curCharSpace_, JavaLangFloat *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfVerticalText, NO_MORE_TEXT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfVerticalText, NO_MORE_COLUMN, jint)

#endif // _ComItextpdfTextPdfVerticalText_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/XmlSignatureAppearance.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/XmlSignatureAppearance.java"

#include "IOSClass.h"
#include "com/itextpdf/text/DocumentException.h"
#include "com/itextpdf/text/pdf/PdfStamper.h"
#include "com/itextpdf/text/pdf/PdfStamperImp.h"
#include "com/itextpdf/text/pdf/XmlSignatureAppearance.h"
#include "com/itextpdf/text/pdf/security/XmlLocator.h"
#include "com/itextpdf/text/pdf/security/XpathConstructor.h"
#include "java/io/IOException.h"
#include "java/security/cert/Certificate.h"
#include "java/util/Calendar.h"
#include "java/util/Map.h"


#line 57
@implementation ComItextpdfTextPdfXmlSignatureAppearance


#line 63
- (instancetype)initWithComItextpdfTextPdfPdfStamperImp:(ComItextpdfTextPdfPdfStamperImp *)writer {
  if (self = [super init]) {
    mimeType_ =
#line 80
    @"text/xml";
    
#line 64
    self->writer_ = writer;
  }
  return self;
}


#line 82
- (ComItextpdfTextPdfPdfStamperImp *)getWriter {
  
#line 83
  return writer_;
}


#line 86
- (ComItextpdfTextPdfPdfStamper *)getStamper {
  
#line 87
  return stamper_;
}


#line 90
- (void)setStamperWithComItextpdfTextPdfPdfStamper:(ComItextpdfTextPdfPdfStamper *)stamper {
  
#line 91
  self->stamper_ = stamper;
}


#line 99
- (void)setCertificateWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)signCertificate {
  
#line 100
  self->signCertificate_ = signCertificate;
}


#line 103
- (JavaSecurityCertCertificate *)getCertificate {
  
#line 104
  return signCertificate_;
}


#line 107
- (void)setDescriptionWithNSString:(NSString *)description_ {
  
#line 108
  self->description__ = description_;
}


#line 111
- (NSString *)getDescription {
  
#line 112
  return description__;
}


#line 115
- (NSString *)getMimeType {
  
#line 116
  return mimeType_;
}


#line 119
- (void)setMimeTypeWithNSString:(NSString *)mimeType {
  
#line 120
  self->mimeType_ = mimeType;
}


#line 127
- (JavaUtilCalendar *)getSignDate {
  
#line 128
  if (signDate_ == nil)
#line 129
  signDate_ = [JavaUtilCalendar getInstance];
  return signDate_;
}


#line 137
- (void)setSignDateWithJavaUtilCalendar:(JavaUtilCalendar *)signDate {
  
#line 138
  self->signDate_ = signDate;
}


#line 145
- (id<ComItextpdfTextPdfSecurityXmlLocator>)getXmlLocator {
  
#line 146
  return xmlLocator_;
}


#line 150
- (void)setXmlLocatorWithComItextpdfTextPdfSecurityXmlLocator:(id<ComItextpdfTextPdfSecurityXmlLocator>)xmlLocator {
  self->xmlLocator_ = xmlLocator;
}


#line 158
- (id<ComItextpdfTextPdfSecurityXpathConstructor>)getXpathConstructor {
  
#line 159
  return xpathConstructor_;
}


#line 162
- (void)setXpathConstructorWithComItextpdfTextPdfSecurityXpathConstructor:(id<ComItextpdfTextPdfSecurityXpathConstructor>)xpathConstructor {
  
#line 163
  self->xpathConstructor_ = xpathConstructor;
}


#line 171
- (void)close {
  
#line 172
  [((ComItextpdfTextPdfPdfStamperImp *) nil_chk(writer_)) closeWithJavaUtilMap:[((ComItextpdfTextPdfPdfStamper *) nil_chk(stamper_)) getMoreInfo]];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfXmlSignatureAppearance *)other {
  [super copyAllFieldsTo:other];
  other->description__ = description__;
  other->mimeType_ = mimeType_;
  other->signCertificate_ = signCertificate_;
  other->signDate_ = signDate_;
  other->stamper_ = stamper_;
  other->writer_ = writer_;
  other->xmlLocator_ = xmlLocator_;
  other->xpathConstructor_ = xpathConstructor_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfStamperImp:", "XmlSignatureAppearance", NULL, 0x0, NULL },
    { "getWriter", NULL, "Lcom.itextpdf.text.pdf.PdfStamperImp;", 0x1, NULL },
    { "getStamper", NULL, "Lcom.itextpdf.text.pdf.PdfStamper;", 0x1, NULL },
    { "setStamperWithComItextpdfTextPdfPdfStamper:", "setStamper", "V", 0x1, NULL },
    { "setCertificateWithJavaSecurityCertCertificate:", "setCertificate", "V", 0x1, NULL },
    { "getCertificate", NULL, "Ljava.security.cert.Certificate;", 0x1, NULL },
    { "setDescriptionWithNSString:", "setDescription", "V", 0x1, NULL },
    { "getDescription", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getMimeType", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "setMimeTypeWithNSString:", "setMimeType", "V", 0x1, NULL },
    { "getSignDate", NULL, "Ljava.util.Calendar;", 0x1, NULL },
    { "setSignDateWithJavaUtilCalendar:", "setSignDate", "V", 0x1, NULL },
    { "getXmlLocator", NULL, "Lcom.itextpdf.text.pdf.security.XmlLocator;", 0x1, NULL },
    { "setXmlLocatorWithComItextpdfTextPdfSecurityXmlLocator:", "setXmlLocator", "V", 0x1, NULL },
    { "getXpathConstructor", NULL, "Lcom.itextpdf.text.pdf.security.XpathConstructor;", 0x1, NULL },
    { "setXpathConstructorWithComItextpdfTextPdfSecurityXpathConstructor:", "setXpathConstructor", "V", 0x1, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;Lcom.itextpdf.text.DocumentException;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfStamperImp;", NULL,  },
    { "stamper_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfStamper;", NULL,  },
    { "signCertificate_", NULL, 0x2, "Ljava.security.cert.Certificate;", NULL,  },
    { "xmlLocator_", NULL, 0x2, "Lcom.itextpdf.text.pdf.security.XmlLocator;", NULL,  },
    { "xpathConstructor_", NULL, 0x2, "Lcom.itextpdf.text.pdf.security.XpathConstructor;", NULL,  },
    { "signDate_", NULL, 0x2, "Ljava.util.Calendar;", NULL,  },
    { "description__", "description", 0x2, "Ljava.lang.String;", NULL,  },
    { "mimeType_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfXmlSignatureAppearance = { "XmlSignatureAppearance", "com.itextpdf.text.pdf", NULL, 0x1, 17, methods, 8, fields, 0, NULL};
  return &_ComItextpdfTextPdfXmlSignatureAppearance;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/Type3Font.java
//

#ifndef _ComItextpdfTextPdfType3Font_H_
#define _ComItextpdfTextPdfType3Font_H_

@class ComItextpdfTextPdfIntHashtable;
@class ComItextpdfTextPdfPageResources;
@class ComItextpdfTextPdfPdfContentByte;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfStream;
@class ComItextpdfTextPdfPdfWriter;
@class IOSBooleanArray;
@class IOSByteArray;
@class IOSCharArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;

#import "JreEmulation.h"
#include "com/itextpdf/text/pdf/BaseFont.h"

@interface ComItextpdfTextPdfType3Font : ComItextpdfTextPdfBaseFont {
 @public
  IOSBooleanArray *usedSlot_;
  ComItextpdfTextPdfIntHashtable *widths3_;
  JavaUtilHashMap *char2glyph_;
  ComItextpdfTextPdfPdfWriter *writer_;
  jfloat llx_, lly_, urx_, ury_;
  ComItextpdfTextPdfPageResources *pageResources_;
  jboolean colorized_;
}

- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                      withCharArray:(IOSCharArray *)chars
                                        withBoolean:(jboolean)colorized;

- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                        withBoolean:(jboolean)colorized;

- (ComItextpdfTextPdfPdfContentByte *)defineGlyphWithChar:(jchar)c
                                                withFloat:(jfloat)wx
                                                withFloat:(jfloat)llx
                                                withFloat:(jfloat)lly
                                                withFloat:(jfloat)urx
                                                withFloat:(jfloat)ury;

- (IOSObjectArray *)getFamilyFontName;

- (jfloat)getFontDescriptorWithInt:(jint)key
                         withFloat:(jfloat)fontSize;

- (IOSObjectArray *)getFullFontName;

- (IOSObjectArray *)getAllNameEntries;

- (jint)getKerningWithInt:(jint)char1
                  withInt:(jint)char2;

- (NSString *)getPostscriptFontName;

- (IOSIntArray *)getRawCharBBoxWithInt:(jint)c
                          withNSString:(NSString *)name;

- (jint)getRawWidthWithInt:(jint)c
              withNSString:(NSString *)name;

- (jboolean)hasKernPairs;

- (jboolean)setKerningWithInt:(jint)char1
                      withInt:(jint)char2
                      withInt:(jint)kern;

- (void)setPostscriptFontNameWithNSString:(NSString *)name;

- (void)writeFontWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
      withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                               withNSObjectArray:(IOSObjectArray *)params;

- (ComItextpdfTextPdfPdfStream *)getFullFontStream;

- (IOSByteArray *)convertToBytesWithNSString:(NSString *)text;

- (IOSByteArray *)convertToBytesWithInt:(jint)char1;

- (jint)getWidthWithInt:(jint)char1;

- (jint)getWidthWithNSString:(NSString *)text;

- (IOSIntArray *)getCharBBoxWithInt:(jint)c;

- (jboolean)charExistsWithInt:(jint)c;

- (jboolean)setCharAdvanceWithInt:(jint)c
                          withInt:(jint)advance;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfType3Font *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfType3Font_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfType3Font, usedSlot_, IOSBooleanArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfType3Font, widths3_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfType3Font, char2glyph_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfType3Font, writer_, ComItextpdfTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfType3Font, pageResources_, ComItextpdfTextPdfPageResources *)

#endif // _ComItextpdfTextPdfType3Font_H_

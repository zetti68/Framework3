//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/EnumerateTTC.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/EnumerateTTC.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/DocumentException.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/EnumerateTTC.h"
#include "com/itextpdf/text/pdf/RandomAccessFileOrArray.h"
#include "com/itextpdf/text/pdf/TrueTypeFont.h"
#include "java/io/IOException.h"
#include "java/util/HashMap.h"


#line 56
@implementation ComItextpdfTextPdfEnumerateTTC


#line 60
- (instancetype)initWithNSString:(NSString *)ttcFile {
  if (self = [super init]) {
    
#line 61
    fileName_ = ttcFile;
    
#line 62
    rf_ = [[ComItextpdfTextPdfRandomAccessFileOrArray alloc] initWithNSString:ttcFile];
    
#line 63
    [self findNames];
  }
  return self;
}


#line 66
- (instancetype)initWithByteArray:(IOSByteArray *)ttcArray {
  if (self = [super init]) {
    
#line 67
    fileName_ = @"Byte array TTC";
    
#line 68
    rf_ = [[ComItextpdfTextPdfRandomAccessFileOrArray alloc] initWithByteArray:ttcArray];
    
#line 69
    [self findNames];
  }
  return self;
}


#line 72
- (void)findNames {
  
#line 73
  tables_ = [[JavaUtilHashMap alloc] init];
  
#line 75
  @try {
    NSString *mainTag = [self readStandardStringWithInt:4];
    if (![((NSString *) nil_chk(mainTag)) isEqual:@"ttcf"])
#line 78
    @throw [[ComItextpdfTextDocumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"1.is.not.a.valid.ttc.file" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ fileName_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
    [((ComItextpdfTextPdfRandomAccessFileOrArray *) nil_chk(rf_)) skipBytesWithInt:4];
    jint dirCount = [rf_ readInt];
    names_ = [IOSObjectArray arrayWithLength:dirCount type:[IOSClass classWithClass:[NSString class]]];
    jint dirPos = (jint) [rf_ getFilePointer];
    for (jint dirIdx = 0; dirIdx < dirCount; ++dirIdx) {
      [tables_ clear];
      [rf_ seekWithLong:dirPos];
      [rf_ skipBytesWithInt:dirIdx * 4];
      directoryOffset_ = [rf_ readInt];
      [rf_ seekWithLong:directoryOffset_];
      if ([rf_ readInt] != (jint) 0x00010000)
#line 90
      @throw [[ComItextpdfTextDocumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"1.is.not.a.valid.ttf.file" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ fileName_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
      jint num_tables = [rf_ readUnsignedShort];
      [rf_ skipBytesWithInt:6];
      for (jint k = 0; k < num_tables; ++k) {
        NSString *tag = [self readStandardStringWithInt:4];
        [rf_ skipBytesWithInt:4];
        IOSIntArray *table_location = [IOSIntArray arrayWithLength:2];
        *IOSIntArray_GetRef(table_location, 0) = [rf_ readInt];
        *IOSIntArray_GetRef(table_location, 1) = [rf_ readInt];
        (void) [tables_ putWithId:tag withId:table_location];
      }
      IOSObjectArray_Set(names_, dirIdx, [self getBaseFont]);
    }
  }
  @finally {
    if (rf_ != nil)
#line 106
    [rf_ close];
  }
}


#line 110
- (IOSObjectArray *)getNames {
  
#line 111
  return names_;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfEnumerateTTC *)other {
  [super copyAllFieldsTo:other];
  other->names_ = names_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "EnumerateTTC", NULL, 0x0, "Lcom.itextpdf.text.DocumentException;Ljava.io.IOException;" },
    { "initWithByteArray:", "EnumerateTTC", NULL, 0x0, "Lcom.itextpdf.text.DocumentException;Ljava.io.IOException;" },
    { "findNames", NULL, "V", 0x0, "Lcom.itextpdf.text.DocumentException;Ljava.io.IOException;" },
    { "getNames", NULL, "[Ljava.lang.String;", 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "names_", NULL, 0x4, "[Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfEnumerateTTC = { "EnumerateTTC", "com.itextpdf.text.pdf", NULL, 0x0, 4, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextPdfEnumerateTTC;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfChunk.java
//

#ifndef _ComItextpdfTextPdfPdfChunk_H_
#define _ComItextpdfTextPdfPdfChunk_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextBaseColor;
@class ComItextpdfTextChunk;
@class ComItextpdfTextImage;
@class ComItextpdfTextPdfBaseFont;
@class ComItextpdfTextPdfPdfAction;
@class ComItextpdfTextPdfPdfFont;
@class ComItextpdfTextTabSettings;
@class ComItextpdfTextTabStop;
@class IOSCharArray;
@class IOSObjectArray;
@class JavaUtilHashMap;
@protocol ComItextpdfTextPdfInterfacesIAccessibleElement;
@protocol ComItextpdfTextSplitCharacter;

#define ComItextpdfTextPdfPdfChunk_UNDERLINE_THICKNESS 0.06666667f
#define ComItextpdfTextPdfPdfChunk_UNDERLINE_OFFSET -0.33333334f

@interface ComItextpdfTextPdfPdfChunk : NSObject {
 @public
  NSString *value_;
  NSString *encoding_;
  ComItextpdfTextPdfPdfFont *font__;
  ComItextpdfTextPdfBaseFont *baseFont_;
  id<ComItextpdfTextSplitCharacter> splitCharacter_;
  JavaUtilHashMap *attributes_;
  JavaUtilHashMap *noStroke_;
  jboolean newlineSplit_;
  ComItextpdfTextImage *image_;
  jfloat imageScalePercentage_;
  jfloat offsetX_;
  jfloat offsetY_;
  jboolean changeLeading__;
  jfloat leading_;
  id<ComItextpdfTextPdfInterfacesIAccessibleElement> accessibleElement_;
}

#pragma mark Public

- (jboolean)changeLeading;

- (jfloat)getImageScalePercentage;

- (jfloat)getLeading;

- (jfloat)getTextRise;

- (jint)getUnicodeEquivalentWithInt:(jint)c;

- (jfloat)getWidthCorrectedWithFloat:(jfloat)charSpacing
                           withFloat:(jfloat)wordSpacing;

- (jboolean)isNewlineSplit;

+ (jboolean)noPrintWithInt:(jint)c;

- (void)setImageScalePercentageWithFloat:(jfloat)imageScalePercentage;

- (NSString *)description;

- (jfloat)trimFirstSpace;

- (jfloat)trimLastSpace;

#pragma mark Protected

- (jint)getWordWithNSString:(NSString *)text
                    withInt:(jint)start;

#pragma mark Package-Private

- (instancetype)initWithComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk
             withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (instancetype)initWithComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk
             withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action
              withComItextpdfTextTabSettings:(ComItextpdfTextTabSettings *)tabSettings;

- (instancetype)initWithNSString:(NSString *)string
  withComItextpdfTextPdfPdfChunk:(ComItextpdfTextPdfPdfChunk *)other;

- (void)adjustLeftWithFloat:(jfloat)newValue;

- (ComItextpdfTextBaseColor *)color;

- (ComItextpdfTextPdfPdfFont *)font;

- (id)getAttributeWithNSString:(NSString *)name;

- (jfloat)getCharWidthWithInt:(jint)c;

- (NSString *)getEncoding;

- (ComItextpdfTextImage *)getImage;

- (jfloat)getImageHeight;

- (jfloat)getImageOffsetX;

- (jfloat)getImageOffsetY;

- (jfloat)getImageWidth;

- (ComItextpdfTextTabStop *)getTabStop;

+ (ComItextpdfTextTabStop *)getTabStopWithComItextpdfTextPdfPdfChunk:(ComItextpdfTextPdfPdfChunk *)tab
                                                           withFloat:(jfloat)tabPosition;

- (jfloat)height;

- (jboolean)isAttributeWithNSString:(NSString *)name;

- (jboolean)isExtSplitCharacterWithInt:(jint)start
                               withInt:(jint)current
                               withInt:(jint)end
                         withCharArray:(IOSCharArray *)cc
   withComItextpdfTextPdfPdfChunkArray:(IOSObjectArray *)ck;

- (jboolean)isHorizontalSeparator;

- (jboolean)isImage;

- (jboolean)isSeparator;

- (jboolean)isSpecialEncoding;

- (jboolean)isStroked;

- (jboolean)isTab;

- (jint)length;

- (jint)lengthUtf32;

- (void)setImageOffsetXWithFloat:(jfloat)offsetX;

- (void)setImageOffsetYWithFloat:(jfloat)offsetY;

- (void)setTabStopWithComItextpdfTextTabStop:(ComItextpdfTextTabStop *)tabStop;

- (void)setValueWithNSString:(NSString *)value;

- (ComItextpdfTextPdfPdfChunk *)splitWithFloat:(jfloat)width;

- (NSString *)trimWithNSString:(NSString *)string;

- (ComItextpdfTextPdfPdfChunk *)truncateWithFloat:(jfloat)width;

- (jfloat)width;

- (jfloat)widthWithNSString:(NSString *)str;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfChunk)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, value_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, encoding_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, font__, ComItextpdfTextPdfPdfFont *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, baseFont_, ComItextpdfTextPdfBaseFont *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, splitCharacter_, id<ComItextpdfTextSplitCharacter>)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, attributes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, noStroke_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, image_, ComItextpdfTextImage *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfChunk, accessibleElement_, id<ComItextpdfTextPdfInterfacesIAccessibleElement>)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfChunk, UNDERLINE_THICKNESS, jfloat)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfChunk, UNDERLINE_OFFSET, jfloat)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfChunk_initWithNSString_withComItextpdfTextPdfPdfChunk_(ComItextpdfTextPdfPdfChunk *self, NSString *string, ComItextpdfTextPdfPdfChunk *other);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfChunk *new_ComItextpdfTextPdfPdfChunk_initWithNSString_withComItextpdfTextPdfPdfChunk_(NSString *string, ComItextpdfTextPdfPdfChunk *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfChunk_initWithComItextpdfTextChunk_withComItextpdfTextPdfPdfAction_(ComItextpdfTextPdfPdfChunk *self, ComItextpdfTextChunk *chunk, ComItextpdfTextPdfPdfAction *action);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfChunk *new_ComItextpdfTextPdfPdfChunk_initWithComItextpdfTextChunk_withComItextpdfTextPdfPdfAction_(ComItextpdfTextChunk *chunk, ComItextpdfTextPdfPdfAction *action) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfChunk_initWithComItextpdfTextChunk_withComItextpdfTextPdfPdfAction_withComItextpdfTextTabSettings_(ComItextpdfTextPdfPdfChunk *self, ComItextpdfTextChunk *chunk, ComItextpdfTextPdfPdfAction *action, ComItextpdfTextTabSettings *tabSettings);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfChunk *new_ComItextpdfTextPdfPdfChunk_initWithComItextpdfTextChunk_withComItextpdfTextPdfPdfAction_withComItextpdfTextTabSettings_(ComItextpdfTextChunk *chunk, ComItextpdfTextPdfPdfAction *action, ComItextpdfTextTabSettings *tabSettings) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComItextpdfTextTabStop *ComItextpdfTextPdfPdfChunk_getTabStopWithComItextpdfTextPdfPdfChunk_withFloat_(ComItextpdfTextPdfPdfChunk *tab, jfloat tabPosition);

FOUNDATION_EXPORT jboolean ComItextpdfTextPdfPdfChunk_noPrintWithInt_(jint c);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfChunk)

#endif // _ComItextpdfTextPdfPdfChunk_H_

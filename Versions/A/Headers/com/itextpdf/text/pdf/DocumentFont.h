//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/DocumentFont.java
//

#ifndef _ComItextpdfTextPdfDocumentFont_H_
#define _ComItextpdfTextPdfDocumentFont_H_

@class ComItextpdfTextPdfFontsCmapsCMapToUnicode;
@class ComItextpdfTextPdfIntHashtable;
@class ComItextpdfTextPdfPRIndirectReference;
@class ComItextpdfTextPdfPdfArray;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfStream;
@class ComItextpdfTextPdfPdfString;
@class ComItextpdfTextPdfPdfWriter;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;

#import "JreEmulation.h"
#include "com/itextpdf/text/pdf/BaseFont.h"

@interface ComItextpdfTextPdfDocumentFont : ComItextpdfTextPdfBaseFont {
 @public
  JavaUtilHashMap *metrics_;
  NSString *fontName_;
  ComItextpdfTextPdfPRIndirectReference *refFont_;
  ComItextpdfTextPdfPdfDictionary *font_;
  ComItextpdfTextPdfIntHashtable *uni2byte_;
  ComItextpdfTextPdfIntHashtable *byte2uni_;
  ComItextpdfTextPdfIntHashtable *diffmap_;
  jfloat ascender_;
  jfloat capHeight_;
  jfloat descender_;
  jfloat italicAngle_;
  jfloat fontWeight_;
  jfloat llx_;
  jfloat lly_;
  jfloat urx_;
  jfloat ury_;
  jboolean isType0_;
  jint defaultWidth_;
  ComItextpdfTextPdfIntHashtable *hMetrics_;
  NSString *cjkEncoding_;
  NSString *uniMap_;
  ComItextpdfTextPdfBaseFont *cjkMirror_;
}

- (instancetype)initWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)font;

- (instancetype)initWithComItextpdfTextPdfPRIndirectReference:(ComItextpdfTextPdfPRIndirectReference *)refFont;

- (ComItextpdfTextPdfPdfDictionary *)getFontDictionary;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (void)processType0WithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)font;

- (ComItextpdfTextPdfIntHashtable *)readWidthsWithComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)ws;

- (NSString *)decodeStringWithComItextpdfTextPdfPdfString:(ComItextpdfTextPdfPdfString *)ps;

- (void)fillMetricsWithByteArray:(IOSByteArray *)touni
withComItextpdfTextPdfIntHashtable:(ComItextpdfTextPdfIntHashtable *)widths
                         withInt:(jint)dw;

- (void)doType1TT;

- (ComItextpdfTextPdfFontsCmapsCMapToUnicode *)processToUnicode;

- (void)fillFontDescWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)fontDesc;

- (void)fillEncodingWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)encoding;

- (IOSObjectArray *)getFamilyFontName;

- (jfloat)getFontDescriptorWithInt:(jint)key
                         withFloat:(jfloat)fontSize;

- (IOSObjectArray *)getFullFontName;

- (IOSObjectArray *)getAllNameEntries;

- (jint)getKerningWithInt:(jint)char1
                  withInt:(jint)char2;

- (NSString *)getPostscriptFontName;

- (jint)getRawWidthWithInt:(jint)c
              withNSString:(NSString *)name;

- (jboolean)hasKernPairs;

- (void)writeFontWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
      withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                               withNSObjectArray:(IOSObjectArray *)params;

- (ComItextpdfTextPdfPdfStream *)getFullFontStream;

- (jint)getWidthWithInt:(jint)char1;

- (jint)getWidthWithNSString:(NSString *)text;

- (IOSByteArray *)convertToBytesWithNSString:(NSString *)text;

- (IOSByteArray *)convertToBytesWithInt:(jint)char1;

- (ComItextpdfTextPdfPdfIndirectReference *)getIndirectReference;

- (jboolean)charExistsWithInt:(jint)c;

- (void)setPostscriptFontNameWithNSString:(NSString *)name;

- (jboolean)setKerningWithInt:(jint)char1
                      withInt:(jint)char2
                      withInt:(jint)kern;

- (IOSIntArray *)getCharBBoxWithInt:(jint)c;

- (IOSIntArray *)getRawCharBBoxWithInt:(jint)c
                          withNSString:(NSString *)name;

- (jboolean)isVertical;

- (ComItextpdfTextPdfIntHashtable *)getUni2Byte;

- (ComItextpdfTextPdfIntHashtable *)getByte2Uni;

- (ComItextpdfTextPdfIntHashtable *)getDiffmap;

- (jboolean)isSymbolic;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfDocumentFont *)other;

@end

FOUNDATION_EXPORT BOOL ComItextpdfTextPdfDocumentFont_initialized;
J2OBJC_STATIC_INIT(ComItextpdfTextPdfDocumentFont)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, metrics_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, fontName_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, refFont_, ComItextpdfTextPdfPRIndirectReference *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, font_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, uni2byte_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, byte2uni_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, diffmap_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, hMetrics_, ComItextpdfTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, cjkEncoding_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, uniMap_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfDocumentFont, cjkMirror_, ComItextpdfTextPdfBaseFont *)

FOUNDATION_EXPORT IOSIntArray *ComItextpdfTextPdfDocumentFont_stdEnc_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfDocumentFont, stdEnc_, IOSIntArray *)

#endif // _ComItextpdfTextPdfDocumentFont_H_

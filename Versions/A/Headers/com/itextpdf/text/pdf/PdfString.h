//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfString.java
//

#ifndef _ComItextpdfTextPdfPdfString_H_
#define _ComItextpdfTextPdfPdfString_H_

@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfWriter;
@class IOSByteArray;
@class JavaIoOutputStream;

#import "JreEmulation.h"
#include "com/itextpdf/text/pdf/PdfObject.h"

@interface ComItextpdfTextPdfPdfString : ComItextpdfTextPdfPdfObject {
 @public
  NSString *value_;
  NSString *originalValue_;
  NSString *encoding_;
  jint objNum_;
  jint objGen_;
  jboolean hexWriting_;
}

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)value;

- (instancetype)initWithNSString:(NSString *)value
                    withNSString:(NSString *)encoding;

- (instancetype)initWithByteArray:(IOSByteArray *)bytes;

- (void)toPdfWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                      withJavaIoOutputStream:(JavaIoOutputStream *)os;

- (NSString *)description;

- (IOSByteArray *)getBytes;

- (NSString *)toUnicodeString;

- (NSString *)getEncoding;

- (void)setObjNumWithInt:(jint)objNum
                 withInt:(jint)objGen;

- (void)decryptWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (IOSByteArray *)getOriginalBytes;

- (ComItextpdfTextPdfPdfString *)setHexWritingWithBoolean:(jboolean)hexWriting;

- (jboolean)isHexWriting;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfString *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfPdfString_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfString, value_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfString, originalValue_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfString, encoding_, NSString *)

#endif // _ComItextpdfTextPdfPdfString_H_

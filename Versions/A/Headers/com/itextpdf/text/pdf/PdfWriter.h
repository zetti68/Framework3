//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfWriter.java
//

#ifndef _ComItextpdfTextPdfPdfWriter_H_
#define _ComItextpdfTextPdfPdfWriter_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/DocWriter.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/interfaces/PdfAnnotations.h"
#include "com/itextpdf/text/pdf/interfaces/PdfDocumentActions.h"
#include "com/itextpdf/text/pdf/interfaces/PdfEncryptionSettings.h"
#include "com/itextpdf/text/pdf/interfaces/PdfPageActions.h"
#include "com/itextpdf/text/pdf/interfaces/PdfRunDirection.h"
#include "com/itextpdf/text/pdf/interfaces/PdfVersion.h"
#include "com/itextpdf/text/pdf/interfaces/PdfViewerPreferences.h"
#include "java/lang/Comparable.h"

@class ComItextpdfTextBaseColor;
@class ComItextpdfTextDocument;
@class ComItextpdfTextImage;
@class ComItextpdfTextPdfBaseFont;
@class ComItextpdfTextPdfByteBuffer;
@class ComItextpdfTextPdfCollectionPdfCollection;
@class ComItextpdfTextPdfColorDetails;
@class ComItextpdfTextPdfFontDetails;
@class ComItextpdfTextPdfICC_Profile;
@class ComItextpdfTextPdfInternalPdfVersionImp;
@class ComItextpdfTextPdfOutputStreamCounter;
@class ComItextpdfTextPdfPdfAcroForm;
@class ComItextpdfTextPdfPdfAction;
@class ComItextpdfTextPdfPdfAnnotation;
@class ComItextpdfTextPdfPdfArray;
@class ComItextpdfTextPdfPdfContentByte;
@class ComItextpdfTextPdfPdfContents;
@class ComItextpdfTextPdfPdfDestination;
@class ComItextpdfTextPdfPdfDeveloperExtension;
@class ComItextpdfTextPdfPdfDocument;
@class ComItextpdfTextPdfPdfEncryption;
@class ComItextpdfTextPdfPdfFileSpecification;
@class ComItextpdfTextPdfPdfFormField;
@class ComItextpdfTextPdfPdfICCBased;
@class ComItextpdfTextPdfPdfImage;
@class ComItextpdfTextPdfPdfImportedPage;
@class ComItextpdfTextPdfPdfIndirectObject;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfLayer;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfOCProperties;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfOutline;
@class ComItextpdfTextPdfPdfPage;
@class ComItextpdfTextPdfPdfPageLabels;
@class ComItextpdfTextPdfPdfPages;
@class ComItextpdfTextPdfPdfPatternPainter;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfReaderInstance;
@class ComItextpdfTextPdfPdfShading;
@class ComItextpdfTextPdfPdfShadingPattern;
@class ComItextpdfTextPdfPdfSpotColor;
@class ComItextpdfTextPdfPdfStructureTreeRoot;
@class ComItextpdfTextPdfPdfTemplate;
@class ComItextpdfTextPdfPdfTransition;
@class ComItextpdfTextPdfPdfWriter_PdfBody;
@class ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference;
@class ComItextpdfTextPdfRandomAccessFileOrArray;
@class ComItextpdfTextPdfTtfUnicodeWriter;
@class ComItextpdfTextRectangle;
@class ComItextpdfTextXmlXmpXmpWriter;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaIoByteArrayOutputStream;
@class JavaIoOutputStream;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@class JavaUtilLinkedHashMap;
@class JavaUtilTreeMap;
@class JavaUtilTreeSet;
@protocol ComItextpdfTextDocListener;
@protocol ComItextpdfTextLogCounter;
@protocol ComItextpdfTextPdfInterfacesIAccessibleElement;
@protocol ComItextpdfTextPdfInterfacesPdfIsoConformance;
@protocol ComItextpdfTextPdfPdfOCG;
@protocol ComItextpdfTextPdfPdfPageEvent;
@protocol JavaUtilList;
@protocol JavaUtilMap;

#define ComItextpdfTextPdfPdfWriter_GENERATION_MAX 65535
#define ComItextpdfTextPdfPdfWriter_VERSION_1_2 '2'
#define ComItextpdfTextPdfPdfWriter_VERSION_1_3 '3'
#define ComItextpdfTextPdfPdfWriter_VERSION_1_4 '4'
#define ComItextpdfTextPdfPdfWriter_VERSION_1_5 '5'
#define ComItextpdfTextPdfPdfWriter_VERSION_1_6 '6'
#define ComItextpdfTextPdfPdfWriter_VERSION_1_7 '7'
#define ComItextpdfTextPdfPdfWriter_PageLayoutSinglePage 1
#define ComItextpdfTextPdfPdfWriter_PageLayoutOneColumn 2
#define ComItextpdfTextPdfPdfWriter_PageLayoutTwoColumnLeft 4
#define ComItextpdfTextPdfPdfWriter_PageLayoutTwoColumnRight 8
#define ComItextpdfTextPdfPdfWriter_PageLayoutTwoPageLeft 16
#define ComItextpdfTextPdfPdfWriter_PageLayoutTwoPageRight 32
#define ComItextpdfTextPdfPdfWriter_PageModeUseNone 64
#define ComItextpdfTextPdfPdfWriter_PageModeUseOutlines 128
#define ComItextpdfTextPdfPdfWriter_PageModeUseThumbs 256
#define ComItextpdfTextPdfPdfWriter_PageModeFullScreen 512
#define ComItextpdfTextPdfPdfWriter_PageModeUseOC 1024
#define ComItextpdfTextPdfPdfWriter_PageModeUseAttachments 2048
#define ComItextpdfTextPdfPdfWriter_HideToolbar 4096
#define ComItextpdfTextPdfPdfWriter_HideMenubar 8192
#define ComItextpdfTextPdfPdfWriter_HideWindowUI 16384
#define ComItextpdfTextPdfPdfWriter_FitWindow 32768
#define ComItextpdfTextPdfPdfWriter_CenterWindow 65536
#define ComItextpdfTextPdfPdfWriter_DisplayDocTitle 131072
#define ComItextpdfTextPdfPdfWriter_NonFullScreenPageModeUseNone 262144
#define ComItextpdfTextPdfPdfWriter_NonFullScreenPageModeUseOutlines 524288
#define ComItextpdfTextPdfPdfWriter_NonFullScreenPageModeUseThumbs 1048576
#define ComItextpdfTextPdfPdfWriter_NonFullScreenPageModeUseOC 2097152
#define ComItextpdfTextPdfPdfWriter_DirectionL2R 4194304
#define ComItextpdfTextPdfPdfWriter_DirectionR2L 8388608
#define ComItextpdfTextPdfPdfWriter_PrintScalingNone 16777216
#define ComItextpdfTextPdfPdfWriter_SIGNATURE_EXISTS 1
#define ComItextpdfTextPdfPdfWriter_SIGNATURE_APPEND_ONLY 2
#define ComItextpdfTextPdfPdfWriter_PDFXNONE 0
#define ComItextpdfTextPdfPdfWriter_PDFX1A2001 1
#define ComItextpdfTextPdfPdfWriter_PDFX32002 2
#define ComItextpdfTextPdfPdfWriter_STANDARD_ENCRYPTION_40 0
#define ComItextpdfTextPdfPdfWriter_STANDARD_ENCRYPTION_128 1
#define ComItextpdfTextPdfPdfWriter_ENCRYPTION_AES_128 2
#define ComItextpdfTextPdfPdfWriter_ENCRYPTION_AES_256 3
#define ComItextpdfTextPdfPdfWriter_ENCRYPTION_MASK 7
#define ComItextpdfTextPdfPdfWriter_DO_NOT_ENCRYPT_METADATA 8
#define ComItextpdfTextPdfPdfWriter_EMBEDDED_FILES_ONLY 24
#define ComItextpdfTextPdfPdfWriter_ALLOW_PRINTING 2052
#define ComItextpdfTextPdfPdfWriter_ALLOW_MODIFY_CONTENTS 8
#define ComItextpdfTextPdfPdfWriter_ALLOW_COPY 16
#define ComItextpdfTextPdfPdfWriter_ALLOW_MODIFY_ANNOTATIONS 32
#define ComItextpdfTextPdfPdfWriter_ALLOW_FILL_IN 256
#define ComItextpdfTextPdfPdfWriter_ALLOW_SCREENREADERS 512
#define ComItextpdfTextPdfPdfWriter_ALLOW_ASSEMBLY 1024
#define ComItextpdfTextPdfPdfWriter_ALLOW_DEGRADED_PRINTING 4
#define ComItextpdfTextPdfPdfWriter_AllowPrinting 2052
#define ComItextpdfTextPdfPdfWriter_AllowModifyContents 8
#define ComItextpdfTextPdfPdfWriter_AllowCopy 16
#define ComItextpdfTextPdfPdfWriter_AllowModifyAnnotations 32
#define ComItextpdfTextPdfPdfWriter_AllowFillIn 256
#define ComItextpdfTextPdfPdfWriter_AllowScreenReaders 512
#define ComItextpdfTextPdfPdfWriter_AllowAssembly 1024
#define ComItextpdfTextPdfPdfWriter_AllowDegradedPrinting 4
#define ComItextpdfTextPdfPdfWriter_STRENGTH40BITS NO
#define ComItextpdfTextPdfPdfWriter_STRENGTH128BITS YES
#define ComItextpdfTextPdfPdfWriter_markAll 0
#define ComItextpdfTextPdfPdfWriter_markInlineElementsOnly 1
#define ComItextpdfTextPdfPdfWriter_SPACE_CHAR_RATIO_DEFAULT 2.5f
#define ComItextpdfTextPdfPdfWriter_NO_SPACE_CHAR_RATIO 1.0E7f
#define ComItextpdfTextPdfPdfWriter_RUN_DIRECTION_DEFAULT 0
#define ComItextpdfTextPdfPdfWriter_RUN_DIRECTION_NO_BIDI 1
#define ComItextpdfTextPdfPdfWriter_RUN_DIRECTION_LTR 2
#define ComItextpdfTextPdfPdfWriter_RUN_DIRECTION_RTL 3

@interface ComItextpdfTextPdfPdfWriter : ComItextpdfTextDocWriter < ComItextpdfTextPdfInterfacesPdfViewerPreferences, ComItextpdfTextPdfInterfacesPdfEncryptionSettings, ComItextpdfTextPdfInterfacesPdfVersion, ComItextpdfTextPdfInterfacesPdfDocumentActions, ComItextpdfTextPdfInterfacesPdfPageActions, ComItextpdfTextPdfInterfacesPdfRunDirection, ComItextpdfTextPdfInterfacesPdfAnnotations > {
 @public
  ComItextpdfTextPdfPdfDocument *pdf_;
  ComItextpdfTextPdfPdfContentByte *directContent_;
  ComItextpdfTextPdfPdfContentByte *directContentUnder_;
  ComItextpdfTextPdfPdfWriter_PdfBody *body_;
  ComItextpdfTextPdfICC_Profile *colorProfile_;
  ComItextpdfTextPdfPdfDictionary *extraCatalog_;
  ComItextpdfTextPdfPdfPages *root_;
  JavaUtilArrayList *pageReferences_;
  jint currentPageNumber_;
  ComItextpdfTextPdfPdfName *tabs_;
  ComItextpdfTextPdfPdfDictionary *pageDictEntries_;
  jlong prevxref_;
  IOSByteArray *originalFileID_;
  id<JavaUtilList> newBookmarks_;
  ComItextpdfTextPdfInternalPdfVersionImp *pdf_version_;
  IOSByteArray *xmpMetadata_;
  ComItextpdfTextXmlXmpXmpWriter *xmpWriter_;
  id<ComItextpdfTextPdfInterfacesPdfIsoConformance> pdfIsoConformance_;
  ComItextpdfTextPdfPdfEncryption *crypto_;
  jboolean fullCompression_;
  jint compressionLevel_;
  JavaUtilLinkedHashMap *documentFonts_;
  jint fontNumber_;
  JavaUtilHashMap *formXObjects_;
  jint formXObjectsCounter_;
  JavaUtilHashMap *readerInstances_;
  ComItextpdfTextPdfPdfReaderInstance *currentPdfReaderInstance_;
  JavaUtilHashMap *documentColors_;
  jint colorNumber_;
  JavaUtilHashMap *documentPatterns_;
  jint patternNumber_;
  JavaUtilHashSet *documentShadingPatterns_;
  JavaUtilHashSet *documentShadings_;
  JavaUtilHashMap *documentExtGState_;
  JavaUtilHashMap *documentProperties_;
  jboolean tagged_;
  jint taggingMode_;
  ComItextpdfTextPdfPdfStructureTreeRoot *structureTreeRoot_;
  JavaUtilHashSet *documentOCG_;
  JavaUtilArrayList *documentOCGorder_;
  ComItextpdfTextPdfPdfOCProperties *OCProperties_;
  ComItextpdfTextPdfPdfArray *OCGRadioGroup_;
  ComItextpdfTextPdfPdfArray *OCGLocked_;
  ComItextpdfTextPdfPdfDictionary *group_;
  jint runDirection_;
  ComItextpdfTextPdfPdfDictionary *defaultColorspace_;
  JavaUtilHashMap *documentSpotPatterns_;
  ComItextpdfTextPdfColorDetails *patternColorspaceRGB_;
  ComItextpdfTextPdfColorDetails *patternColorspaceGRAY_;
  ComItextpdfTextPdfColorDetails *patternColorspaceCMYK_;
  ComItextpdfTextPdfPdfDictionary *imageDictionary_;
  JavaUtilHashMap *JBIG2Globals_;
  ComItextpdfTextPdfTtfUnicodeWriter *ttfUnicodeWriter_;
}

#pragma mark Public

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot;

- (void)addCalculationOrderWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)annot;

- (void)addDeveloperExtensionWithComItextpdfTextPdfPdfDeveloperExtension:(ComItextpdfTextPdfPdfDeveloperExtension *)de;

- (ComItextpdfTextPdfPdfName *)addDirectImageSimpleWithComItextpdfTextImage:(ComItextpdfTextImage *)image;

- (ComItextpdfTextPdfPdfName *)addDirectImageSimpleWithComItextpdfTextImage:(ComItextpdfTextImage *)image
                                 withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)fixedRef;

- (void)addFileAttachmentWithComItextpdfTextPdfPdfFileSpecification:(ComItextpdfTextPdfPdfFileSpecification *)fs;

- (void)addFileAttachmentWithNSString:(NSString *)description_
                        withByteArray:(IOSByteArray *)fileStore
                         withNSString:(NSString *)file
                         withNSString:(NSString *)fileDisplay;

- (void)addFileAttachmentWithNSString:(NSString *)description_
withComItextpdfTextPdfPdfFileSpecification:(ComItextpdfTextPdfPdfFileSpecification *)fs;

- (void)addJavaScriptWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)js;

- (void)addJavaScriptWithNSString:(NSString *)code;

- (void)addJavaScriptWithNSString:(NSString *)code
                      withBoolean:(jboolean)unicode;

- (void)addJavaScriptWithNSString:(NSString *)name
  withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)js;

- (void)addJavaScriptWithNSString:(NSString *)name
                     withNSString:(NSString *)code;

- (void)addJavaScriptWithNSString:(NSString *)name
                     withNSString:(NSString *)code
                      withBoolean:(jboolean)unicode;

- (void)addNamedDestinationWithNSString:(NSString *)name
                                withInt:(jint)page
   withComItextpdfTextPdfPdfDestination:(ComItextpdfTextPdfPdfDestination *)dest;

- (void)addNamedDestinationsWithJavaUtilMap:(id<JavaUtilMap>)map
                                    withInt:(jint)page_offset;

- (void)addOCGRadioGroupWithJavaUtilArrayList:(JavaUtilArrayList *)group;

- (void)addPageDictEntryWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                      withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                                                      withBoolean:(jboolean)inObjStm;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                                                          withInt:(jint)refNumber;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                                                          withInt:(jint)refNumber
                                                                      withBoolean:(jboolean)inObjStm;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                       withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref;

- (ComItextpdfTextPdfPdfIndirectObject *)addToBodyWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                       withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                                                                      withBoolean:(jboolean)inObjStm;

- (void)addViewerPreferenceWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                         withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (void)checkElementRoleWithComItextpdfTextPdfInterfacesIAccessibleElement:(id<ComItextpdfTextPdfInterfacesIAccessibleElement>)element
                        withComItextpdfTextPdfInterfacesIAccessibleElement:(id<ComItextpdfTextPdfInterfacesIAccessibleElement>)parent;

- (void)checkPdfIsoConformanceWithInt:(jint)key
                               withId:(id)obj1;

+ (void)checkPdfIsoConformanceWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                      withInt:(jint)key
                                                       withId:(id)obj1;

- (void)clearTextWrap;

- (void)close;

- (void)createXmpMetadata;

- (void)freeReaderWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (ComItextpdfTextPdfPdfAcroForm *)getAcroForm;

- (ComItextpdfTextRectangle *)getBoxSizeWithNSString:(NSString *)boxName;

- (ComItextpdfTextRectangle *)getBoxSizeWithNSString:(NSString *)boxName
                        withComItextpdfTextRectangle:(ComItextpdfTextRectangle *)intersectingRectangle;

- (ComItextpdfTextPdfICC_Profile *)getColorProfile;

- (jint)getCompressionLevel;

- (jlong)getCurrentDocumentSize;

- (jint)getCurrentPageNumber;

- (ComItextpdfTextPdfPdfDictionary *)getDefaultColorspace;

- (ComItextpdfTextPdfPdfContentByte *)getDirectContent;

- (ComItextpdfTextPdfPdfContentByte *)getDirectContentUnder;

- (ComItextpdfTextPdfPdfDictionary *)getExtraCatalog;

- (ComItextpdfTextPdfPdfDictionary *)getGroup;

- (ComItextpdfTextPdfPdfImportedPage *)getImportedPageWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                                              withInt:(jint)pageNumber;

- (ComItextpdfTextPdfPdfDictionary *)getInfo;

+ (ComItextpdfTextPdfPdfWriter *)getInstanceWithComItextpdfTextDocument:(ComItextpdfTextDocument *)document
                                                 withJavaIoOutputStream:(JavaIoOutputStream *)os;

+ (ComItextpdfTextPdfPdfWriter *)getInstanceWithComItextpdfTextDocument:(ComItextpdfTextDocument *)document
                                                 withJavaIoOutputStream:(JavaIoOutputStream *)os
                                         withComItextpdfTextDocListener:(id<ComItextpdfTextDocListener>)listener;

- (ComItextpdfTextPdfPdfOCProperties *)getOCProperties;

- (ComItextpdfTextPdfOutputStreamCounter *)getOs;

- (ComItextpdfTextPdfPdfDictionary *)getPageDictEntries;

- (id<ComItextpdfTextPdfPdfPageEvent>)getPageEvent;

- (jint)getPageNumber;

- (ComItextpdfTextPdfPdfIndirectReference *)getPageReferenceWithInt:(jint)page;

- (ComItextpdfTextRectangle *)getPageSize;

- (ComItextpdfTextPdfPdfIndirectReference *)getPdfIndirectReference;

- (jint)getPDFXConformance;

- (ComItextpdfTextPdfPdfOutline *)getRootOutline;

- (jint)getRunDirection;

- (jfloat)getSpaceCharRatio;

- (id<JavaUtilList>)getStandardStructElems;

- (ComItextpdfTextPdfPdfStructureTreeRoot *)getStructureTreeRoot;

- (ComItextpdfTextPdfPdfName *)getTabs;

- (jfloat)getVerticalPositionWithBoolean:(jboolean)ensureNewLine;

- (ComItextpdfTextXmlXmpXmpWriter *)getXmpWriter;

- (jboolean)isFullCompression;

- (jboolean)isPageEmpty;

- (jboolean)isPdfIso;

- (jboolean)isPdfX;

- (jboolean)isRgbTransparencyBlending;

- (jboolean)isStrictImageSequence;

- (jboolean)isTagged;

- (jboolean)isUserProperties;

- (void)lockLayerWithComItextpdfTextPdfPdfLayer:(ComItextpdfTextPdfPdfLayer *)layer;

- (jboolean)needToBeMarkedInContentWithComItextpdfTextPdfInterfacesIAccessibleElement:(id<ComItextpdfTextPdfInterfacesIAccessibleElement>)element;

- (void)open;

- (void)releaseTemplateWithComItextpdfTextPdfPdfTemplate:(ComItextpdfTextPdfPdfTemplate *)tp;

- (jint)reorderPagesWithIntArray:(IOSIntArray *)order;

- (void)resetPageDictEntries;

- (void)setAdditionalActionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)actionType
                         withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setAtLeastPdfVersionWithChar:(jchar)version_;

- (void)setBoxSizeWithNSString:(NSString *)boxName
  withComItextpdfTextRectangle:(ComItextpdfTextRectangle *)size;

- (void)setCollectionWithComItextpdfTextPdfCollectionPdfCollection:(ComItextpdfTextPdfCollectionPdfCollection *)collection;

- (void)setCompressionLevelWithInt:(jint)compressionLevel;

- (void)setCropBoxSizeWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)crop;

- (void)setDefaultColorspaceWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                          withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)cs;

- (void)setDurationWithInt:(jint)seconds;

- (void)setEncryptionWithBoolean:(jboolean)strength
                    withNSString:(NSString *)userPassword
                    withNSString:(NSString *)ownerPassword
                         withInt:(jint)permissions;

- (void)setEncryptionWithByteArray:(IOSByteArray *)userPassword
                     withByteArray:(IOSByteArray *)ownerPassword
                           withInt:(jint)permissions
                       withBoolean:(jboolean)strength128Bits;

- (void)setEncryptionWithByteArray:(IOSByteArray *)userPassword
                     withByteArray:(IOSByteArray *)ownerPassword
                           withInt:(jint)permissions
                           withInt:(jint)encryptionType;

- (void)setEncryptionWithJavaSecurityCertCertificateArray:(IOSObjectArray *)certs
                                             withIntArray:(IOSIntArray *)permissions
                                                  withInt:(jint)encryptionType;

- (void)setEncryptionWithInt:(jint)encryptionType
                withNSString:(NSString *)userPassword
                withNSString:(NSString *)ownerPassword
                     withInt:(jint)permissions;

- (void)setFullCompression;

- (void)setGroupWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)group;

- (void)setInitialLeadingWithFloat:(jfloat)leading;

- (void)setLanguageWithNSString:(NSString *)language;

- (void)setLinearPageMode;

- (void)setOpenActionWithComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setOpenActionWithNSString:(NSString *)name;

- (void)setOutlinesWithJavaUtilList:(id<JavaUtilList>)outlines;

- (jboolean)setOutputIntentsWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                withBoolean:(jboolean)checkExistence;

- (void)setOutputIntentsWithNSString:(NSString *)outputConditionIdentifier
                        withNSString:(NSString *)outputCondition
                        withNSString:(NSString *)registryName
                        withNSString:(NSString *)info
                       withByteArray:(IOSByteArray *)destOutputProfile;

- (void)setOutputIntentsWithNSString:(NSString *)outputConditionIdentifier
                        withNSString:(NSString *)outputCondition
                        withNSString:(NSString *)registryName
                        withNSString:(NSString *)info
   withComItextpdfTextPdfICC_Profile:(ComItextpdfTextPdfICC_Profile *)colorProfile;

- (void)setPageActionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)actionType
                   withComItextpdfTextPdfPdfAction:(ComItextpdfTextPdfPdfAction *)action;

- (void)setPageEmptyWithBoolean:(jboolean)pageEmpty;

- (void)setPageEventWithComItextpdfTextPdfPdfPageEvent:(id<ComItextpdfTextPdfPdfPageEvent>)event;

- (void)setPageLabelsWithComItextpdfTextPdfPdfPageLabels:(ComItextpdfTextPdfPdfPageLabels *)pageLabels;

- (void)setPageViewportWithComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)vp;

- (void)setPageXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata;

- (void)setPdfVersionWithChar:(jchar)version_;

- (void)setPdfVersionWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)version_;

- (void)setPDFXConformanceWithInt:(jint)pdfx;

- (void)setRgbTransparencyBlendingWithBoolean:(jboolean)rgbTransparencyBlending;

- (void)setRunDirectionWithInt:(jint)runDirection;

- (void)setSigFlagsWithInt:(jint)f;

- (void)setSpaceCharRatioWithFloat:(jfloat)spaceCharRatio;

- (void)setStrictImageSequenceWithBoolean:(jboolean)strictImageSequence;

- (void)setTabsWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)tabs;

- (void)setTagged;

- (void)setTaggedWithInt:(jint)taggingMode;

- (void)setThumbnailWithComItextpdfTextImage:(ComItextpdfTextImage *)image;

- (void)setTransitionWithComItextpdfTextPdfPdfTransition:(ComItextpdfTextPdfPdfTransition *)transition;

- (void)setUserPropertiesWithBoolean:(jboolean)userProperties;

- (void)setUserunitWithFloat:(jfloat)userunit;

- (void)setViewerPreferencesWithInt:(jint)preferences;

- (void)setXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithComItextpdfTextPdfPdfDocument:(ComItextpdfTextPdfPdfDocument *)document
                               withJavaIoOutputStream:(JavaIoOutputStream *)os;

- (ComItextpdfTextPdfPdfIndirectReference *)addWithComItextpdfTextPdfPdfICCBased:(ComItextpdfTextPdfPdfICCBased *)icc;

- (void)addSharedObjectsToBody;

- (void)addXFormsToBody;

- (void)buildStructTreeRootForTaggedWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)catalog;

- (ComItextpdfTextXmlXmpXmpWriter *)createXmpWriterWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)baos
                                                               withJavaUtilHashMap:(JavaUtilHashMap *)info;

- (ComItextpdfTextXmlXmpXmpWriter *)createXmpWriterWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)baos
                                               withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)info;

- (void)fillOCPropertiesWithBoolean:(jboolean)erase;

- (void)flushAcroFields;

- (void)flushTaggedObjects;

- (ComItextpdfTextPdfPdfDictionary *)getCatalogWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)rootObj;

- (id<ComItextpdfTextLogCounter>)getCounter;

- (jint)getIndirectReferenceNumber;

- (jint)getNewObjectNumberWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                  withInt:(jint)number
                                                  withInt:(jint)generation;

- (ComItextpdfTextPdfPdfReaderInstance *)getPdfReaderInstanceWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (ComItextpdfTextPdfPdfIndirectReference *)getReferenceJBIG2GlobalsWithByteArray:(IOSByteArray *)content;

- (ComItextpdfTextPdfTtfUnicodeWriter *)getTtfUnicodeWriter;

- (id<ComItextpdfTextPdfInterfacesPdfIsoConformance>)initPdfIsoConformance OBJC_METHOD_FAMILY_NONE;

+ (void)writeKeyInfoWithJavaIoOutputStream:(JavaIoOutputStream *)os;

- (void)writeOutlinesWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)catalog
                                             withBoolean:(jboolean)namedAsNames;

#pragma mark Package-Private

- (ComItextpdfTextPdfPdfIndirectReference *)addWithComItextpdfTextPdfPdfImage:(ComItextpdfTextPdfPdfImage *)pdfImage
                                   withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)fixedRef;

- (ComItextpdfTextPdfPdfIndirectReference *)addWithComItextpdfTextPdfPdfPage:(ComItextpdfTextPdfPdfPage *)page
                                           withComItextpdfTextPdfPdfContents:(ComItextpdfTextPdfPdfContents *)contents;

- (void)addAnnotationWithComItextpdfTextPdfPdfAnnotation:(ComItextpdfTextPdfPdfAnnotation *)annot
                                                 withInt:(jint)page;

- (ComItextpdfTextPdfPdfName *)addDirectTemplateSimpleWithComItextpdfTextPdfPdfTemplate:(ComItextpdfTextPdfPdfTemplate *)template_
                                                          withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)forcedName;

- (void)addLocalDestinationsWithJavaUtilTreeMap:(JavaUtilTreeMap *)desto;

- (ComItextpdfTextPdfFontDetails *)addSimpleWithComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)bf;

- (ComItextpdfTextPdfColorDetails *)addSimpleWithComItextpdfTextPdfPdfSpotColor:(ComItextpdfTextPdfPdfSpotColor *)spc;

- (IOSObjectArray *)addSimpleExtGStateWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)gstate;

- (ComItextpdfTextPdfPdfName *)addSimplePatternWithComItextpdfTextPdfPdfPatternPainter:(ComItextpdfTextPdfPdfPatternPainter *)painter;

- (ComItextpdfTextPdfColorDetails *)addSimplePatternColorspaceWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color;

- (IOSObjectArray *)addSimplePropertyWithId:(id)prop
 withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)refi;

- (void)addSimpleShadingWithComItextpdfTextPdfPdfShading:(ComItextpdfTextPdfPdfShading *)shading;

- (void)addSimpleShadingPatternWithComItextpdfTextPdfPdfShadingPattern:(ComItextpdfTextPdfPdfShadingPattern *)shading;

- (void)eliminateFontSubsetWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)fonts;

- (ComItextpdfTextPdfPdfName *)getColorspaceName;

- (ComItextpdfTextPdfPdfIndirectReference *)getCurrentPage;

- (ComItextpdfTextPdfPdfEncryption *)getEncryption;

- (ComItextpdfTextPdfPdfIndirectReference *)getImageReferenceWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)name;

- (ComItextpdfTextPdfPdfDocument *)getPdfDocument;

- (ComItextpdfTextPdfInternalPdfVersionImp *)getPdfVersion;

- (ComItextpdfTextPdfRandomAccessFileOrArray *)getReaderFileWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (jboolean)propertyExistsWithId:(id)prop;

- (void)registerLayerWithComItextpdfTextPdfPdfOCG:(id<ComItextpdfTextPdfPdfOCG>)layer;

- (void)resetContent;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfPdfWriter)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, pdf_, ComItextpdfTextPdfPdfDocument *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, directContent_, ComItextpdfTextPdfPdfContentByte *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, directContentUnder_, ComItextpdfTextPdfPdfContentByte *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, body_, ComItextpdfTextPdfPdfWriter_PdfBody *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, colorProfile_, ComItextpdfTextPdfICC_Profile *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, extraCatalog_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, root_, ComItextpdfTextPdfPdfPages *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, pageReferences_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, tabs_, ComItextpdfTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, pageDictEntries_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, originalFileID_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, newBookmarks_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, pdf_version_, ComItextpdfTextPdfInternalPdfVersionImp *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, xmpMetadata_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, xmpWriter_, ComItextpdfTextXmlXmpXmpWriter *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, pdfIsoConformance_, id<ComItextpdfTextPdfInterfacesPdfIsoConformance>)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, crypto_, ComItextpdfTextPdfPdfEncryption *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentFonts_, JavaUtilLinkedHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, formXObjects_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, readerInstances_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, currentPdfReaderInstance_, ComItextpdfTextPdfPdfReaderInstance *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentColors_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentPatterns_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentShadingPatterns_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentShadings_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentExtGState_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentProperties_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, structureTreeRoot_, ComItextpdfTextPdfPdfStructureTreeRoot *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentOCG_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentOCGorder_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, OCProperties_, ComItextpdfTextPdfPdfOCProperties *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, OCGRadioGroup_, ComItextpdfTextPdfPdfArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, OCGLocked_, ComItextpdfTextPdfPdfArray *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, group_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, defaultColorspace_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, documentSpotPatterns_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, patternColorspaceRGB_, ComItextpdfTextPdfColorDetails *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, patternColorspaceGRAY_, ComItextpdfTextPdfColorDetails *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, patternColorspaceCMYK_, ComItextpdfTextPdfColorDetails *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, imageDictionary_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, JBIG2Globals_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, ttfUnicodeWriter_, ComItextpdfTextPdfTtfUnicodeWriter *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, GENERATION_MAX, jint)

FOUNDATION_EXPORT id<ComItextpdfTextLogCounter> ComItextpdfTextPdfPdfWriter_COUNTER_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, COUNTER_, id<ComItextpdfTextLogCounter>)
J2OBJC_STATIC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter, COUNTER_, id<ComItextpdfTextLogCounter>)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, VERSION_1_2, jchar)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, VERSION_1_3, jchar)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, VERSION_1_4, jchar)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, VERSION_1_5, jchar)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, VERSION_1_6, jchar)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, VERSION_1_7, jchar)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PDF_VERSION_1_2_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDF_VERSION_1_2_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PDF_VERSION_1_3_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDF_VERSION_1_3_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PDF_VERSION_1_4_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDF_VERSION_1_4_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PDF_VERSION_1_5_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDF_VERSION_1_5_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PDF_VERSION_1_6_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDF_VERSION_1_6_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PDF_VERSION_1_7_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDF_VERSION_1_7_, ComItextpdfTextPdfPdfName *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageLayoutSinglePage, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageLayoutOneColumn, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageLayoutTwoColumnLeft, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageLayoutTwoColumnRight, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageLayoutTwoPageLeft, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageLayoutTwoPageRight, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageModeUseNone, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageModeUseOutlines, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageModeUseThumbs, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageModeFullScreen, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageModeUseOC, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PageModeUseAttachments, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, HideToolbar, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, HideMenubar, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, HideWindowUI, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, FitWindow, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, CenterWindow, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, DisplayDocTitle, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, NonFullScreenPageModeUseNone, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, NonFullScreenPageModeUseOutlines, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, NonFullScreenPageModeUseThumbs, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, NonFullScreenPageModeUseOC, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, DirectionL2R, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, DirectionR2L, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PrintScalingNone, jint)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_DOCUMENT_CLOSE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, DOCUMENT_CLOSE_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_WILL_SAVE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, WILL_SAVE_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_DID_SAVE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, DID_SAVE_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_WILL_PRINT_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, WILL_PRINT_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_DID_PRINT_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, DID_PRINT_, ComItextpdfTextPdfPdfName *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, SIGNATURE_EXISTS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, SIGNATURE_APPEND_ONLY, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDFXNONE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDFX1A2001, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PDFX32002, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, STANDARD_ENCRYPTION_40, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, STANDARD_ENCRYPTION_128, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ENCRYPTION_AES_128, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ENCRYPTION_AES_256, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ENCRYPTION_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, DO_NOT_ENCRYPT_METADATA, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, EMBEDDED_FILES_ONLY, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_PRINTING, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_MODIFY_CONTENTS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_COPY, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_MODIFY_ANNOTATIONS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_FILL_IN, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_SCREENREADERS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_ASSEMBLY, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, ALLOW_DEGRADED_PRINTING, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowPrinting, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowModifyContents, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowCopy, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowModifyAnnotations, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowFillIn, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowScreenReaders, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowAssembly, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, AllowDegradedPrinting, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, STRENGTH40BITS, jboolean)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, STRENGTH128BITS, jboolean)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, markAll, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, markInlineElementsOnly, jint)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PAGE_OPEN_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PAGE_OPEN_, ComItextpdfTextPdfPdfName *)

FOUNDATION_EXPORT ComItextpdfTextPdfPdfName *ComItextpdfTextPdfPdfWriter_PAGE_CLOSE_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, PAGE_CLOSE_, ComItextpdfTextPdfPdfName *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, SPACE_CHAR_RATIO_DEFAULT, jfloat)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, NO_SPACE_CHAR_RATIO, jfloat)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, RUN_DIRECTION_DEFAULT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, RUN_DIRECTION_NO_BIDI, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, RUN_DIRECTION_LTR, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfPdfWriter, RUN_DIRECTION_RTL, jint)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_init(ComItextpdfTextPdfPdfWriter *self);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter *new_ComItextpdfTextPdfPdfWriter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_initWithComItextpdfTextPdfPdfDocument_withJavaIoOutputStream_(ComItextpdfTextPdfPdfWriter *self, ComItextpdfTextPdfPdfDocument *document, JavaIoOutputStream *os);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter *new_ComItextpdfTextPdfPdfWriter_initWithComItextpdfTextPdfPdfDocument_withJavaIoOutputStream_(ComItextpdfTextPdfPdfDocument *document, JavaIoOutputStream *os) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter *ComItextpdfTextPdfPdfWriter_getInstanceWithComItextpdfTextDocument_withJavaIoOutputStream_(ComItextpdfTextDocument *document, JavaIoOutputStream *os);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter *ComItextpdfTextPdfPdfWriter_getInstanceWithComItextpdfTextDocument_withJavaIoOutputStream_withComItextpdfTextDocListener_(ComItextpdfTextDocument *document, JavaIoOutputStream *os, id<ComItextpdfTextDocListener> listener);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_writeKeyInfoWithJavaIoOutputStream_(JavaIoOutputStream *os);

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_checkPdfIsoConformanceWithComItextpdfTextPdfPdfWriter_withInt_withId_(ComItextpdfTextPdfPdfWriter *writer, jint key, id obj1);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfWriter)

@interface ComItextpdfTextPdfPdfWriter_PdfBody : NSObject {
 @public
  JavaUtilTreeSet *xrefs_;
  jint refnum_;
  jlong position_;
  ComItextpdfTextPdfPdfWriter *writer_;
  ComItextpdfTextPdfByteBuffer *index_;
  ComItextpdfTextPdfByteBuffer *streamObjects_;
  jint currentObjNum_;
  jint numObj_;
}

#pragma mark Public

- (void)flushObjStm;

- (ComItextpdfTextPdfPdfIndirectReference *)getPdfIndirectReference;

- (jlong)offset;

- (jint)size;

- (void)writeCrossReferenceTableWithJavaIoOutputStream:(JavaIoOutputStream *)os
            withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)root
            withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)info
            withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)encryption
                       withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)fileID
                                              withLong:(jlong)prevxref;

#pragma mark Protected

- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (ComItextpdfTextPdfPdfIndirectObject *)addWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                                                    withInt:(jint)refNumber
                                                                    withInt:(jint)generation
                                                                withBoolean:(jboolean)inObjStm;

- (ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *)addToObjStmWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)obj
                                                                                              withInt:(jint)nObj;

- (jint)getIndirectReferenceNumber;

- (void)writeWithComItextpdfTextPdfPdfIndirectObject:(ComItextpdfTextPdfPdfIndirectObject *)indirect
                                             withInt:(jint)refNumber;

- (void)writeWithComItextpdfTextPdfPdfIndirectObject:(ComItextpdfTextPdfPdfIndirectObject *)indirect
                                             withInt:(jint)refNumber
                                             withInt:(jint)generation;

#pragma mark Package-Private

- (ComItextpdfTextPdfPdfIndirectObject *)addWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object;

- (ComItextpdfTextPdfPdfIndirectObject *)addWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                                                withBoolean:(jboolean)inObjStm;

- (ComItextpdfTextPdfPdfIndirectObject *)addWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                                                    withInt:(jint)refNumber;

- (ComItextpdfTextPdfPdfIndirectObject *)addWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                 withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref;

- (ComItextpdfTextPdfPdfIndirectObject *)addWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)object
                                 withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref
                                                                withBoolean:(jboolean)inObjStm;

- (void)setRefnumWithInt:(jint)refnum;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfWriter_PdfBody)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter_PdfBody, xrefs_, JavaUtilTreeSet *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter_PdfBody, writer_, ComItextpdfTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter_PdfBody, index_, ComItextpdfTextPdfByteBuffer *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfWriter_PdfBody, streamObjects_, ComItextpdfTextPdfByteBuffer *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_PdfBody_initWithComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfPdfWriter_PdfBody *self, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter_PdfBody *new_ComItextpdfTextPdfPdfWriter_PdfBody_initWithComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfPdfWriter *writer) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfWriter_PdfBody)

@interface ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference : NSObject < JavaLangComparable >

#pragma mark Public

- (instancetype)initWithInt:(jint)type
                    withInt:(jint)refnum
                   withLong:(jlong)offset
                    withInt:(jint)generation;

- (instancetype)initWithInt:(jint)refnum
                   withLong:(jlong)offset;

- (instancetype)initWithInt:(jint)refnum
                   withLong:(jlong)offset
                    withInt:(jint)generation;

- (jint)compareToWithId:(ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *)other;

- (jboolean)isEqual:(id)obj;

- (jint)getRefnum;

- (NSUInteger)hash;

- (void)toPdfWithInt:(jint)midSize
withJavaIoOutputStream:(JavaIoOutputStream *)os;

- (void)toPdfWithJavaIoOutputStream:(JavaIoOutputStream *)os;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withLong_withInt_(ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint refnum, jlong offset, jint generation);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withLong_withInt_(jint refnum, jlong offset, jint generation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withLong_(ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint refnum, jlong offset);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withLong_(jint refnum, jlong offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withLong_withInt_(ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint type, jint refnum, jlong offset, jint generation);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withLong_withInt_(jint type, jint refnum, jlong offset, jint generation) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfWriter_PdfBody_PdfCrossReference)

@interface ComItextpdfTextPdfPdfWriter_PdfTrailer : ComItextpdfTextPdfPdfDictionary {
 @public
  jlong offset_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)size
                   withLong:(jlong)offset
withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)root
withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)info
withComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)encryption
withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)fileID
                   withLong:(jlong)prevxref;

- (void)toPdfWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                      withJavaIoOutputStream:(JavaIoOutputStream *)os;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfWriter_PdfTrailer)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfWriter_PdfTrailer_initWithInt_withLong_withComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfObject_withLong_(ComItextpdfTextPdfPdfWriter_PdfTrailer *self, jint size, jlong offset, ComItextpdfTextPdfPdfIndirectReference *root, ComItextpdfTextPdfPdfIndirectReference *info, ComItextpdfTextPdfPdfIndirectReference *encryption, ComItextpdfTextPdfPdfObject *fileID, jlong prevxref);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfWriter_PdfTrailer *new_ComItextpdfTextPdfPdfWriter_PdfTrailer_initWithInt_withLong_withComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfIndirectReference_withComItextpdfTextPdfPdfObject_withLong_(jint size, jlong offset, ComItextpdfTextPdfPdfIndirectReference *root, ComItextpdfTextPdfPdfIndirectReference *info, ComItextpdfTextPdfPdfIndirectReference *encryption, ComItextpdfTextPdfPdfObject *fileID, jlong prevxref) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfWriter_PdfTrailer)

#endif // _ComItextpdfTextPdfPdfWriter_H_

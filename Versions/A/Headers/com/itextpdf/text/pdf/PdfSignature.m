//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfSignature.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfSignature.java"

#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfDate.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfSignature.h"
#include "com/itextpdf/text/pdf/PdfString.h"
#include "com/itextpdf/text/pdf/security/PdfSignatureBuildProperties.h"


#line 54
@implementation ComItextpdfTextPdfPdfSignature


#line 57
- (instancetype)initWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)filter
                    withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)subFilter {
  if (self =
#line 58
  [super initWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SIG_()]) {
    
#line 59
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FILTER_() withComItextpdfTextPdfPdfObject:filter];
    
#line 60
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SUBFILTER_() withComItextpdfTextPdfPdfObject:subFilter];
  }
  return self;
}


#line 63
- (void)setByteRangeWithIntArray:(IOSIntArray *)range {
  
#line 64
  ComItextpdfTextPdfPdfArray *array = [[ComItextpdfTextPdfPdfArray alloc] init];
  for (jint k = 0; k < ((IOSIntArray *) nil_chk(range))->size_; ++k)
#line 66
  [array addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:IOSIntArray_Get(range, k)]];
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BYTERANGE_() withComItextpdfTextPdfPdfObject:array];
}


#line 70
- (void)setContentsWithByteArray:(IOSByteArray *)contents {
  
#line 71
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_CONTENTS_() withComItextpdfTextPdfPdfObject:[((ComItextpdfTextPdfPdfString *) [[ComItextpdfTextPdfPdfString alloc] initWithByteArray:contents]) setHexWritingWithBoolean:YES]];
}


#line 74
- (void)setCertWithByteArray:(IOSByteArray *)cert {
  
#line 75
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_CERT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithByteArray:cert]];
}


#line 78
- (void)setNameWithNSString:(NSString *)name {
  
#line 79
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_NAME_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:name withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 82
- (void)setDateWithComItextpdfTextPdfPdfDate:(ComItextpdfTextPdfPdfDate *)date {
  
#line 83
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_M_() withComItextpdfTextPdfPdfObject:date];
}


#line 86
- (void)setLocationWithNSString:(NSString *)name {
  
#line 87
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LOCATION_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:name withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 90
- (void)setReasonWithNSString:(NSString *)name {
  
#line 91
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_REASON_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:name withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}


#line 100
- (void)setSignatureCreatorWithNSString:(NSString *)name {
  
#line 101
  if (name != nil) {
    [((ComItextpdfTextPdfSecurityPdfSignatureBuildProperties *) nil_chk([self getPdfSignatureBuildProperties])) setSignatureCreatorWithNSString:name];
  }
}


#line 112
- (ComItextpdfTextPdfSecurityPdfSignatureBuildProperties *)getPdfSignatureBuildProperties {
  
#line 113
  ComItextpdfTextPdfSecurityPdfSignatureBuildProperties *buildPropDic = (ComItextpdfTextPdfSecurityPdfSignatureBuildProperties *) check_class_cast([self getAsDictWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PROP_BUILD_()], [ComItextpdfTextPdfSecurityPdfSignatureBuildProperties class]);
  if (buildPropDic == nil) {
    buildPropDic = [[ComItextpdfTextPdfSecurityPdfSignatureBuildProperties alloc] init];
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_PROP_BUILD_() withComItextpdfTextPdfPdfObject:buildPropDic];
  }
  return buildPropDic;
}


#line 121
- (void)setContactWithNSString:(NSString *)name {
  
#line 122
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_CONTACTINFO_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:name withNSString:ComItextpdfTextPdfPdfObject_get_TEXT_UNICODE_()]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfName:withComItextpdfTextPdfPdfName:", "PdfSignature", NULL, 0x1, NULL },
    { "setByteRangeWithIntArray:", "setByteRange", "V", 0x1, NULL },
    { "setContentsWithByteArray:", "setContents", "V", 0x1, NULL },
    { "setCertWithByteArray:", "setCert", "V", 0x1, NULL },
    { "setNameWithNSString:", "setName", "V", 0x1, NULL },
    { "setDateWithComItextpdfTextPdfPdfDate:", "setDate", "V", 0x1, NULL },
    { "setLocationWithNSString:", "setLocation", "V", 0x1, NULL },
    { "setReasonWithNSString:", "setReason", "V", 0x1, NULL },
    { "setSignatureCreatorWithNSString:", "setSignatureCreator", "V", 0x1, NULL },
    { "getPdfSignatureBuildProperties", NULL, "Lcom.itextpdf.text.pdf.security.PdfSignatureBuildProperties;", 0x0, NULL },
    { "setContactWithNSString:", "setContact", "V", 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfSignature = { "PdfSignature", "com.itextpdf.text.pdf", NULL, 0x1, 11, methods, 0, NULL, 0, NULL};
  return &_ComItextpdfTextPdfPdfSignature;
}

@end

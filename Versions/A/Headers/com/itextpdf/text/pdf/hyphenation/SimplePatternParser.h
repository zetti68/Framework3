//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/hyphenation/SimplePatternParser.java
//

#ifndef _ComItextpdfTextPdfHyphenationSimplePatternParser_H_
#define _ComItextpdfTextPdfHyphenationSimplePatternParser_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/hyphenation/PatternConsumer.h"
#include "com/itextpdf/text/xml/simpleparser/SimpleXMLDocHandler.h"

@class ComItextpdfTextXmlSimpleparserSimpleXMLParser;
@class JavaIoInputStream;
@class JavaLangStringBuffer;
@class JavaUtilArrayList;
@protocol JavaUtilMap;

#define ComItextpdfTextPdfHyphenationSimplePatternParser_ELEM_CLASSES 1
#define ComItextpdfTextPdfHyphenationSimplePatternParser_ELEM_EXCEPTIONS 2
#define ComItextpdfTextPdfHyphenationSimplePatternParser_ELEM_PATTERNS 3
#define ComItextpdfTextPdfHyphenationSimplePatternParser_ELEM_HYPHEN 4

@interface ComItextpdfTextPdfHyphenationSimplePatternParser : NSObject < ComItextpdfTextXmlSimpleparserSimpleXMLDocHandler, ComItextpdfTextPdfHyphenationPatternConsumer > {
 @public
  jint currElement_;
  id<ComItextpdfTextPdfHyphenationPatternConsumer> consumer_;
  JavaLangStringBuffer *token_;
  JavaUtilArrayList *exception_;
  jchar hyphenChar_;
  ComItextpdfTextXmlSimpleparserSimpleXMLParser *parser_;
}

#pragma mark Public

- (instancetype)init;

- (void)addClassWithNSString:(NSString *)c;

- (void)addExceptionWithNSString:(NSString *)w
           withJavaUtilArrayList:(JavaUtilArrayList *)e;

- (void)addPatternWithNSString:(NSString *)p
                  withNSString:(NSString *)v;

- (void)endDocument;

- (void)endElementWithNSString:(NSString *)tag;

- (void)parseWithJavaIoInputStream:(JavaIoInputStream *)stream
withComItextpdfTextPdfHyphenationPatternConsumer:(id<ComItextpdfTextPdfHyphenationPatternConsumer>)consumer;

- (void)startDocument;

- (void)startElementWithNSString:(NSString *)tag
                 withJavaUtilMap:(id<JavaUtilMap>)h;

- (void)textWithNSString:(NSString *)str;

#pragma mark Protected

- (NSString *)getExceptionWordWithJavaUtilArrayList:(JavaUtilArrayList *)ex;

+ (NSString *)getInterletterValuesWithNSString:(NSString *)pat;

+ (NSString *)getPatternWithNSString:(NSString *)word;

- (JavaUtilArrayList *)normalizeExceptionWithJavaUtilArrayList:(JavaUtilArrayList *)ex;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfHyphenationSimplePatternParser)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, consumer_, id<ComItextpdfTextPdfHyphenationPatternConsumer>)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, token_, JavaLangStringBuffer *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, exception_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, parser_, ComItextpdfTextXmlSimpleparserSimpleXMLParser *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, ELEM_CLASSES, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, ELEM_EXCEPTIONS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, ELEM_PATTERNS, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfHyphenationSimplePatternParser, ELEM_HYPHEN, jint)

FOUNDATION_EXPORT void ComItextpdfTextPdfHyphenationSimplePatternParser_init(ComItextpdfTextPdfHyphenationSimplePatternParser *self);

FOUNDATION_EXPORT ComItextpdfTextPdfHyphenationSimplePatternParser *new_ComItextpdfTextPdfHyphenationSimplePatternParser_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfHyphenationSimplePatternParser_getPatternWithNSString_(NSString *word);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfHyphenationSimplePatternParser_getInterletterValuesWithNSString_(NSString *pat);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfHyphenationSimplePatternParser)

#endif // _ComItextpdfTextPdfHyphenationSimplePatternParser_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/hyphenation/HyphenationTree.java
//

#ifndef _ComItextpdfTextPdfHyphenationHyphenationTree_H_
#define _ComItextpdfTextPdfHyphenationHyphenationTree_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/hyphenation/PatternConsumer.h"
#include "com/itextpdf/text/pdf/hyphenation/TernaryTree.h"

@class ComItextpdfTextPdfHyphenationByteVector;
@class ComItextpdfTextPdfHyphenationHyphenation;
@class IOSByteArray;
@class IOSCharArray;
@class JavaIoInputStream;
@class JavaUtilArrayList;
@class JavaUtilHashMap;

@interface ComItextpdfTextPdfHyphenationHyphenationTree : ComItextpdfTextPdfHyphenationTernaryTree < ComItextpdfTextPdfHyphenationPatternConsumer > {
 @public
  ComItextpdfTextPdfHyphenationByteVector *vspace_;
  JavaUtilHashMap *stoplist_;
  ComItextpdfTextPdfHyphenationTernaryTree *classmap_;
}

#pragma mark Public

- (instancetype)init;

- (void)addClassWithNSString:(NSString *)chargroup;

- (void)addExceptionWithNSString:(NSString *)word
           withJavaUtilArrayList:(JavaUtilArrayList *)hyphenatedword;

- (void)addPatternWithNSString:(NSString *)pattern
                  withNSString:(NSString *)ivalue;

- (NSString *)findPatternWithNSString:(NSString *)pat;

- (ComItextpdfTextPdfHyphenationHyphenation *)hyphenateWithCharArray:(IOSCharArray *)w
                                                             withInt:(jint)offset
                                                             withInt:(jint)len
                                                             withInt:(jint)remainCharCount
                                                             withInt:(jint)pushCharCount;

- (ComItextpdfTextPdfHyphenationHyphenation *)hyphenateWithNSString:(NSString *)word
                                                            withInt:(jint)remainCharCount
                                                            withInt:(jint)pushCharCount;

- (void)loadSimplePatternsWithJavaIoInputStream:(JavaIoInputStream *)stream;

- (void)printStats;

#pragma mark Protected

- (IOSByteArray *)getValuesWithInt:(jint)k;

- (jint)hstrcmpWithCharArray:(IOSCharArray *)s
                     withInt:(jint)si
               withCharArray:(IOSCharArray *)t
                     withInt:(jint)ti;

- (jint)packValuesWithNSString:(NSString *)values;

- (void)searchPatternsWithCharArray:(IOSCharArray *)word
                            withInt:(jint)index
                      withByteArray:(IOSByteArray *)il;

- (NSString *)unpackValuesWithInt:(jint)k;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfHyphenationHyphenationTree)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfHyphenationHyphenationTree, vspace_, ComItextpdfTextPdfHyphenationByteVector *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfHyphenationHyphenationTree, stoplist_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfHyphenationHyphenationTree, classmap_, ComItextpdfTextPdfHyphenationTernaryTree *)

FOUNDATION_EXPORT void ComItextpdfTextPdfHyphenationHyphenationTree_init(ComItextpdfTextPdfHyphenationHyphenationTree *self);

FOUNDATION_EXPORT ComItextpdfTextPdfHyphenationHyphenationTree *new_ComItextpdfTextPdfHyphenationHyphenationTree_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfHyphenationHyphenationTree)

#endif // _ComItextpdfTextPdfHyphenationHyphenationTree_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/OutputStreamCounter.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/OutputStreamCounter.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/pdf/OutputStreamCounter.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"


#line 53
@implementation ComItextpdfTextPdfOutputStreamCounter


#line 59
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  if (self = [super init]) {
    counter_ =
#line 56
    0;
    
#line 60
    self->out_ = outArg;
  }
  return self;
}


#line 73
- (void)close {
  
#line 74
  [((JavaIoOutputStream *) nil_chk(out_)) close];
}


#line 89
- (void)flush {
  
#line 90
  [((JavaIoOutputStream *) nil_chk(out_)) flush];
}


#line 103
- (void)writeWithByteArray:(IOSByteArray *)b {
  
#line 104
  counter_ += ((IOSByteArray *) nil_chk(b))->size_;
  [((JavaIoOutputStream *) nil_chk(out_)) writeWithByteArray:b];
}


#line 123
- (void)writeWithInt:(jint)b {
  
#line 124
  ++counter_;
  [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:b];
}


#line 156
- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len {
  
#line 157
  counter_ += len;
  [((JavaIoOutputStream *) nil_chk(out_)) writeWithByteArray:b withInt:off withInt:len];
}


#line 161
- (jlong)getCounter {
  
#line 162
  return counter_;
}


#line 165
- (void)resetCounter {
  
#line 166
  counter_ = 0;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfOutputStreamCounter *)other {
  [super copyAllFieldsTo:other];
  other->counter_ = counter_;
  other->out_ = out_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoOutputStream:", "OutputStreamCounter", NULL, 0x1, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;" },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;" },
    { "writeWithByteArray:", "write", "V", 0x1, "Ljava.io.IOException;" },
    { "writeWithInt:", "write", "V", 0x1, "Ljava.io.IOException;" },
    { "writeWithByteArray:withInt:withInt:", "write", "V", 0x1, "Ljava.io.IOException;" },
    { "getCounter", NULL, "J", 0x1, NULL },
    { "resetCounter", NULL, "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "out_", NULL, 0x4, "Ljava.io.OutputStream;", NULL,  },
    { "counter_", NULL, 0x4, "J", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfOutputStreamCounter = { "OutputStreamCounter", "com.itextpdf.text.pdf", NULL, 0x1, 8, methods, 2, fields, 0, NULL};
  return &_ComItextpdfTextPdfOutputStreamCounter;
}

@end

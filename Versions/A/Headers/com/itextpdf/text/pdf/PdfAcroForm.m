//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfAcroForm.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfAcroForm.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/ExceptionConverter.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/pdf/BaseFont.h"
#include "com/itextpdf/text/pdf/PdfAcroForm.h"
#include "com/itextpdf/text/pdf/PdfAction.h"
#include "com/itextpdf/text/pdf/PdfAnnotation.h"
#include "com/itextpdf/text/pdf/PdfAppearance.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfBoolean.h"
#include "com/itextpdf/text/pdf/PdfBorderDictionary.h"
#include "com/itextpdf/text/pdf/PdfContentByte.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfFormField.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfString.h"
#include "com/itextpdf/text/pdf/PdfTemplate.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "com/itextpdf/text/pdf/internal/PdfIsoKeys.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuffer.h"
#include "java/util/HashSet.h"
#include "java/util/StringTokenizer.h"


#line 60
@implementation ComItextpdfTextPdfPdfAcroForm


#line 80
- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer {
  if (self =
#line 81
  [super init]) {
    fieldTemplates_ =
#line 66
    [[JavaUtilHashSet alloc] init];
    documentFields_ =
#line 69
    [[ComItextpdfTextPdfPdfArray alloc] init];
    calculationOrder_ =
#line 72
    [[ComItextpdfTextPdfPdfArray alloc] init];
    sigFlags_ =
#line 75
    0;
    
#line 82
    self->writer_ = writer;
  }
  return self;
}


#line 85
- (void)setNeedAppearancesWithBoolean:(jboolean)value {
  
#line 86
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_NEEDAPPEARANCES_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfBoolean alloc] initWithBoolean:value]];
}


#line 94
- (void)addFieldTemplatesWithJavaUtilHashSet:(JavaUtilHashSet *)ft {
  
#line 95
  [((JavaUtilHashSet *) nil_chk(fieldTemplates_)) addAllWithJavaUtilCollection:ft];
}


#line 103
- (void)addDocumentFieldWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)ref {
  
#line 104
  [((ComItextpdfTextPdfPdfArray *) nil_chk(documentFields_)) addWithComItextpdfTextPdfPdfObject:ref];
}


#line 112
- (jboolean)isValid {
  
#line 113
  if ([((ComItextpdfTextPdfPdfArray *) nil_chk(documentFields_)) size] == 0) return NO;
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FIELDS_() withComItextpdfTextPdfPdfObject:documentFields_];
  if (sigFlags_ != 0)
#line 116
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SIGFLAGS_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:sigFlags_]];
  if ([((ComItextpdfTextPdfPdfArray *) nil_chk(calculationOrder_)) size] > 0)
#line 118
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_CO_() withComItextpdfTextPdfPdfObject:calculationOrder_];
  if ([((JavaUtilHashSet *) nil_chk(fieldTemplates_)) isEmpty]) return YES;
  ComItextpdfTextPdfPdfDictionary *dic = [[ComItextpdfTextPdfPdfDictionary alloc] init];
  for (ComItextpdfTextPdfPdfTemplate * __strong template_ in fieldTemplates_) {
    [ComItextpdfTextPdfPdfFormField mergeResourcesWithComItextpdfTextPdfPdfDictionary:dic withComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *) check_class_cast([((ComItextpdfTextPdfPdfTemplate *) nil_chk(template_)) getResources], [ComItextpdfTextPdfPdfDictionary class])];
  }
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_DR_() withComItextpdfTextPdfPdfObject:dic];
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_DA_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:@"/Helv 0 Tf 0 g "]];
  ComItextpdfTextPdfPdfDictionary *fonts = (ComItextpdfTextPdfPdfDictionary *) check_class_cast([dic getWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_FONT_()], [ComItextpdfTextPdfPdfDictionary class]);
  if (fonts != nil) {
    [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) eliminateFontSubsetWithComItextpdfTextPdfPdfDictionary:fonts];
  }
  return YES;
}


#line 138
- (void)addCalculationOrderWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)formField {
  
#line 139
  [((ComItextpdfTextPdfPdfArray *) nil_chk(calculationOrder_)) addWithComItextpdfTextPdfPdfObject:[((ComItextpdfTextPdfPdfFormField *) nil_chk(formField)) getIndirectReference]];
}


#line 147
- (void)setSigFlagsWithInt:(jint)f {
  
#line 148
  sigFlags_ |= f;
}


#line 156
- (void)addFormFieldWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)formField {
  
#line 157
  [((ComItextpdfTextPdfPdfWriter *) nil_chk(writer_)) addAnnotationWithComItextpdfTextPdfPdfAnnotation:formField];
}


#line 173
- (ComItextpdfTextPdfPdfFormField *)addHtmlPostButtonWithNSString:(NSString *)name
                                                     withNSString:(NSString *)caption
                                                     withNSString:(NSString *)value
                                                     withNSString:(NSString *)url
                                   withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                        withFloat:(jfloat)fontSize
                                                        withFloat:(jfloat)llx
                                                        withFloat:(jfloat)lly
                                                        withFloat:(jfloat)urx
                                                        withFloat:(jfloat)ury {
  
#line 174
  ComItextpdfTextPdfPdfAction *action = [ComItextpdfTextPdfPdfAction createSubmitFormWithNSString:url withNSObjectArray:nil withInt:ComItextpdfTextPdfPdfAction_SUBMIT_HTML_FORMAT];
  ComItextpdfTextPdfPdfFormField *button = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer_ withFloat:llx withFloat:lly withFloat:urx withFloat:ury withComItextpdfTextPdfPdfAction:action];
  [self setButtonParamsWithComItextpdfTextPdfPdfFormField:button withInt:ComItextpdfTextPdfPdfFormField_FF_PUSHBUTTON withNSString:name withNSString:value];
  [self drawButtonWithComItextpdfTextPdfPdfFormField:button withNSString:caption withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:button];
  return button;
}


#line 194
- (ComItextpdfTextPdfPdfFormField *)addResetButtonWithNSString:(NSString *)name
                                                  withNSString:(NSString *)caption
                                                  withNSString:(NSString *)value
                                withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                     withFloat:(jfloat)fontSize
                                                     withFloat:(jfloat)llx
                                                     withFloat:(jfloat)lly
                                                     withFloat:(jfloat)urx
                                                     withFloat:(jfloat)ury {
  
#line 195
  ComItextpdfTextPdfPdfAction *action = [ComItextpdfTextPdfPdfAction createResetFormWithNSObjectArray:nil withInt:0];
  ComItextpdfTextPdfPdfFormField *button = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer_ withFloat:llx withFloat:lly withFloat:urx withFloat:ury withComItextpdfTextPdfPdfAction:action];
  [self setButtonParamsWithComItextpdfTextPdfPdfFormField:button withInt:ComItextpdfTextPdfPdfFormField_FF_PUSHBUTTON withNSString:name withNSString:value];
  [self drawButtonWithComItextpdfTextPdfPdfFormField:button withNSString:caption withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:button];
  return button;
}


#line 214
- (ComItextpdfTextPdfPdfFormField *)addMapWithNSString:(NSString *)name
                                          withNSString:(NSString *)value
                                          withNSString:(NSString *)url
                  withComItextpdfTextPdfPdfContentByte:(ComItextpdfTextPdfPdfContentByte *)appearance
                                             withFloat:(jfloat)llx
                                             withFloat:(jfloat)lly
                                             withFloat:(jfloat)urx
                                             withFloat:(jfloat)ury {
  
#line 215
  ComItextpdfTextPdfPdfAction *action = [ComItextpdfTextPdfPdfAction createSubmitFormWithNSString:url withNSObjectArray:nil withInt:ComItextpdfTextPdfPdfAction_SUBMIT_HTML_FORMAT | ComItextpdfTextPdfPdfAction_SUBMIT_COORDINATES];
  ComItextpdfTextPdfPdfFormField *button = [[ComItextpdfTextPdfPdfFormField alloc] initWithComItextpdfTextPdfPdfWriter:writer_ withFloat:llx withFloat:lly withFloat:urx withFloat:ury withComItextpdfTextPdfPdfAction:action];
  [self setButtonParamsWithComItextpdfTextPdfPdfFormField:button withInt:ComItextpdfTextPdfPdfFormField_FF_PUSHBUTTON withNSString:name withNSString:nil];
  ComItextpdfTextPdfPdfAppearance *pa = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(pa)) addWithComItextpdfTextPdfPdfContentByte:appearance];
  [button setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withComItextpdfTextPdfPdfTemplate:pa];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:button];
  return button;
}


#line 231
- (void)setButtonParamsWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)button
                                                  withInt:(jint)characteristics
                                             withNSString:(NSString *)name
                                             withNSString:(NSString *)value {
  
#line 232
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(button)) setButtonWithInt:characteristics];
  [button setFlagsWithInt:ComItextpdfTextPdfPdfAnnotation_FLAGS_PRINT];
  [button setPage];
  [button setFieldNameWithNSString:name];
  if (value != nil) [button setValueAsStringWithNSString:value];
}


#line 249
- (void)drawButtonWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)button
                                        withNSString:(NSString *)caption
                      withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                           withFloat:(jfloat)fontSize
                                           withFloat:(jfloat)llx
                                           withFloat:(jfloat)lly
                                           withFloat:(jfloat)urx
                                           withFloat:(jfloat)ury {
  
#line 250
  ComItextpdfTextPdfPdfAppearance *pa = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(pa)) drawButtonWithFloat:0.0f withFloat:0.0f withFloat:urx - llx withFloat:ury - lly withNSString:caption withComItextpdfTextPdfBaseFont:font withFloat:fontSize];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(button)) setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withComItextpdfTextPdfPdfTemplate:pa];
}


#line 260
- (ComItextpdfTextPdfPdfFormField *)addHiddenFieldWithNSString:(NSString *)name
                                                  withNSString:(NSString *)value {
  
#line 261
  ComItextpdfTextPdfPdfFormField *hidden = [ComItextpdfTextPdfPdfFormField createEmptyWithComItextpdfTextPdfPdfWriter:writer_];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(hidden)) setFieldNameWithNSString:name];
  [hidden setValueAsNameWithNSString:value];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:hidden];
  return hidden;
}


#line 279
- (ComItextpdfTextPdfPdfFormField *)addSingleLineTextFieldWithNSString:(NSString *)name
                                                          withNSString:(NSString *)text
                                        withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                             withFloat:(jfloat)fontSize
                                                             withFloat:(jfloat)llx
                                                             withFloat:(jfloat)lly
                                                             withFloat:(jfloat)urx
                                                             withFloat:(jfloat)ury {
  
#line 280
  ComItextpdfTextPdfPdfFormField *field = [ComItextpdfTextPdfPdfFormField createTextFieldWithComItextpdfTextPdfPdfWriter:writer_ withBoolean:ComItextpdfTextPdfPdfFormField_SINGLELINE withBoolean:ComItextpdfTextPdfPdfFormField_PLAINTEXT withInt:0];
  [self setTextFieldParamsWithComItextpdfTextPdfPdfFormField:field withNSString:text withNSString:name withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self drawSingleLineOfTextWithComItextpdfTextPdfPdfFormField:field withNSString:text withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:field];
  return field;
}


#line 298
- (ComItextpdfTextPdfPdfFormField *)addMultiLineTextFieldWithNSString:(NSString *)name
                                                         withNSString:(NSString *)text
                                       withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                            withFloat:(jfloat)fontSize
                                                            withFloat:(jfloat)llx
                                                            withFloat:(jfloat)lly
                                                            withFloat:(jfloat)urx
                                                            withFloat:(jfloat)ury {
  
#line 299
  ComItextpdfTextPdfPdfFormField *field = [ComItextpdfTextPdfPdfFormField createTextFieldWithComItextpdfTextPdfPdfWriter:writer_ withBoolean:ComItextpdfTextPdfPdfFormField_MULTILINE withBoolean:ComItextpdfTextPdfPdfFormField_PLAINTEXT withInt:0];
  [self setTextFieldParamsWithComItextpdfTextPdfPdfFormField:field withNSString:text withNSString:name withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self drawMultiLineOfTextWithComItextpdfTextPdfPdfFormField:field withNSString:text withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:field];
  return field;
}


#line 317
- (ComItextpdfTextPdfPdfFormField *)addSingleLinePasswordFieldWithNSString:(NSString *)name
                                                              withNSString:(NSString *)text
                                            withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                                 withFloat:(jfloat)fontSize
                                                                 withFloat:(jfloat)llx
                                                                 withFloat:(jfloat)lly
                                                                 withFloat:(jfloat)urx
                                                                 withFloat:(jfloat)ury {
  
#line 318
  ComItextpdfTextPdfPdfFormField *field = [ComItextpdfTextPdfPdfFormField createTextFieldWithComItextpdfTextPdfPdfWriter:writer_ withBoolean:ComItextpdfTextPdfPdfFormField_SINGLELINE withBoolean:ComItextpdfTextPdfPdfFormField_PASSWORD withInt:0];
  [self setTextFieldParamsWithComItextpdfTextPdfPdfFormField:field withNSString:text withNSString:name withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self drawSingleLineOfTextWithComItextpdfTextPdfPdfFormField:field withNSString:text withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:field];
  return field;
}

- (void)setTextFieldParamsWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                                withNSString:(NSString *)text
                                                withNSString:(NSString *)name
                                                   withFloat:(jfloat)llx
                                                   withFloat:(jfloat)lly
                                                   withFloat:(jfloat)urx
                                                   withFloat:(jfloat)ury {
  
#line 335
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setWidgetWithComItextpdfTextRectangle:[[ComItextpdfTextRectangle alloc] initWithFloat:llx withFloat:lly withFloat:urx withFloat:ury] withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_HIGHLIGHT_INVERT_()];
  [field setValueAsStringWithNSString:text];
  [field setDefaultValueAsStringWithNSString:text];
  [field setFieldNameWithNSString:name];
  [field setFlagsWithInt:ComItextpdfTextPdfPdfAnnotation_FLAGS_PRINT];
  [field setPage];
}


#line 353
- (void)drawSingleLineOfTextWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                                  withNSString:(NSString *)text
                                withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                     withFloat:(jfloat)fontSize
                                                     withFloat:(jfloat)llx
                                                     withFloat:(jfloat)lly
                                                     withFloat:(jfloat)urx
                                                     withFloat:(jfloat)ury {
  
#line 354
  ComItextpdfTextPdfPdfAppearance *tp = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  ComItextpdfTextPdfPdfAppearance *tp2 = (ComItextpdfTextPdfPdfAppearance *) check_class_cast([((ComItextpdfTextPdfPdfAppearance *) nil_chk(tp)) getDuplicate], [ComItextpdfTextPdfPdfAppearance class]);
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(tp2)) setFontAndSizeWithComItextpdfTextPdfBaseFont:font withFloat:fontSize];
  [tp2 resetRGBColorFill];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setDefaultAppearanceStringWithComItextpdfTextPdfPdfContentByte:tp2];
  [tp drawTextFieldWithFloat:0.0f withFloat:0.0f withFloat:urx - llx withFloat:ury - lly];
  [tp beginVariableText];
  [tp saveState];
  [tp rectangleWithFloat:3.0f withFloat:3.0f withFloat:urx - llx - 6.0f withFloat:ury - lly - 6.0f];
  [tp clip];
  [tp newPath];
  [tp beginText];
  [tp setFontAndSizeWithComItextpdfTextPdfBaseFont:font withFloat:fontSize];
  [tp resetRGBColorFill];
  [tp setTextMatrixWithFloat:4 withFloat:(ury - lly) / 2 - fontSize * 0.3f];
  [tp showTextWithNSString:text];
  [tp endText];
  [tp restoreState];
  [tp endVariableText];
  [field setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withComItextpdfTextPdfPdfTemplate:tp];
}


#line 386
- (void)drawMultiLineOfTextWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                                 withNSString:(NSString *)text
                               withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                    withFloat:(jfloat)fontSize
                                                    withFloat:(jfloat)llx
                                                    withFloat:(jfloat)lly
                                                    withFloat:(jfloat)urx
                                                    withFloat:(jfloat)ury {
  
#line 387
  ComItextpdfTextPdfPdfAppearance *tp = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  ComItextpdfTextPdfPdfAppearance *tp2 = (ComItextpdfTextPdfPdfAppearance *) check_class_cast([((ComItextpdfTextPdfPdfAppearance *) nil_chk(tp)) getDuplicate], [ComItextpdfTextPdfPdfAppearance class]);
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(tp2)) setFontAndSizeWithComItextpdfTextPdfBaseFont:font withFloat:fontSize];
  [tp2 resetRGBColorFill];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setDefaultAppearanceStringWithComItextpdfTextPdfPdfContentByte:tp2];
  [tp drawTextFieldWithFloat:0.0f withFloat:0.0f withFloat:urx - llx withFloat:ury - lly];
  [tp beginVariableText];
  [tp saveState];
  [tp rectangleWithFloat:3.0f withFloat:3.0f withFloat:urx - llx - 6.0f withFloat:ury - lly - 6.0f];
  [tp clip];
  [tp newPath];
  [tp beginText];
  [tp setFontAndSizeWithComItextpdfTextPdfBaseFont:font withFloat:fontSize];
  [tp resetRGBColorFill];
  [tp setTextMatrixWithFloat:4 withFloat:5];
  JavaUtilStringTokenizer *tokenizer = [[JavaUtilStringTokenizer alloc] initWithNSString:text withNSString:@"\n"];
  jfloat yPos = ury - lly;
  while ([tokenizer hasMoreTokens]) {
    yPos -= fontSize * 1.2f;
    [tp showTextAlignedWithInt:ComItextpdfTextPdfPdfContentByte_ALIGN_LEFT withNSString:[tokenizer nextToken] withFloat:3 withFloat:yPos withFloat:0];
  }
  [tp endText];
  [tp restoreState];
  [tp endVariableText];
  [field setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withComItextpdfTextPdfPdfTemplate:tp];
}


#line 424
- (ComItextpdfTextPdfPdfFormField *)addCheckBoxWithNSString:(NSString *)name
                                               withNSString:(NSString *)value
                                                withBoolean:(jboolean)status
                                                  withFloat:(jfloat)llx
                                                  withFloat:(jfloat)lly
                                                  withFloat:(jfloat)urx
                                                  withFloat:(jfloat)ury {
  
#line 425
  ComItextpdfTextPdfPdfFormField *field = [ComItextpdfTextPdfPdfFormField createCheckBoxWithComItextpdfTextPdfPdfWriter:writer_];
  [self setCheckBoxParamsWithComItextpdfTextPdfPdfFormField:field withNSString:name withNSString:value withBoolean:status withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self drawCheckBoxAppearencesWithComItextpdfTextPdfPdfFormField:field withNSString:value withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:field];
  return field;
}


#line 442
- (void)setCheckBoxParamsWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                               withNSString:(NSString *)name
                                               withNSString:(NSString *)value
                                                withBoolean:(jboolean)status
                                                  withFloat:(jfloat)llx
                                                  withFloat:(jfloat)lly
                                                  withFloat:(jfloat)urx
                                                  withFloat:(jfloat)ury {
  
#line 443
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setWidgetWithComItextpdfTextRectangle:[[ComItextpdfTextRectangle alloc] initWithFloat:llx withFloat:lly withFloat:urx withFloat:ury] withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_HIGHLIGHT_TOGGLE_()];
  [field setFieldNameWithNSString:name];
  if (status) {
    [field setValueAsNameWithNSString:value];
    [field setAppearanceStateWithNSString:value];
  }
  else {
    [field setValueAsNameWithNSString:@"Off"];
    [field setAppearanceStateWithNSString:@"Off"];
  }
  [field setFlagsWithInt:ComItextpdfTextPdfPdfAnnotation_FLAGS_PRINT];
  [field setPage];
  [field setBorderStyleWithComItextpdfTextPdfPdfBorderDictionary:[[ComItextpdfTextPdfPdfBorderDictionary alloc] initWithFloat:1 withInt:ComItextpdfTextPdfPdfBorderDictionary_STYLE_SOLID]];
}


#line 466
- (void)drawCheckBoxAppearencesWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                                     withNSString:(NSString *)value
                                                        withFloat:(jfloat)llx
                                                        withFloat:(jfloat)lly
                                                        withFloat:(jfloat)urx
                                                        withFloat:(jfloat)ury {
  ComItextpdfTextPdfBaseFont *font = nil;
  @try {
    font = [ComItextpdfTextPdfBaseFont createFontWithNSString:ComItextpdfTextPdfBaseFont_get_ZAPFDINGBATS_() withNSString:ComItextpdfTextPdfBaseFont_get_WINANSI_() withBoolean:ComItextpdfTextPdfBaseFont_NOT_EMBEDDED];
  }
  @catch (JavaLangException *e) {
    @throw [[ComItextpdfTextExceptionConverter alloc] initWithJavaLangException:e];
  }
  jfloat size = ury - lly;
  ComItextpdfTextPdfPdfAppearance *tpOn = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  ComItextpdfTextPdfPdfAppearance *tp2 = (ComItextpdfTextPdfPdfAppearance *) check_class_cast([((ComItextpdfTextPdfPdfAppearance *) nil_chk(tpOn)) getDuplicate], [ComItextpdfTextPdfPdfAppearance class]);
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(tp2)) setFontAndSizeWithComItextpdfTextPdfBaseFont:font withFloat:size];
  [tp2 resetRGBColorFill];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setDefaultAppearanceStringWithComItextpdfTextPdfPdfContentByte:tp2];
  [tpOn drawTextFieldWithFloat:0.0f withFloat:0.0f withFloat:urx - llx withFloat:ury - lly];
  [tpOn saveState];
  [tpOn resetRGBColorFill];
  [tpOn beginText];
  [tpOn setFontAndSizeWithComItextpdfTextPdfBaseFont:font withFloat:size];
  [tpOn showTextAlignedWithInt:ComItextpdfTextPdfPdfContentByte_ALIGN_CENTER withNSString:@"4" withFloat:(urx - llx) / 2 withFloat:(ury - lly) / 2 - size * 0.3f withFloat:0];
  [tpOn endText];
  [tpOn restoreState];
  [field setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withNSString:value withComItextpdfTextPdfPdfTemplate:tpOn];
  ComItextpdfTextPdfPdfAppearance *tpOff = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(tpOff)) drawTextFieldWithFloat:0.0f withFloat:0.0f withFloat:urx - llx withFloat:ury - lly];
  [field setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withNSString:@"Off" withComItextpdfTextPdfPdfTemplate:tpOff];
}


#line 500
- (ComItextpdfTextPdfPdfFormField *)getRadioGroupWithNSString:(NSString *)name
                                                 withNSString:(NSString *)defaultValue
                                                  withBoolean:(jboolean)noToggleToOff {
  
#line 501
  ComItextpdfTextPdfPdfFormField *radio = [ComItextpdfTextPdfPdfFormField createRadioButtonWithComItextpdfTextPdfPdfWriter:writer_ withBoolean:noToggleToOff];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(radio)) setFieldNameWithNSString:name];
  [radio setValueAsNameWithNSString:defaultValue];
  return radio;
}


#line 510
- (void)addRadioGroupWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)radiogroup {
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:radiogroup];
}


#line 523
- (ComItextpdfTextPdfPdfFormField *)addRadioButtonWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)radiogroup
                                                                        withNSString:(NSString *)value
                                                                           withFloat:(jfloat)llx
                                                                           withFloat:(jfloat)lly
                                                                           withFloat:(jfloat)urx
                                                                           withFloat:(jfloat)ury {
  
#line 524
  ComItextpdfTextPdfPdfFormField *radio = [ComItextpdfTextPdfPdfFormField createEmptyWithComItextpdfTextPdfPdfWriter:writer_];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(radio)) setWidgetWithComItextpdfTextRectangle:[[ComItextpdfTextRectangle alloc] initWithFloat:llx withFloat:lly withFloat:urx withFloat:ury] withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_HIGHLIGHT_TOGGLE_()];
  NSString *name = [((NSString *) nil_chk([((ComItextpdfTextPdfPdfName *) nil_chk(((ComItextpdfTextPdfPdfName *) check_class_cast([((ComItextpdfTextPdfPdfFormField *) nil_chk(radiogroup)) getWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_V_()], [ComItextpdfTextPdfPdfName class])))) description])) substring:1];
  if ([((NSString *) nil_chk(name)) isEqual:value]) {
    [radio setAppearanceStateWithNSString:value];
  }
  else {
    [radio setAppearanceStateWithNSString:@"Off"];
  }
  [self drawRadioAppearencesWithComItextpdfTextPdfPdfFormField:radio withNSString:value withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [radiogroup addKidWithComItextpdfTextPdfPdfFormField:radio];
  return radio;
}


#line 546
- (void)drawRadioAppearencesWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                                  withNSString:(NSString *)value
                                                     withFloat:(jfloat)llx
                                                     withFloat:(jfloat)lly
                                                     withFloat:(jfloat)urx
                                                     withFloat:(jfloat)ury {
  
#line 547
  ComItextpdfTextPdfPdfAppearance *tpOn = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(tpOn)) drawRadioFieldWithFloat:0.0f withFloat:0.0f withFloat:urx - llx withFloat:ury - lly withBoolean:YES];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withNSString:value withComItextpdfTextPdfPdfTemplate:tpOn];
  ComItextpdfTextPdfPdfAppearance *tpOff = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(tpOff)) drawRadioFieldWithFloat:0.0f withFloat:0.0f withFloat:urx - llx withFloat:ury - lly withBoolean:NO];
  [field setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withNSString:@"Off" withComItextpdfTextPdfPdfTemplate:tpOff];
}


#line 567
- (ComItextpdfTextPdfPdfFormField *)addSelectListWithNSString:(NSString *)name
                                            withNSStringArray:(IOSObjectArray *)options
                                                 withNSString:(NSString *)defaultValue
                               withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                    withFloat:(jfloat)fontSize
                                                    withFloat:(jfloat)llx
                                                    withFloat:(jfloat)lly
                                                    withFloat:(jfloat)urx
                                                    withFloat:(jfloat)ury {
  
#line 568
  ComItextpdfTextPdfPdfFormField *choice = [ComItextpdfTextPdfPdfFormField createListWithComItextpdfTextPdfPdfWriter:writer_ withNSStringArray:options withInt:0];
  [self setChoiceParamsWithComItextpdfTextPdfPdfFormField:choice withNSString:name withNSString:defaultValue withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  JavaLangStringBuffer *text = [[JavaLangStringBuffer alloc] init];
  {
    IOSObjectArray *a__ =
#line 571
    options;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *option = *b__++;
      
#line 572
      (void) [((JavaLangStringBuffer *) nil_chk([text appendWithNSString:option])) appendWithChar:0x000a];
    }
  }
  
#line 574
  [self drawMultiLineOfTextWithComItextpdfTextPdfPdfFormField:choice withNSString:[text description] withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:choice];
  return choice;
}


#line 591
- (ComItextpdfTextPdfPdfFormField *)addSelectListWithNSString:(NSString *)name
                                           withNSStringArray2:(IOSObjectArray *)options
                                                 withNSString:(NSString *)defaultValue
                               withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                    withFloat:(jfloat)fontSize
                                                    withFloat:(jfloat)llx
                                                    withFloat:(jfloat)lly
                                                    withFloat:(jfloat)urx
                                                    withFloat:(jfloat)ury {
  
#line 592
  ComItextpdfTextPdfPdfFormField *choice = [ComItextpdfTextPdfPdfFormField createListWithComItextpdfTextPdfPdfWriter:writer_ withNSStringArray2:options withInt:0];
  [self setChoiceParamsWithComItextpdfTextPdfPdfFormField:choice withNSString:name withNSString:defaultValue withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  JavaLangStringBuffer *text = [[JavaLangStringBuffer alloc] init];
  {
    IOSObjectArray *a__ =
#line 595
    options;
    IOSObjectArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSObjectArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSObjectArray *option = *b__++;
      
#line 596
      (void) [((JavaLangStringBuffer *) nil_chk([text appendWithNSString:IOSObjectArray_Get(nil_chk(option), 1)])) appendWithChar:0x000a];
    }
  }
  
#line 598
  [self drawMultiLineOfTextWithComItextpdfTextPdfPdfFormField:choice withNSString:[text description] withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:choice];
  return choice;
}


#line 616
- (ComItextpdfTextPdfPdfFormField *)addComboBoxWithNSString:(NSString *)name
                                          withNSStringArray:(IOSObjectArray *)options
                                               withNSString:(NSString *)defaultValue
                                                withBoolean:(jboolean)editable
                             withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                  withFloat:(jfloat)fontSize
                                                  withFloat:(jfloat)llx
                                                  withFloat:(jfloat)lly
                                                  withFloat:(jfloat)urx
                                                  withFloat:(jfloat)ury {
  
#line 617
  ComItextpdfTextPdfPdfFormField *choice = [ComItextpdfTextPdfPdfFormField createComboWithComItextpdfTextPdfPdfWriter:writer_ withBoolean:editable withNSStringArray:options withInt:0];
  [self setChoiceParamsWithComItextpdfTextPdfPdfFormField:choice withNSString:name withNSString:defaultValue withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  if (defaultValue == nil) {
    defaultValue = IOSObjectArray_Get(nil_chk(options), 0);
  }
  [self drawSingleLineOfTextWithComItextpdfTextPdfPdfFormField:choice withNSString:defaultValue withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:choice];
  return choice;
}


#line 640
- (ComItextpdfTextPdfPdfFormField *)addComboBoxWithNSString:(NSString *)name
                                         withNSStringArray2:(IOSObjectArray *)options
                                               withNSString:(NSString *)defaultValue
                                                withBoolean:(jboolean)editable
                             withComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font
                                                  withFloat:(jfloat)fontSize
                                                  withFloat:(jfloat)llx
                                                  withFloat:(jfloat)lly
                                                  withFloat:(jfloat)urx
                                                  withFloat:(jfloat)ury {
  
#line 641
  ComItextpdfTextPdfPdfFormField *choice = [ComItextpdfTextPdfPdfFormField createComboWithComItextpdfTextPdfPdfWriter:writer_ withBoolean:editable withNSStringArray2:options withInt:0];
  [self setChoiceParamsWithComItextpdfTextPdfPdfFormField:choice withNSString:name withNSString:defaultValue withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  NSString *value = nil;
  {
    IOSObjectArray *a__ =
#line 644
    options;
    IOSObjectArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSObjectArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSObjectArray *option = *b__++;
      
#line 645
      if ([((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(option), 0))) isEqual:defaultValue]) {
        value = IOSObjectArray_Get(option, 1);
        break;
      }
    }
  }
  
#line 650
  if (value == nil) {
    value = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(options), 0)), 1);
  }
  [self drawSingleLineOfTextWithComItextpdfTextPdfPdfFormField:choice withNSString:value withComItextpdfTextPdfBaseFont:font withFloat:fontSize withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:choice];
  return choice;
}


#line 667
- (void)setChoiceParamsWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                             withNSString:(NSString *)name
                                             withNSString:(NSString *)defaultValue
                                                withFloat:(jfloat)llx
                                                withFloat:(jfloat)lly
                                                withFloat:(jfloat)urx
                                                withFloat:(jfloat)ury {
  
#line 668
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setWidgetWithComItextpdfTextRectangle:[[ComItextpdfTextRectangle alloc] initWithFloat:llx withFloat:lly withFloat:urx withFloat:ury] withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_HIGHLIGHT_INVERT_()];
  if (defaultValue != nil) {
    [field setValueAsStringWithNSString:defaultValue];
    [field setDefaultValueAsStringWithNSString:defaultValue];
  }
  [field setFieldNameWithNSString:name];
  [field setFlagsWithInt:ComItextpdfTextPdfPdfAnnotation_FLAGS_PRINT];
  [field setPage];
  [field setBorderStyleWithComItextpdfTextPdfPdfBorderDictionary:[[ComItextpdfTextPdfPdfBorderDictionary alloc] initWithFloat:2 withInt:ComItextpdfTextPdfPdfBorderDictionary_STYLE_SOLID]];
}

- (ComItextpdfTextPdfPdfFormField *)addSignatureWithNSString:(NSString *)name
                                                   withFloat:(jfloat)llx
                                                   withFloat:(jfloat)lly
                                                   withFloat:(jfloat)urx
                                                   withFloat:(jfloat)ury {
  
#line 689
  ComItextpdfTextPdfPdfFormField *signature = [ComItextpdfTextPdfPdfFormField createSignatureWithComItextpdfTextPdfPdfWriter:writer_];
  [self setSignatureParamsWithComItextpdfTextPdfPdfFormField:signature withNSString:name withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self drawSignatureAppearencesWithComItextpdfTextPdfPdfFormField:signature withFloat:llx withFloat:lly withFloat:urx withFloat:ury];
  [self addFormFieldWithComItextpdfTextPdfPdfFormField:signature];
  return signature;
}


#line 704
- (void)setSignatureParamsWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                                withNSString:(NSString *)name
                                                   withFloat:(jfloat)llx
                                                   withFloat:(jfloat)lly
                                                   withFloat:(jfloat)urx
                                                   withFloat:(jfloat)ury {
  
#line 706
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setWidgetWithComItextpdfTextRectangle:[[ComItextpdfTextRectangle alloc] initWithFloat:llx withFloat:lly withFloat:urx withFloat:ury] withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_HIGHLIGHT_INVERT_()];
  [field setFieldNameWithNSString:name];
  [field setFlagsWithInt:ComItextpdfTextPdfPdfAnnotation_FLAGS_PRINT];
  [field setPage];
  [field setMKBorderColorWithComItextpdfTextBaseColor:ComItextpdfTextBaseColor_get_BLACK_()];
  [field setMKBackgroundColorWithComItextpdfTextBaseColor:ComItextpdfTextBaseColor_get_WHITE_()];
}


#line 721
- (void)drawSignatureAppearencesWithComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)field
                                                         withFloat:(jfloat)llx
                                                         withFloat:(jfloat)lly
                                                         withFloat:(jfloat)urx
                                                         withFloat:(jfloat)ury {
  
#line 723
  ComItextpdfTextPdfPdfAppearance *tp = [ComItextpdfTextPdfPdfAppearance createAppearanceWithComItextpdfTextPdfPdfWriter:writer_ withFloat:urx - llx withFloat:ury - lly];
  [((ComItextpdfTextPdfPdfAppearance *) nil_chk(tp)) setGrayFillWithFloat:1.0f];
  [tp rectangleWithFloat:0 withFloat:0 withFloat:urx - llx withFloat:ury - lly];
  [tp fill];
  [tp setGrayStrokeWithFloat:0];
  [tp setLineWidthWithFloat:1];
  [tp rectangleWithFloat:0.5f withFloat:0.5f withFloat:urx - llx - 0.5f withFloat:ury - lly - 0.5f];
  [tp closePathStroke];
  [tp saveState];
  [tp rectangleWithFloat:1 withFloat:1 withFloat:urx - llx - 2 withFloat:ury - lly - 2];
  [tp clip];
  [tp newPath];
  [tp restoreState];
  [((ComItextpdfTextPdfPdfFormField *) nil_chk(field)) setAppearanceWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfAnnotation_get_APPEARANCE_NORMAL_() withComItextpdfTextPdfPdfTemplate:tp];
}


#line 740
- (void)toPdfWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                      withJavaIoOutputStream:(JavaIoOutputStream *)os {
  
#line 741
  [ComItextpdfTextPdfPdfWriter checkPdfIsoConformanceWithComItextpdfTextPdfPdfWriter:writer withInt:ComItextpdfTextPdfInternalPdfIsoKeys_PDFISOKEY_FORM withId:self];
  [super toPdfWithComItextpdfTextPdfPdfWriter:writer withJavaIoOutputStream:os];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfAcroForm *)other {
  [super copyAllFieldsTo:other];
  other->calculationOrder_ = calculationOrder_;
  other->documentFields_ = documentFields_;
  other->fieldTemplates_ = fieldTemplates_;
  other->sigFlags_ = sigFlags_;
  other->writer_ = writer_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfWriter:", "PdfAcroForm", NULL, 0x1, NULL },
    { "setNeedAppearancesWithBoolean:", "setNeedAppearances", "V", 0x1, NULL },
    { "addFieldTemplatesWithJavaUtilHashSet:", "addFieldTemplates", "V", 0x1, NULL },
    { "addDocumentFieldWithComItextpdfTextPdfPdfIndirectReference:", "addDocumentField", "V", 0x1, NULL },
    { "isValid", NULL, "Z", 0x1, NULL },
    { "addCalculationOrderWithComItextpdfTextPdfPdfFormField:", "addCalculationOrder", "V", 0x1, NULL },
    { "setSigFlagsWithInt:", "setSigFlags", "V", 0x1, NULL },
    { "addFormFieldWithComItextpdfTextPdfPdfFormField:", "addFormField", "V", 0x1, NULL },
    { "addHtmlPostButtonWithNSString:withNSString:withNSString:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addHtmlPostButton", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addResetButtonWithNSString:withNSString:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addResetButton", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addMapWithNSString:withNSString:withNSString:withComItextpdfTextPdfPdfContentByte:withFloat:withFloat:withFloat:withFloat:", "addMap", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "setButtonParamsWithComItextpdfTextPdfPdfFormField:withInt:withNSString:withNSString:", "setButtonParams", "V", 0x1, NULL },
    { "drawButtonWithComItextpdfTextPdfPdfFormField:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "drawButton", "V", 0x1, NULL },
    { "addHiddenFieldWithNSString:withNSString:", "addHiddenField", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addSingleLineTextFieldWithNSString:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addSingleLineTextField", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addMultiLineTextFieldWithNSString:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addMultiLineTextField", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addSingleLinePasswordFieldWithNSString:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addSingleLinePasswordField", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "setTextFieldParamsWithComItextpdfTextPdfPdfFormField:withNSString:withNSString:withFloat:withFloat:withFloat:withFloat:", "setTextFieldParams", "V", 0x1, NULL },
    { "drawSingleLineOfTextWithComItextpdfTextPdfPdfFormField:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "drawSingleLineOfText", "V", 0x1, NULL },
    { "drawMultiLineOfTextWithComItextpdfTextPdfPdfFormField:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "drawMultiLineOfText", "V", 0x1, NULL },
    { "addCheckBoxWithNSString:withNSString:withBoolean:withFloat:withFloat:withFloat:withFloat:", "addCheckBox", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "setCheckBoxParamsWithComItextpdfTextPdfPdfFormField:withNSString:withNSString:withBoolean:withFloat:withFloat:withFloat:withFloat:", "setCheckBoxParams", "V", 0x1, NULL },
    { "drawCheckBoxAppearencesWithComItextpdfTextPdfPdfFormField:withNSString:withFloat:withFloat:withFloat:withFloat:", "drawCheckBoxAppearences", "V", 0x1, NULL },
    { "getRadioGroupWithNSString:withNSString:withBoolean:", "getRadioGroup", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addRadioGroupWithComItextpdfTextPdfPdfFormField:", "addRadioGroup", "V", 0x1, NULL },
    { "addRadioButtonWithComItextpdfTextPdfPdfFormField:withNSString:withFloat:withFloat:withFloat:withFloat:", "addRadioButton", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "drawRadioAppearencesWithComItextpdfTextPdfPdfFormField:withNSString:withFloat:withFloat:withFloat:withFloat:", "drawRadioAppearences", "V", 0x1, NULL },
    { "addSelectListWithNSString:withNSStringArray:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addSelectList", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addSelectListWithNSString:withNSStringArray2:withNSString:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addSelectList", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addComboBoxWithNSString:withNSStringArray:withNSString:withBoolean:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addComboBox", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "addComboBoxWithNSString:withNSStringArray2:withNSString:withBoolean:withComItextpdfTextPdfBaseFont:withFloat:withFloat:withFloat:withFloat:withFloat:", "addComboBox", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "setChoiceParamsWithComItextpdfTextPdfPdfFormField:withNSString:withNSString:withFloat:withFloat:withFloat:withFloat:", "setChoiceParams", "V", 0x1, NULL },
    { "addSignatureWithNSString:withFloat:withFloat:withFloat:withFloat:", "addSignature", "Lcom.itextpdf.text.pdf.PdfFormField;", 0x1, NULL },
    { "setSignatureParamsWithComItextpdfTextPdfPdfFormField:withNSString:withFloat:withFloat:withFloat:withFloat:", "setSignatureParams", "V", 0x1, NULL },
    { "drawSignatureAppearencesWithComItextpdfTextPdfPdfFormField:withFloat:withFloat:withFloat:withFloat:", "drawSignatureAppearences", "V", 0x1, NULL },
    { "toPdfWithComItextpdfTextPdfPdfWriter:withJavaIoOutputStream:", "toPdf", "V", 0x1, "Ljava.io.IOException;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfWriter;", NULL,  },
    { "fieldTemplates_", NULL, 0x2, "Ljava.util.HashSet;", NULL,  },
    { "documentFields_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfArray;", NULL,  },
    { "calculationOrder_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfArray;", NULL,  },
    { "sigFlags_", NULL, 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfAcroForm = { "PdfAcroForm", "com.itextpdf.text.pdf", NULL, 0x1, 36, methods, 5, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfAcroForm;
}

@end

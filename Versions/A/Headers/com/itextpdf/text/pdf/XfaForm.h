//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/XfaForm.java
//

#ifndef _ComItextpdfTextPdfXfaForm_H_
#define _ComItextpdfTextPdfXfaForm_H_

#include "J2ObjC_header.h"
#include "java/util/ArrayList.h"

@class ComItextpdfTextPdfAcroFields;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfWriter;
@class ComItextpdfTextPdfXfaForm_AcroFieldsSearch;
@class ComItextpdfTextPdfXfaForm_Xml2SomDatasets;
@class ComItextpdfTextPdfXfaForm_Xml2SomTemplate;
@class IOSByteArray;
@class JavaIoFile;
@class JavaIoInputStream;
@class JavaUtilHashMap;
@class OrgXmlSaxInputSource;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol OrgW3cDomDocument;
@protocol OrgW3cDomNode;

@interface ComItextpdfTextPdfXfaForm : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

+ (id<JavaUtilMap>)extractXFANodesWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)domDocument;

- (void)fillXfaFormWithJavaIoFile:(JavaIoFile *)file;

- (void)fillXfaFormWithJavaIoFile:(JavaIoFile *)file
                      withBoolean:(jboolean)readOnly;

- (void)fillXfaFormWithOrgXmlSaxInputSource:(OrgXmlSaxInputSource *)is;

- (void)fillXfaFormWithOrgXmlSaxInputSource:(OrgXmlSaxInputSource *)is
                                withBoolean:(jboolean)readOnly;

- (void)fillXfaFormWithJavaIoInputStream:(JavaIoInputStream *)is;

- (void)fillXfaFormWithJavaIoInputStream:(JavaIoInputStream *)is
                             withBoolean:(jboolean)readOnly;

- (void)fillXfaFormWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (void)fillXfaFormWithOrgW3cDomNode:(id<OrgW3cDomNode>)node
                         withBoolean:(jboolean)readOnly;

- (NSString *)findDatasetsNameWithNSString:(NSString *)name;

- (id<OrgW3cDomNode>)findDatasetsNodeWithNSString:(NSString *)name;

- (NSString *)findFieldNameWithNSString:(NSString *)name
       withComItextpdfTextPdfAcroFields:(ComItextpdfTextPdfAcroFields *)af;

- (ComItextpdfTextPdfXfaForm_AcroFieldsSearch *)getAcroFieldsSom;

- (id<OrgW3cDomNode>)getDatasetsNode;

- (ComItextpdfTextPdfXfaForm_Xml2SomDatasets *)getDatasetsSom;

- (id<OrgW3cDomDocument>)getDomDocument;

+ (NSString *)getNodeTextWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (ComItextpdfTextPdfPdfReader *)getReader;

- (ComItextpdfTextPdfXfaForm_Xml2SomTemplate *)getTemplateSom;

+ (ComItextpdfTextPdfPdfObject *)getXfaObjectWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (jboolean)isChanged;

- (jboolean)isXfaPresent;

+ (IOSByteArray *)serializeDocWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (void)setAcroFieldsSomWithComItextpdfTextPdfXfaForm_AcroFieldsSearch:(ComItextpdfTextPdfXfaForm_AcroFieldsSearch *)acroFieldsSom;

- (void)setChangedWithBoolean:(jboolean)changed;

- (void)setDatasetsSomWithComItextpdfTextPdfXfaForm_Xml2SomDatasets:(ComItextpdfTextPdfXfaForm_Xml2SomDatasets *)datasetsSom;

- (void)setDomDocumentWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)domDocument;

- (void)setNodeTextWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                        withNSString:(NSString *)text;

- (void)setReaderWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader;

- (void)setTemplateSomWithComItextpdfTextPdfXfaForm_Xml2SomTemplate:(ComItextpdfTextPdfXfaForm_Xml2SomTemplate *)templateSom;

- (void)setXfaWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

+ (void)setXfaWithComItextpdfTextPdfXfaForm:(ComItextpdfTextPdfXfaForm *)form
            withComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
            withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)setXfaPresentWithBoolean:(jboolean)xfaPresent;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfXfaForm)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfXfaForm_XFA_DATA_SCHEMA_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfXfaForm, XFA_DATA_SCHEMA_, NSString *)

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_init(ComItextpdfTextPdfXfaForm *self);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm *new_ComItextpdfTextPdfXfaForm_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComItextpdfTextPdfPdfObject *ComItextpdfTextPdfXfaForm_getXfaObjectWithComItextpdfTextPdfPdfReader_(ComItextpdfTextPdfPdfReader *reader);

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_initWithComItextpdfTextPdfPdfReader_(ComItextpdfTextPdfXfaForm *self, ComItextpdfTextPdfPdfReader *reader);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm *new_ComItextpdfTextPdfXfaForm_initWithComItextpdfTextPdfPdfReader_(ComItextpdfTextPdfPdfReader *reader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<JavaUtilMap> ComItextpdfTextPdfXfaForm_extractXFANodesWithOrgW3cDomDocument_(id<OrgW3cDomDocument> domDocument);

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_setXfaWithComItextpdfTextPdfXfaForm_withComItextpdfTextPdfPdfReader_withComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfXfaForm *form, ComItextpdfTextPdfPdfReader *reader, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT IOSByteArray *ComItextpdfTextPdfXfaForm_serializeDocWithOrgW3cDomNode_(id<OrgW3cDomNode> n);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfXfaForm_getNodeTextWithOrgW3cDomNode_(id<OrgW3cDomNode> n);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfXfaForm)

@interface ComItextpdfTextPdfXfaForm_InverseStore : NSObject {
 @public
  JavaUtilArrayList *part_;
  JavaUtilArrayList *follow_;
}

#pragma mark Public

- (instancetype)init;

- (NSString *)getDefaultName;

- (jboolean)isSimilarWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfXfaForm_InverseStore)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfXfaForm_InverseStore, part_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfXfaForm_InverseStore, follow_, JavaUtilArrayList *)

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_InverseStore_init(ComItextpdfTextPdfXfaForm_InverseStore *self);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm_InverseStore *new_ComItextpdfTextPdfXfaForm_InverseStore_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfXfaForm_InverseStore)

@interface ComItextpdfTextPdfXfaForm_Stack2 : JavaUtilArrayList

#pragma mark Public

- (instancetype)init;

- (jboolean)empty;

- (id)peek;

- (id)pop;

- (id)pushWithId:(id)item;

#pragma mark Package-Private


@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfXfaForm_Stack2)

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_Stack2_init(ComItextpdfTextPdfXfaForm_Stack2 *self);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm_Stack2 *new_ComItextpdfTextPdfXfaForm_Stack2_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfXfaForm_Stack2)

@interface ComItextpdfTextPdfXfaForm_Xml2Som : NSObject {
 @public
  JavaUtilArrayList *order_;
  JavaUtilHashMap *name2Node_;
  JavaUtilHashMap *inverseSearch_;
  ComItextpdfTextPdfXfaForm_Stack2 *stack_;
  jint anform_;
}

#pragma mark Public

- (instancetype)init;

+ (NSString *)escapeSomWithNSString:(NSString *)s;

- (JavaUtilHashMap *)getInverseSearch;

- (JavaUtilHashMap *)getName2Node;

- (JavaUtilArrayList *)getOrder;

+ (NSString *)getShortNameWithNSString:(NSString *)s;

+ (void)inverseSearchAddWithJavaUtilHashMap:(JavaUtilHashMap *)inverseSearch
       withComItextpdfTextPdfXfaForm_Stack2:(ComItextpdfTextPdfXfaForm_Stack2 *)stack
                               withNSString:(NSString *)unstack;

- (void)inverseSearchAddWithNSString:(NSString *)unstack;

- (NSString *)inverseSearchGlobalWithJavaUtilArrayList:(JavaUtilArrayList *)parts;

- (void)setInverseSearchWithJavaUtilHashMap:(JavaUtilHashMap *)inverseSearch;

- (void)setName2NodeWithJavaUtilHashMap:(JavaUtilHashMap *)name2Node;

- (void)setOrderWithJavaUtilArrayList:(JavaUtilArrayList *)order;

+ (ComItextpdfTextPdfXfaForm_Stack2 *)splitPartsWithNSString:(NSString *)name;

+ (NSString *)unescapeSomWithNSString:(NSString *)s;

#pragma mark Protected

- (NSString *)printStack;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfXfaForm_Xml2Som)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfXfaForm_Xml2Som, order_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfXfaForm_Xml2Som, name2Node_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfXfaForm_Xml2Som, inverseSearch_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfXfaForm_Xml2Som, stack_, ComItextpdfTextPdfXfaForm_Stack2 *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfXfaForm_Xml2Som_escapeSomWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfXfaForm_Xml2Som_unescapeSomWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfXfaForm_Xml2Som_getShortNameWithNSString_(NSString *s);

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_Xml2Som_inverseSearchAddWithJavaUtilHashMap_withComItextpdfTextPdfXfaForm_Stack2_withNSString_(JavaUtilHashMap *inverseSearch, ComItextpdfTextPdfXfaForm_Stack2 *stack, NSString *unstack);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm_Stack2 *ComItextpdfTextPdfXfaForm_Xml2Som_splitPartsWithNSString_(NSString *name);

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_Xml2Som_init(ComItextpdfTextPdfXfaForm_Xml2Som *self);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm_Xml2Som *new_ComItextpdfTextPdfXfaForm_Xml2Som_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfXfaForm_Xml2Som)

@interface ComItextpdfTextPdfXfaForm_Xml2SomDatasets : ComItextpdfTextPdfXfaForm_Xml2Som

#pragma mark Public

- (instancetype)initWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (id<OrgW3cDomNode>)insertNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                                    withNSString:(NSString *)shortName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfXfaForm_Xml2SomDatasets)

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(ComItextpdfTextPdfXfaForm_Xml2SomDatasets *self, id<OrgW3cDomNode> n);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm_Xml2SomDatasets *new_ComItextpdfTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfXfaForm_Xml2SomDatasets)

@interface ComItextpdfTextPdfXfaForm_AcroFieldsSearch : ComItextpdfTextPdfXfaForm_Xml2Som

#pragma mark Public

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)items;

- (JavaUtilHashMap *)getAcroShort2LongName;

- (void)setAcroShort2LongNameWithJavaUtilHashMap:(JavaUtilHashMap *)acroShort2LongName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfXfaForm_AcroFieldsSearch)

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(ComItextpdfTextPdfXfaForm_AcroFieldsSearch *self, id<JavaUtilCollection> items);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm_AcroFieldsSearch *new_ComItextpdfTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(id<JavaUtilCollection> items) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfXfaForm_AcroFieldsSearch)

@interface ComItextpdfTextPdfXfaForm_Xml2SomTemplate : ComItextpdfTextPdfXfaForm_Xml2Som

#pragma mark Public

- (instancetype)initWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (NSString *)getFieldTypeWithNSString:(NSString *)s;

- (jboolean)isDynamicForm;

- (void)setDynamicFormWithBoolean:(jboolean)dynamicForm;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfXfaForm_Xml2SomTemplate)

FOUNDATION_EXPORT void ComItextpdfTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(ComItextpdfTextPdfXfaForm_Xml2SomTemplate *self, id<OrgW3cDomNode> n);

FOUNDATION_EXPORT ComItextpdfTextPdfXfaForm_Xml2SomTemplate *new_ComItextpdfTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfXfaForm_Xml2SomTemplate)

#endif // _ComItextpdfTextPdfXfaForm_H_

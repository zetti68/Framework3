//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/SimpleNamedDestination.java
//

#ifndef _ComItextpdfTextPdfSimpleNamedDestination_H_
#define _ComItextpdfTextPdfSimpleNamedDestination_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/xml/simpleparser/SimpleXMLDocHandler.h"

@class ComItextpdfTextPdfPdfArray;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfWriter;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaIoReader;
@class JavaIoWriter;
@class JavaUtilHashMap;
@protocol JavaUtilMap;

@interface ComItextpdfTextPdfSimpleNamedDestination : NSObject < ComItextpdfTextXmlSimpleparserSimpleXMLDocHandler >

#pragma mark Public

- (void)endDocument;

- (void)endElementWithNSString:(NSString *)tag;

+ (NSString *)escapeBinaryStringWithNSString:(NSString *)s;

+ (void)exportToXMLWithJavaUtilHashMap:(JavaUtilHashMap *)names
                withJavaIoOutputStream:(JavaIoOutputStream *)outArg
                          withNSString:(NSString *)encoding
                           withBoolean:(jboolean)onlyASCII;

+ (void)exportToXMLWithJavaUtilHashMap:(JavaUtilHashMap *)names
                      withJavaIoWriter:(JavaIoWriter *)wrt
                          withNSString:(NSString *)encoding
                           withBoolean:(jboolean)onlyASCII;

+ (JavaUtilHashMap *)getNamedDestinationWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                                                            withBoolean:(jboolean)fromNames;

+ (JavaUtilHashMap *)importFromXMLWithJavaIoInputStream:(JavaIoInputStream *)inArg;

+ (JavaUtilHashMap *)importFromXMLWithJavaIoReader:(JavaIoReader *)inArg;

+ (ComItextpdfTextPdfPdfDictionary *)outputNamedDestinationAsNamesWithJavaUtilHashMap:(JavaUtilHashMap *)names
                                                      withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

+ (ComItextpdfTextPdfPdfDictionary *)outputNamedDestinationAsStringsWithJavaUtilHashMap:(JavaUtilHashMap *)names
                                                        withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)startDocument;

- (void)startElementWithNSString:(NSString *)tag
                 withJavaUtilMap:(id<JavaUtilMap>)h;

- (void)textWithNSString:(NSString *)str;

+ (NSString *)unEscapeBinaryStringWithNSString:(NSString *)s;

#pragma mark Package-Private

+ (ComItextpdfTextPdfPdfArray *)createDestinationArrayWithNSString:(NSString *)value
                                   withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfSimpleNamedDestination)

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfSimpleNamedDestination_getNamedDestinationWithComItextpdfTextPdfPdfReader_withBoolean_(ComItextpdfTextPdfPdfReader *reader, jboolean fromNames);

FOUNDATION_EXPORT void ComItextpdfTextPdfSimpleNamedDestination_exportToXMLWithJavaUtilHashMap_withJavaIoOutputStream_withNSString_withBoolean_(JavaUtilHashMap *names, JavaIoOutputStream *outArg, NSString *encoding, jboolean onlyASCII);

FOUNDATION_EXPORT void ComItextpdfTextPdfSimpleNamedDestination_exportToXMLWithJavaUtilHashMap_withJavaIoWriter_withNSString_withBoolean_(JavaUtilHashMap *names, JavaIoWriter *wrt, NSString *encoding, jboolean onlyASCII);

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfSimpleNamedDestination_importFromXMLWithJavaIoInputStream_(JavaIoInputStream *inArg);

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfSimpleNamedDestination_importFromXMLWithJavaIoReader_(JavaIoReader *inArg);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfArray *ComItextpdfTextPdfSimpleNamedDestination_createDestinationArrayWithNSString_withComItextpdfTextPdfPdfWriter_(NSString *value, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDictionary *ComItextpdfTextPdfSimpleNamedDestination_outputNamedDestinationAsNamesWithJavaUtilHashMap_withComItextpdfTextPdfPdfWriter_(JavaUtilHashMap *names, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfDictionary *ComItextpdfTextPdfSimpleNamedDestination_outputNamedDestinationAsStringsWithJavaUtilHashMap_withComItextpdfTextPdfPdfWriter_(JavaUtilHashMap *names, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfSimpleNamedDestination_escapeBinaryStringWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfSimpleNamedDestination_unEscapeBinaryStringWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfSimpleNamedDestination)

#endif // _ComItextpdfTextPdfSimpleNamedDestination_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/security/EncryptionAlgorithms.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/security/EncryptionAlgorithms.java"

#include "com/itextpdf/text/pdf/security/EncryptionAlgorithms.h"
#include "java/util/HashMap.h"

BOOL ComItextpdfTextPdfSecurityEncryptionAlgorithms_initialized = NO;


#line 52
@implementation ComItextpdfTextPdfSecurityEncryptionAlgorithms

JavaUtilHashMap * ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_;


#line 82
+ (NSString *)getAlgorithmWithNSString:(NSString *)oid {
  
#line 83
  NSString *ret = [((JavaUtilHashMap *) nil_chk(ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_)) getWithId:oid];
  if (ret == nil)
#line 85
  return oid;
  else
#line 87
  return ret;
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfSecurityEncryptionAlgorithms class]) {
    ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ =
#line 55
    [[JavaUtilHashMap alloc] init];
    {
      
#line 58
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.1" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.10040.4.1" withId:@"DSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.2" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.4" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.5" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.14" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.11" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.12" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.113549.1.1.13" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.840.10040.4.3" withId:@"DSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"2.16.840.1.101.3.4.3.1" withId:@"DSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"2.16.840.1.101.3.4.3.2" withId:@"DSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.3.14.3.2.29" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.3.36.3.3.1.2" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.3.36.3.3.1.3" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.3.36.3.3.1.4" withId:@"RSA"];
      (void) [ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_ putWithId:@"1.2.643.2.2.19" withId:@"ECGOST3410"];
    }
    ComItextpdfTextPdfSecurityEncryptionAlgorithms_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getAlgorithmWithNSString:", "getAlgorithm", "Ljava.lang.String;", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "algorithmNames_", NULL, 0x18, "Ljava.util.HashMap;", &ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfSecurityEncryptionAlgorithms = { "EncryptionAlgorithms", "com.itextpdf.text.pdf.security", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextPdfSecurityEncryptionAlgorithms;
}

@end

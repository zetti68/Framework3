//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/security/EncryptionAlgorithms.java
//

#ifndef _ComItextpdfTextPdfSecurityEncryptionAlgorithms_H_
#define _ComItextpdfTextPdfSecurityEncryptionAlgorithms_H_

#include "J2ObjC_header.h"

@class JavaUtilHashMap;

@interface ComItextpdfTextPdfSecurityEncryptionAlgorithms : NSObject

#pragma mark Public

- (instancetype)init;

+ (NSString *)getAlgorithmWithNSString:(NSString *)oid;

@end

J2OBJC_STATIC_INIT(ComItextpdfTextPdfSecurityEncryptionAlgorithms)

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfSecurityEncryptionAlgorithms_algorithmNames_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfSecurityEncryptionAlgorithms, algorithmNames_, JavaUtilHashMap *)

FOUNDATION_EXPORT NSString *ComItextpdfTextPdfSecurityEncryptionAlgorithms_getAlgorithmWithNSString_(NSString *oid);

FOUNDATION_EXPORT void ComItextpdfTextPdfSecurityEncryptionAlgorithms_init(ComItextpdfTextPdfSecurityEncryptionAlgorithms *self);

FOUNDATION_EXPORT ComItextpdfTextPdfSecurityEncryptionAlgorithms *new_ComItextpdfTextPdfSecurityEncryptionAlgorithms_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfSecurityEncryptionAlgorithms)

#endif // _ComItextpdfTextPdfSecurityEncryptionAlgorithms_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/security/PrivateKeySignature.java
//

#ifndef _ComItextpdfTextPdfSecurityPrivateKeySignature_H_
#define _ComItextpdfTextPdfSecurityPrivateKeySignature_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/pdf/security/ExternalSignature.h"

@class IOSByteArray;
@protocol JavaSecurityPrivateKey;

@interface ComItextpdfTextPdfSecurityPrivateKeySignature : NSObject < ComItextpdfTextPdfSecurityExternalSignature >

#pragma mark Public

- (instancetype)initWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)pk
                                  withNSString:(NSString *)hashAlgorithm
                                  withNSString:(NSString *)provider;

- (NSString *)getEncryptionAlgorithm;

- (NSString *)getHashAlgorithm;

- (IOSByteArray *)signWithByteArray:(IOSByteArray *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfSecurityPrivateKeySignature)

FOUNDATION_EXPORT void ComItextpdfTextPdfSecurityPrivateKeySignature_initWithJavaSecurityPrivateKey_withNSString_withNSString_(ComItextpdfTextPdfSecurityPrivateKeySignature *self, id<JavaSecurityPrivateKey> pk, NSString *hashAlgorithm, NSString *provider);

FOUNDATION_EXPORT ComItextpdfTextPdfSecurityPrivateKeySignature *new_ComItextpdfTextPdfSecurityPrivateKeySignature_initWithJavaSecurityPrivateKey_withNSString_withNSString_(id<JavaSecurityPrivateKey> pk, NSString *hashAlgorithm, NSString *provider) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfSecurityPrivateKeySignature)

#endif // _ComItextpdfTextPdfSecurityPrivateKeySignature_H_

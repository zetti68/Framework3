//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfPCell.java
//

#ifndef _ComItextpdfTextPdfPdfPCell_H_
#define _ComItextpdfTextPdfPdfPCell_H_

@class ComItextpdfTextAccessibleElementId;
@class ComItextpdfTextImage;
@class ComItextpdfTextPdfColumnText;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfPHeaderCell;
@class ComItextpdfTextPdfPdfPTable;
@class ComItextpdfTextPhrase;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@protocol ComItextpdfTextElement;
@protocol ComItextpdfTextPdfPdfPCellEvent;
@protocol JavaUtilList;

#import "JreEmulation.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/pdf/interfaces/IAccessibleElement.h"

@interface ComItextpdfTextPdfPdfPCell : ComItextpdfTextRectangle < ComItextpdfTextPdfInterfacesIAccessibleElement > {
 @public
  ComItextpdfTextPdfColumnText *column_;
  jint verticalAlignment_;
  jfloat paddingLeft_;
  jfloat paddingRight_;
  jfloat paddingTop_;
  jfloat paddingBottom_;
  jfloat fixedHeight_;
  jfloat minimumHeight_;
  jboolean noWrap_;
  ComItextpdfTextPdfPdfPTable *table_;
  jint colspan_;
  jint rowspan_;
  ComItextpdfTextImage *image_;
  id<ComItextpdfTextPdfPdfPCellEvent> cellEvent_;
  jboolean useDescender_;
  jboolean useBorderPadding_;
  ComItextpdfTextPhrase *phrase_;
  jint rotation_PdfPCell_;
  ComItextpdfTextPdfPdfName *role_;
  JavaUtilHashMap *accessibleAttributes_;
  ComItextpdfTextAccessibleElementId *id__;
  JavaUtilArrayList *headers_;
}

- (instancetype)init;

- (instancetype)initWithComItextpdfTextPhrase:(ComItextpdfTextPhrase *)phrase;

- (instancetype)initWithComItextpdfTextImage:(ComItextpdfTextImage *)image;

- (instancetype)initWithComItextpdfTextImage:(ComItextpdfTextImage *)image
                                 withBoolean:(jboolean)fit;

- (instancetype)initWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)table;

- (instancetype)initWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)table
                     withComItextpdfTextPdfPdfPCell:(ComItextpdfTextPdfPdfPCell *)style;

- (instancetype)initWithComItextpdfTextPdfPdfPCell:(ComItextpdfTextPdfPdfPCell *)cell;

- (void)addElementWithComItextpdfTextElement:(id<ComItextpdfTextElement>)element;

- (ComItextpdfTextPhrase *)getPhrase;

- (void)setPhraseWithComItextpdfTextPhrase:(ComItextpdfTextPhrase *)phrase;

- (jint)getHorizontalAlignment;

- (void)setHorizontalAlignmentWithInt:(jint)horizontalAlignment;

- (jint)getVerticalAlignment;

- (void)setVerticalAlignmentWithInt:(jint)verticalAlignment;

- (jfloat)getEffectivePaddingLeft;

- (jfloat)getPaddingLeft;

- (void)setPaddingLeftWithFloat:(jfloat)paddingLeft;

- (jfloat)getEffectivePaddingRight;

- (jfloat)getPaddingRight;

- (void)setPaddingRightWithFloat:(jfloat)paddingRight;

- (jfloat)getEffectivePaddingTop;

- (jfloat)getPaddingTop;

- (void)setPaddingTopWithFloat:(jfloat)paddingTop;

- (jfloat)getEffectivePaddingBottom;

- (jfloat)getPaddingBottom;

- (void)setPaddingBottomWithFloat:(jfloat)paddingBottom;

- (void)setPaddingWithFloat:(jfloat)padding;

- (jboolean)isUseBorderPadding;

- (void)setUseBorderPaddingWithBoolean:(jboolean)use;

- (void)setLeadingWithFloat:(jfloat)fixedLeading
                  withFloat:(jfloat)multipliedLeading;

- (jfloat)getLeading;

- (jfloat)getMultipliedLeading;

- (void)setIndentWithFloat:(jfloat)indent;

- (jfloat)getIndent;

- (jfloat)getExtraParagraphSpace;

- (void)setExtraParagraphSpaceWithFloat:(jfloat)extraParagraphSpace;

- (void)setFixedHeightWithFloat:(jfloat)fixedHeight;

- (jfloat)getFixedHeight;

- (jboolean)hasFixedHeight;

- (void)setMinimumHeightWithFloat:(jfloat)minimumHeight;

- (jfloat)getMinimumHeight;

- (jboolean)hasMinimumHeight;

- (jboolean)isNoWrap;

- (void)setNoWrapWithBoolean:(jboolean)noWrap;

- (ComItextpdfTextPdfPdfPTable *)getTable;

- (void)setTableWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)table;

- (jint)getColspan;

- (void)setColspanWithInt:(jint)colspan;

- (jint)getRowspan;

- (void)setRowspanWithInt:(jint)rowspan;

- (void)setFollowingIndentWithFloat:(jfloat)indent;

- (jfloat)getFollowingIndent;

- (void)setRightIndentWithFloat:(jfloat)indent;

- (jfloat)getRightIndent;

- (jfloat)getSpaceCharRatio;

- (void)setSpaceCharRatioWithFloat:(jfloat)spaceCharRatio;

- (void)setRunDirectionWithInt:(jint)runDirection;

- (jint)getRunDirection;

- (ComItextpdfTextImage *)getImage;

- (void)setImageWithComItextpdfTextImage:(ComItextpdfTextImage *)image;

- (id<ComItextpdfTextPdfPdfPCellEvent>)getCellEvent;

- (void)setCellEventWithComItextpdfTextPdfPdfPCellEvent:(id<ComItextpdfTextPdfPdfPCellEvent>)cellEvent;

- (jint)getArabicOptions;

- (void)setArabicOptionsWithInt:(jint)arabicOptions;

- (jboolean)isUseAscender;

- (void)setUseAscenderWithBoolean:(jboolean)useAscender;

- (jboolean)isUseDescender;

- (void)setUseDescenderWithBoolean:(jboolean)useDescender;

- (ComItextpdfTextPdfColumnText *)getColumn;

- (id<JavaUtilList>)getCompositeElements;

- (void)setColumnWithComItextpdfTextPdfColumnText:(ComItextpdfTextPdfColumnText *)column;

- (jint)getRotation;

- (void)setRotationWithInt:(jint)rotation;

- (jfloat)getMaxHeight;

- (ComItextpdfTextPdfPdfObject *)getAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key;

- (void)setAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                            withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (JavaUtilHashMap *)getAccessibleAttributes;

- (ComItextpdfTextPdfPdfName *)getRole;

- (void)setRoleWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)role;

- (ComItextpdfTextAccessibleElementId *)getId;

- (void)setIdWithComItextpdfTextAccessibleElementId:(ComItextpdfTextAccessibleElementId *)id_;

- (jboolean)isInline;

- (void)addHeaderWithComItextpdfTextPdfPdfPHeaderCell:(ComItextpdfTextPdfPdfPHeaderCell *)header;

- (JavaUtilArrayList *)getHeaders;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfPCell *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfPdfPCell_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, column_, ComItextpdfTextPdfColumnText *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, table_, ComItextpdfTextPdfPdfPTable *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, image_, ComItextpdfTextImage *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, cellEvent_, id<ComItextpdfTextPdfPdfPCellEvent>)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, phrase_, ComItextpdfTextPhrase *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, role_, ComItextpdfTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, accessibleAttributes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, id__, ComItextpdfTextAccessibleElementId *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfPCell, headers_, JavaUtilArrayList *)

#endif // _ComItextpdfTextPdfPdfPCell_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/ExtendedColor.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/ExtendedColor.java"

#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/pdf/ExtendedColor.h"


#line 53
@implementation ComItextpdfTextPdfExtendedColor


#line 75
- (instancetype)initWithInt:(jint)type {
  if (self =
#line 76
  [super initWithInt:0 withInt:0 withInt:0]) {
    
#line 77
    self->type_ = type;
  }
  return self;
}


#line 87
- (instancetype)initWithInt:(jint)type
                  withFloat:(jfloat)red
                  withFloat:(jfloat)green
                  withFloat:(jfloat)blue {
  if (self =
#line 88
  [super initWithFloat:[ComItextpdfTextPdfExtendedColor normalizeWithFloat:red] withFloat:[ComItextpdfTextPdfExtendedColor normalizeWithFloat:green] withFloat:[ComItextpdfTextPdfExtendedColor normalizeWithFloat:blue]]) {
    
#line 89
    self->type_ = type;
  }
  return self;
}


#line 99
- (instancetype)initWithInt:(jint)type
                    withInt:(jint)red
                    withInt:(jint)green
                    withInt:(jint)blue
                    withInt:(jint)alpha {
  if (self = [super initWithFloat:[ComItextpdfTextPdfExtendedColor normalizeWithFloat:(jfloat) red / (jint) 0xFF] withFloat:[ComItextpdfTextPdfExtendedColor normalizeWithFloat:(jfloat) green / (jint) 0xFF] withFloat:[ComItextpdfTextPdfExtendedColor normalizeWithFloat:(jfloat) blue / (jint) 0xFF] withFloat:[ComItextpdfTextPdfExtendedColor normalizeWithFloat:(jfloat) alpha / (jint) 0xFF]]) {
    
#line 101
    self->type_ = type;
  }
  return self;
}


#line 108
- (jint)getType {
  
#line 109
  return type_;
}


#line 117
+ (jint)getTypeWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 118
  if ([color isKindOfClass:[ComItextpdfTextPdfExtendedColor class]])
#line 119
  return [((ComItextpdfTextPdfExtendedColor *) nil_chk(((ComItextpdfTextPdfExtendedColor *) check_class_cast(color, [ComItextpdfTextPdfExtendedColor class])))) getType];
  return ComItextpdfTextPdfExtendedColor_TYPE_RGB;
}


#line 123
+ (jfloat)normalizeWithFloat:(jfloat)value {
  
#line 124
  if (value < 0)
#line 125
  return 0;
  if (value > 1)
#line 127
  return 1;
  return value;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfExtendedColor *)other {
  [super copyAllFieldsTo:other];
  other->type_ = type_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "ExtendedColor", NULL, 0x1, NULL },
    { "initWithInt:withFloat:withFloat:withFloat:", "ExtendedColor", NULL, 0x1, NULL },
    { "initWithInt:withInt:withInt:withInt:withInt:", "ExtendedColor", NULL, 0x1, NULL },
    { "getType", NULL, "I", 0x1, NULL },
    { "getTypeWithComItextpdfTextBaseColor:", "getType", "I", 0x9, NULL },
    { "normalizeWithFloat:", "normalize", "F", 0x18, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = ComItextpdfTextPdfExtendedColor_serialVersionUID },
    { "TYPE_RGB_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfExtendedColor_TYPE_RGB },
    { "TYPE_GRAY_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfExtendedColor_TYPE_GRAY },
    { "TYPE_CMYK_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfExtendedColor_TYPE_CMYK },
    { "TYPE_SEPARATION_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfExtendedColor_TYPE_SEPARATION },
    { "TYPE_PATTERN_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfExtendedColor_TYPE_PATTERN },
    { "TYPE_SHADING_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfExtendedColor_TYPE_SHADING },
    { "type_", NULL, 0x4, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfExtendedColor = { "ExtendedColor", "com.itextpdf.text.pdf", NULL, 0x401, 6, methods, 8, fields, 0, NULL};
  return &_ComItextpdfTextPdfExtendedColor;
}

@end

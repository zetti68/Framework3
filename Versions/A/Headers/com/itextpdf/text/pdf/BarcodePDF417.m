//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodePDF417.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BarcodePDF417.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/BadElementException.h"
#include "com/itextpdf/text/Element.h"
#include "com/itextpdf/text/Image.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/BarcodePDF417.h"
#include "com/itextpdf/text/pdf/PdfEncodings.h"
#include "com/itextpdf/text/pdf/codec/CCITTG4Encoder.h"
#include "java/io/PrintStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"

BOOL ComItextpdfTextPdfBarcodePDF417_initialized = NO;


#line 60
@implementation ComItextpdfTextPdfBarcodePDF417

NSString * ComItextpdfTextPdfBarcodePDF417_MIXED_SET_ = 
#line 1070
@"0123456789&\x0d\t,:#-.$/+%*=^";
NSString * ComItextpdfTextPdfBarcodePDF417_PUNCTUATION_SET_ = 
#line 1071
@";<>@[\\]_`~!\x0d\t,:\n-.$/\"|*()?{}'";
IOSObjectArray * ComItextpdfTextPdfBarcodePDF417_CLUSTERS_;
IOSObjectArray * ComItextpdfTextPdfBarcodePDF417_ERROR_LEVEL_;


#line 110
- (instancetype)init {
  if (self = [super init]) {
    macroSegmentCount_ =
#line 100
    0;
    macroSegmentId_ =
#line 101
    -1;
    codewords_ = [IOSIntArray arrayWithLength:
#line 1521
    ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS + 2];
    
#line 111
    [self setDefaultParameters];
  }
  return self;
}


#line 119
- (void)setMacroSegmentIdWithInt:(jint)id_ {
  
#line 120
  self->macroSegmentId_ = id_;
}


#line 128
- (void)setMacroSegmentCountWithInt:(jint)cnt {
  
#line 129
  self->macroSegmentCount_ = cnt;
}


#line 136
- (void)setMacroFileIdWithNSString:(NSString *)id_ {
  
#line 137
  self->macroFileId_ = id_;
}


#line 140
- (jboolean)checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:(ComItextpdfTextPdfBarcodePDF417_Segment *)segment
                                                               withChar:(jchar)type {
  
#line 141
  if (segment == nil)
#line 142
  return NO;
  return ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(segment))->type_ == type;
}


#line 146
- (jint)getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:(ComItextpdfTextPdfBarcodePDF417_Segment *)segment {
  
#line 147
  if (segment == nil)
#line 148
  return 0;
  return ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(segment))->end_ - segment->start_;
}

- (void)setDefaultParameters {
  
#line 156
  options_ = 0;
  outBits_ = nil;
  text_ = [IOSByteArray arrayWithLength:0];
  yHeight_ = 3;
  aspectRatio_ = 0.5f;
}


#line 163
- (void)outCodeword17WithInt:(jint)codeword {
  
#line 164
  jint bytePtr = bitPtr_ / 8;
  jint bit = bitPtr_ - bytePtr * 8;
  *IOSByteArray_GetRef(nil_chk(outBits_), bytePtr++) |= RShift32(codeword, 9 + bit);
  *IOSByteArray_GetRef(outBits_, bytePtr++) |= RShift32(codeword, 1 + bit);
  LShiftAssignInt(&codeword, 8);
  *IOSByteArray_GetRef(outBits_, bytePtr) |= RShift32(codeword, 1 + bit);
  bitPtr_ += 17;
}


#line 173
- (void)outCodeword18WithInt:(jint)codeword {
  
#line 174
  jint bytePtr = bitPtr_ / 8;
  jint bit = bitPtr_ - bytePtr * 8;
  *IOSByteArray_GetRef(nil_chk(outBits_), bytePtr++) |= RShift32(codeword, 10 + bit);
  *IOSByteArray_GetRef(outBits_, bytePtr++) |= RShift32(codeword, 2 + bit);
  LShiftAssignInt(&codeword, 8);
  *IOSByteArray_GetRef(outBits_, bytePtr) |= RShift32(codeword, 2 + bit);
  if (bit == 7)
#line 181
  *IOSByteArray_GetRef(outBits_, ++bytePtr) |= (jint) 0x80;
  bitPtr_ += 18;
}


#line 185
- (void)outCodewordWithInt:(jint)codeword {
  
#line 186
  [self outCodeword17WithInt:codeword];
}


#line 189
- (void)outStopPattern {
  
#line 190
  [self outCodeword18WithInt:ComItextpdfTextPdfBarcodePDF417_STOP_PATTERN];
}


#line 193
- (void)outStartPattern {
  
#line 194
  [self outCodeword17WithInt:ComItextpdfTextPdfBarcodePDF417_START_PATTERN];
}


#line 197
- (void)outPaintCode {
  
#line 198
  jint codePtr = 0;
  bitColumns_ = ComItextpdfTextPdfBarcodePDF417_START_CODE_SIZE * (codeColumns_ + 3) + ComItextpdfTextPdfBarcodePDF417_STOP_SIZE;
  jint lenBits = ((bitColumns_ - 1) / 8 + 1) * codeRows_;
  outBits_ = [IOSByteArray arrayWithLength:lenBits];
  for (jint row = 0; row < codeRows_; ++row) {
    bitPtr_ = ((bitColumns_ - 1) / 8 + 1) * 8 * row;
    jint rowMod = row % 3;
    IOSIntArray *cluster = IOSObjectArray_Get(nil_chk(ComItextpdfTextPdfBarcodePDF417_CLUSTERS_), rowMod);
    [self outStartPattern];
    jint edge = 0;
    switch (rowMod) {
      case 0:
      edge = 30 * (row / 3) + (codeRows_ - 1) / 3;
      break;
      case 1:
      edge = 30 * (row / 3) + errorLevel_ * 3 + (codeRows_ - 1) % 3;
      break;
      default:
      edge = 30 * (row / 3) + codeColumns_ - 1;
      break;
    }
    [self outCodewordWithInt:IOSIntArray_Get(nil_chk(cluster), edge)];
    
#line 221
    for (jint column = 0; column < codeColumns_; ++column) {
      [self outCodewordWithInt:IOSIntArray_Get(cluster, IOSIntArray_Get(nil_chk(codewords_), codePtr++))];
    }
    
#line 225
    switch (rowMod) {
      case 0:
      edge = 30 * (row / 3) + codeColumns_ - 1;
      break;
      case 1:
      edge = 30 * (row / 3) + (codeRows_ - 1) / 3;
      break;
      default:
      edge = 30 * (row / 3) + errorLevel_ * 3 + (codeRows_ - 1) % 3;
      break;
    }
    [self outCodewordWithInt:IOSIntArray_Get(cluster, edge)];
    [self outStopPattern];
  }
  if ((options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_INVERT_BITMAP) != 0) {
    for (jint k = 0; k < outBits_->size_; ++k)
#line 241
    *IOSByteArray_GetRef(outBits_, k) ^= (jint) 0xff;
  }
}


#line 245
- (void)calculateErrorCorrectionWithInt:(jint)dest {
  
#line 246
  if (errorLevel_ < 0 || errorLevel_ > 8)
#line 247
  errorLevel_ = 0;
  IOSIntArray *A = IOSObjectArray_Get(nil_chk(ComItextpdfTextPdfBarcodePDF417_ERROR_LEVEL_), errorLevel_);
  jint Alength = LShift32(2, errorLevel_);
  for (jint k = 0; k < Alength; ++k)
#line 251
  *IOSIntArray_GetRef(nil_chk(codewords_), dest + k) = 0;
  jint lastE = Alength - 1;
  for (jint k = 0; k < lenCodewords_; ++k) {
    jint t1 = IOSIntArray_Get(nil_chk(codewords_), k) + IOSIntArray_Get(codewords_, dest);
    for (jint e = 0; e <= lastE; ++e) {
      jint t2 = t1 * IOSIntArray_Get(nil_chk(A), lastE - e) % ComItextpdfTextPdfBarcodePDF417_MOD;
      jint t3 = ComItextpdfTextPdfBarcodePDF417_MOD - t2;
      *IOSIntArray_GetRef(codewords_, dest + e) = ((e == lastE ? 0 : IOSIntArray_Get(codewords_, dest + e + 1)) + t3) % ComItextpdfTextPdfBarcodePDF417_MOD;
    }
  }
  for (jint k = 0; k < Alength; ++k)
#line 262
  *IOSIntArray_GetRef(nil_chk(codewords_), dest + k) = (ComItextpdfTextPdfBarcodePDF417_MOD - IOSIntArray_Get(codewords_, dest + k)) % ComItextpdfTextPdfBarcodePDF417_MOD;
}


#line 265
+ (jint)getTextTypeAndValueWithByteArray:(IOSByteArray *)input
                                 withInt:(jint)maxLength
                                 withInt:(jint)idx {
  
#line 266
  if (idx >= maxLength)
#line 267
  return 0;
  jchar c = (jchar) (IOSByteArray_Get(nil_chk(input), idx) & (jint) 0xff);
  if (c >= 'A' && c <= 'Z')
#line 270
  return ComItextpdfTextPdfBarcodePDF417_ALPHA + c - 'A';
  if (c >= 'a' && c <= 'z')
#line 272
  return ComItextpdfTextPdfBarcodePDF417_LOWER + c - 'a';
  if (c == ' ')
#line 274
  return ComItextpdfTextPdfBarcodePDF417_ALPHA + ComItextpdfTextPdfBarcodePDF417_LOWER + ComItextpdfTextPdfBarcodePDF417_MIXED + ComItextpdfTextPdfBarcodePDF417_SPACE;
  jint ms = [((NSString *) nil_chk(ComItextpdfTextPdfBarcodePDF417_MIXED_SET_)) indexOf:c];
  jint ps = [((NSString *) nil_chk(ComItextpdfTextPdfBarcodePDF417_PUNCTUATION_SET_)) indexOf:c];
  if (ms < 0 && ps < 0)
#line 278
  return ComItextpdfTextPdfBarcodePDF417_ISBYTE + c;
  if (ms == ps)
#line 280
  return ComItextpdfTextPdfBarcodePDF417_MIXED + ComItextpdfTextPdfBarcodePDF417_PUNCTUATION + ms;
  if (ms >= 0)
#line 282
  return ComItextpdfTextPdfBarcodePDF417_MIXED + ms;
  return ComItextpdfTextPdfBarcodePDF417_PUNCTUATION + ps;
}


#line 286
- (jint)getTextTypeAndValueWithInt:(jint)maxLength
                           withInt:(jint)idx {
  
#line 287
  return [ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:text_ withInt:maxLength withInt:idx];
}


#line 290
- (void)textCompactionWithByteArray:(IOSByteArray *)input
                            withInt:(jint)start
                            withInt:(jint)length {
  
#line 291
  IOSIntArray *dest = [IOSIntArray arrayWithLength:ComItextpdfTextPdfBarcodePDF417_ABSOLUTE_MAX_TEXT_SIZE * 2];
  jint mode = ComItextpdfTextPdfBarcodePDF417_ALPHA;
  jint ptr = 0;
  jint fullBytes = 0;
  jint v = 0;
  jint k;
  jint size;
  length += start;
  for (k = start; k < length; ++k) {
    v = [ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k];
    if ((v & mode) != 0) {
      *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
      continue;
    }
    if ((v & ComItextpdfTextPdfBarcodePDF417_ISBYTE) != 0) {
      if ((ptr & 1) != 0) {
        
#line 308
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PAL;
        mode = (mode & ComItextpdfTextPdfBarcodePDF417_PUNCTUATION) != 0 ? ComItextpdfTextPdfBarcodePDF417_ALPHA : mode;
      }
      *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_BYTESHIFT;
      *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
      fullBytes += 2;
      continue;
    }
    switch (mode) {
      case ComItextpdfTextPdfBarcodePDF417_ALPHA:
      if ((v & ComItextpdfTextPdfBarcodePDF417_LOWER) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_LL;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_LOWER;
      }
      else if ((v & ComItextpdfTextPdfBarcodePDF417_MIXED) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_ML;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_MIXED;
      }
      else if (([ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 1] & [ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 2] & ComItextpdfTextPdfBarcodePDF417_PUNCTUATION) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_ML;
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PL;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_PUNCTUATION;
      }
      else {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PS;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
      }
      break;
      case ComItextpdfTextPdfBarcodePDF417_LOWER:
      if ((v & ComItextpdfTextPdfBarcodePDF417_ALPHA) != 0) {
        if (([ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 1] & [ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 2] & ComItextpdfTextPdfBarcodePDF417_ALPHA) != 0) {
          *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_ML;
          *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_AL;
          mode = ComItextpdfTextPdfBarcodePDF417_ALPHA;
        }
        else {
          *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_AS;
        }
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
      }
      else if ((v & ComItextpdfTextPdfBarcodePDF417_MIXED) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_ML;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_MIXED;
      }
      else if (([ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 1] & [ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 2] & ComItextpdfTextPdfBarcodePDF417_PUNCTUATION) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_ML;
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PL;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_PUNCTUATION;
      }
      else {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PS;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
      }
      break;
      case ComItextpdfTextPdfBarcodePDF417_MIXED:
      if ((v & ComItextpdfTextPdfBarcodePDF417_LOWER) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_LL;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_LOWER;
      }
      else if ((v & ComItextpdfTextPdfBarcodePDF417_ALPHA) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_AL;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_ALPHA;
      }
      else if (([ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 1] & [ComItextpdfTextPdfBarcodePDF417 getTextTypeAndValueWithByteArray:input withInt:length withInt:k + 2] & ComItextpdfTextPdfBarcodePDF417_PUNCTUATION) != 0) {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PL;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
        mode = ComItextpdfTextPdfBarcodePDF417_PUNCTUATION;
      }
      else {
        *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PS;
        *IOSIntArray_GetRef(dest, ptr++) = v & (jint) 0xff;
      }
      break;
      case ComItextpdfTextPdfBarcodePDF417_PUNCTUATION:
      *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PAL;
      mode = ComItextpdfTextPdfBarcodePDF417_ALPHA;
      --k;
      break;
    }
  }
  if ((ptr & 1) != 0)
#line 396
  *IOSIntArray_GetRef(dest, ptr++) = ComItextpdfTextPdfBarcodePDF417_PS;
  size = (ptr + fullBytes) / 2;
  if (size + cwPtr_ > ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"the.text.is.too.big" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  length = ptr;
  ptr = 0;
  while (ptr < length) {
    v = IOSIntArray_Get(dest, ptr++);
    if (v >= 30) {
      *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = v;
      *IOSIntArray_GetRef(codewords_, cwPtr_++) = IOSIntArray_Get(dest, ptr++);
    }
    else
#line 410
    *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = v * 30 + IOSIntArray_Get(dest, ptr++);
  }
}


#line 413
- (void)textCompactionWithInt:(jint)start
                      withInt:(jint)length {
  
#line 414
  [self textCompactionWithByteArray:text_ withInt:start withInt:length];
}


#line 417
- (void)basicNumberCompactionWithInt:(jint)start
                             withInt:(jint)length {
  
#line 418
  [self basicNumberCompactionWithByteArray:text_ withInt:start withInt:length];
}


#line 421
- (void)basicNumberCompactionWithByteArray:(IOSByteArray *)input
                                   withInt:(jint)start
                                   withInt:(jint)length {
  
#line 422
  jint ret = cwPtr_;
  jint retLast = length / 3;
  jint ni, k;
  cwPtr_ += retLast + 1;
  for (k = 0; k <= retLast; ++k)
#line 427
  *IOSIntArray_GetRef(nil_chk(codewords_), ret + k) = 0;
  *IOSIntArray_GetRef(nil_chk(codewords_), ret + retLast) = 1;
  length += start;
  for (ni = start; ni < length; ++ni) {
    
#line 432
    for (k = retLast; k >= 0; --k)
#line 433
    *IOSIntArray_GetRef(codewords_, ret + k) *= 10;
    
#line 435
    *IOSIntArray_GetRef(codewords_, ret + retLast) += IOSByteArray_Get(nil_chk(input), ni) - '0';
    
#line 437
    for (k = retLast; k > 0; --k) {
      *IOSIntArray_GetRef(codewords_, ret + k - 1) += IOSIntArray_Get(codewords_, ret + k) / 900;
      *IOSIntArray_GetRef(codewords_, ret + k) %= 900;
    }
  }
}


#line 444
- (void)numberCompactionWithByteArray:(IOSByteArray *)input
                              withInt:(jint)start
                              withInt:(jint)length {
  
#line 445
  jint full = length / 44 * 15;
  jint size = length % 44;
  jint k;
  if (size == 0)
#line 449
  size = full;
  else
#line 451
  size = full + size / 3 + 1;
  if (size + cwPtr_ > ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"the.text.is.too.big" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  length += start;
  for (k = start; k < length; k += 44) {
    size = length - k < 44 ? length - k : 44;
    [self basicNumberCompactionWithByteArray:input withInt:k withInt:size];
  }
}


#line 462
- (void)numberCompactionWithInt:(jint)start
                        withInt:(jint)length {
  
#line 463
  [self numberCompactionWithByteArray:text_ withInt:start withInt:length];
}


#line 466
- (void)byteCompaction6WithInt:(jint)start {
  
#line 467
  jint length = 6;
  jint ret = cwPtr_;
  jint retLast = 4;
  jint ni, k;
  cwPtr_ += retLast + 1;
  for (k = 0; k <= retLast; ++k)
#line 473
  *IOSIntArray_GetRef(nil_chk(codewords_), ret + k) = 0;
  length += start;
  for (ni = start; ni < length; ++ni) {
    
#line 477
    for (k = retLast; k >= 0; --k)
#line 478
    *IOSIntArray_GetRef(nil_chk(codewords_), ret + k) *= 256;
    
#line 480
    *IOSIntArray_GetRef(nil_chk(codewords_), ret + retLast) += IOSByteArray_Get(nil_chk(text_), ni) & (jint) 0xff;
    
#line 482
    for (k = retLast; k > 0; --k) {
      *IOSIntArray_GetRef(codewords_, ret + k - 1) += IOSIntArray_Get(codewords_, ret + k) / 900;
      *IOSIntArray_GetRef(codewords_, ret + k) %= 900;
    }
  }
}


#line 489
- (void)byteCompactionWithInt:(jint)start
                      withInt:(jint)length {
  
#line 490
  jint k, j;
  jint size = length / 6 * 5 + length % 6;
  if (size + cwPtr_ > ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS) {
    @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"the.text.is.too.big" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  length += start;
  for (k = start; k < length; k += 6) {
    size = length - k < 44 ? length - k : 6;
    if (size < 6) {
      for (j = 0; j < size; ++j)
#line 500
      *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = IOSByteArray_Get(nil_chk(text_), k + j) & (jint) 0xff;
    }
    else {
      [self byteCompaction6WithInt:k];
    }
  }
}


#line 508
- (void)breakString {
  
#line 509
  jint textLength = ((IOSByteArray *) nil_chk(text_))->size_;
  jint lastP = 0;
  jint startN = 0;
  jint nd = 0;
  jchar c = 0;
  jint k, j;
  jboolean lastTxt, txt;
  ComItextpdfTextPdfBarcodePDF417_Segment *v;
  ComItextpdfTextPdfBarcodePDF417_Segment *vp;
  ComItextpdfTextPdfBarcodePDF417_Segment *vn;
  
#line 520
  if ((options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_FORCE_BINARY) != 0) {
    [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) addWithChar:'B' withInt:0 withInt:textLength];
    return;
  }
  for (k = 0; k < textLength; ++k) {
    c = (jchar) (IOSByteArray_Get(text_, k) & (jint) 0xff);
    if (c >= '0' && c <= '9') {
      if (nd == 0)
#line 528
      startN = k;
      ++nd;
      continue;
    }
    if (nd >= 13) {
      if (lastP != startN) {
        c = (jchar) (IOSByteArray_Get(text_, lastP) & (jint) 0xff);
        lastTxt = ((c >= ' ' && c < 127) || c == 0x000d || c == 0x000a || c == 0x0009);
        for (j = lastP; j < startN; ++j) {
          c = (jchar) (IOSByteArray_Get(text_, j) & (jint) 0xff);
          txt = ((c >= ' ' && c < 127) || c == 0x000d || c == 0x000a || c == 0x0009);
          if (txt != lastTxt) {
            [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) addWithChar:lastTxt ? 'T' : 'B' withInt:lastP withInt:j];
            lastP = j;
            lastTxt = txt;
          }
        }
        [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) addWithChar:lastTxt ? 'T' : 'B' withInt:lastP withInt:startN];
      }
      [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) addWithChar:'N' withInt:startN withInt:k];
      lastP = k;
    }
    nd = 0;
  }
  if (nd < 13)
#line 553
  startN = textLength;
  if (lastP != startN) {
    c = (jchar) (IOSByteArray_Get(text_, lastP) & (jint) 0xff);
    lastTxt = ((c >= ' ' && c < 127) || c == 0x000d || c == 0x000a || c == 0x0009);
    for (j = lastP; j < startN; ++j) {
      c = (jchar) (IOSByteArray_Get(text_, j) & (jint) 0xff);
      txt = ((c >= ' ' && c < 127) || c == 0x000d || c == 0x000a || c == 0x0009);
      if (txt != lastTxt) {
        [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) addWithChar:lastTxt ? 'T' : 'B' withInt:lastP withInt:j];
        lastP = j;
        lastTxt = txt;
      }
    }
    [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) addWithChar:lastTxt ? 'T' : 'B' withInt:lastP withInt:startN];
  }
  if (nd >= 13)
#line 569
  [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) addWithChar:'N' withInt:startN withInt:textLength];
  
#line 572
  for (k = 0; k < [((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) size]; ++k) {
    v = [segmentList_ getWithInt:k];
    vp = [segmentList_ getWithInt:k - 1];
    vn = [segmentList_ getWithInt:k + 1];
    if ([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:v withChar:'B'] && [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v] == 1) {
      if ([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vp withChar:'T'] && [self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vn withChar:'T'] &&
#line 578
      [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:vp] + [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:vn] >= 3) {
        ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(vp))->end_ = ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(vn))->end_;
        [segmentList_ removeWithInt:k];
        [segmentList_ removeWithInt:k];
        k = -1;
        continue;
      }
    }
  }
  
#line 588
  for (k = 0; k < [segmentList_ size]; ++k) {
    v = [segmentList_ getWithInt:k];
    vp = [segmentList_ getWithInt:k - 1];
    vn = [segmentList_ getWithInt:k + 1];
    if ([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:v withChar:'T'] && [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v] >= 5) {
      jboolean redo = NO;
      if (([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vp withChar:'B'] && [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:vp] == 1) || [self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vp withChar:'T']) {
        redo = YES;
        ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->start_ = ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(vp))->start_;
        [segmentList_ removeWithInt:k - 1];
        --k;
      }
      if (([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vn withChar:'B'] && [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:vn] == 1) || [self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vn withChar:'T']) {
        redo = YES;
        ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->end_ = ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(vn))->end_;
        [segmentList_ removeWithInt:k + 1];
      }
      if (redo) {
        k = -1;
        continue;
      }
    }
  }
  
#line 612
  for (k = 0; k < [segmentList_ size]; ++k) {
    v = [segmentList_ getWithInt:k];
    vp = [segmentList_ getWithInt:k - 1];
    vn = [segmentList_ getWithInt:k + 1];
    if ([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:v withChar:'B']) {
      jboolean redo = NO;
      if (([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vp withChar:'T'] && [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:vp] < 5) || [self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vp withChar:'B']) {
        redo = YES;
        ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->start_ = ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(vp))->start_;
        [segmentList_ removeWithInt:k - 1];
        --k;
      }
      if (([self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vn withChar:'T'] && [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:vn] < 5) || [self checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:vn withChar:'B']) {
        redo = YES;
        ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->end_ = ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(vn))->end_;
        [segmentList_ removeWithInt:k + 1];
      }
      if (redo) {
        k = -1;
        continue;
      }
    }
  }
  
#line 636
  if ([segmentList_ size] == 1 && (v = [segmentList_ getWithInt:0])->type_ == 'T' && [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v] >= 8) {
    for (k = ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->start_; k < v->end_; ++k) {
      c = (jchar) (IOSByteArray_Get(text_, k) & (jint) 0xff);
      if (c < '0' || c > '9')
#line 640
      break;
    }
    if (k == v->end_)
#line 643
    v->type_ = 'N';
  }
}


#line 647
- (void)assemble {
  
#line 648
  jint k;
  if ([((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) size] == 0)
#line 650
  return;
  cwPtr_ = 1;
  for (k = 0; k < [segmentList_ size]; ++k) {
    ComItextpdfTextPdfBarcodePDF417_Segment *v = [segmentList_ getWithInt:k];
    switch (((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->type_) {
      case 'T':
      if (k != 0)
#line 657
      *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = ComItextpdfTextPdfBarcodePDF417_TEXT_MODE;
      [self textCompactionWithInt:v->start_ withInt:[self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v]];
      break;
      case 'N':
      *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = ComItextpdfTextPdfBarcodePDF417_NUMERIC_MODE;
      [self numberCompactionWithInt:v->start_ withInt:[self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v]];
      break;
      case 'B':
      *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v] % 6 != 0 ? ComItextpdfTextPdfBarcodePDF417_BYTE_MODE : ComItextpdfTextPdfBarcodePDF417_BYTE_MODE_6;
      [self byteCompactionWithInt:v->start_ withInt:[self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v]];
      break;
    }
  }
  
#line 671
  if ((options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_USE_MACRO) != 0) {
    [self macroCodes];
  }
}


#line 677
- (void)macroCodes {
  
#line 678
  if (macroSegmentId_ < 0) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"macrosegmentid.must.be.gt.eq.0" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  if (macroSegmentId_ >= macroSegmentCount_) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"macrosegmentid.must.be.lt.macrosemgentcount" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  if (macroSegmentCount_ < 1) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"macrosemgentcount.must.be.gt.0" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  
#line 688
  macroIndex_ = cwPtr_;
  *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = ComItextpdfTextPdfBarcodePDF417_MACRO_SEGMENT_ID;
  [self appendWithInt:macroSegmentId_ withInt:5];
  
#line 692
  if (macroFileId_ != nil) {
    [self appendWithNSString:macroFileId_];
  }
  
#line 696
  if (macroSegmentId_ >= macroSegmentCount_ - 1) {
    *IOSIntArray_GetRef(codewords_, cwPtr_++) = ComItextpdfTextPdfBarcodePDF417_MACRO_LAST_SEGMENT;
  }
}


#line 702
- (void)appendWithInt:(jint)inArg
              withInt:(jint)len {
  
#line 703
  JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] initWithInt:len + 1];
  (void) [sb appendWithNSString:[JavaLangInteger toStringWithInt:inArg]];
  for (jint i = [sb sequenceLength]; i < len; i++) {
    (void) [sb insertWithInt:0 withNSString:@"0"];
  }
  
#line 709
  IOSByteArray *bytes = [ComItextpdfTextPdfPdfEncodings convertToBytesWithNSString:[sb description] withNSString:@"cp437"];
  [self numberCompactionWithByteArray:bytes withInt:0 withInt:((IOSByteArray *) nil_chk(bytes))->size_];
}


#line 713
- (void)appendWithNSString:(NSString *)s {
  
#line 714
  IOSByteArray *bytes = [ComItextpdfTextPdfPdfEncodings convertToBytesWithNSString:s withNSString:@"cp437"];
  [self textCompactionWithByteArray:bytes withInt:0 withInt:((IOSByteArray *) nil_chk(bytes))->size_];
}


#line 719
+ (jint)maxPossibleErrorLevelWithInt:(jint)remain {
  jint level = 8;
  jint size = 512;
  while (level > 0) {
    if (remain >= size)
#line 724
    return level;
    --level;
    RShiftAssignInt(&size, 1);
  }
  return 0;
}


#line 731
- (void)dumpList {
  if ([((ComItextpdfTextPdfBarcodePDF417_SegmentList *) nil_chk(segmentList_)) size] == 0)
#line 733
  return;
  for (jint k = 0; k < [segmentList_ size]; ++k) {
    ComItextpdfTextPdfBarcodePDF417_Segment *v = [segmentList_ getWithInt:k];
    jint len = [self getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:v];
    IOSCharArray *c = [IOSCharArray arrayWithLength:len];
    for (jint j = 0; j < len; ++j) {
      *IOSCharArray_GetRef(c, j) = (jchar) (IOSByteArray_Get(nil_chk(text_), ((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->start_ + j) & (jint) 0xff);
      if (IOSCharArray_Get(c, j) == 0x000d)
#line 741
      *IOSCharArray_GetRef(c, j) = 0x000a;
    }
    JavaLangStringBuffer *sb = [[JavaLangStringBuffer alloc] init];
    (void) [sb appendWithChar:((ComItextpdfTextPdfBarcodePDF417_Segment *) nil_chk(v))->type_];
    (void) [sb appendWithCharArray:c];
    [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[sb description]];
  }
}


#line 750
- (jint)getMaxSquare {
  
#line 751
  if (codeColumns_ > 21) {
    codeColumns_ = 29;
    codeRows_ = 32;
  }
  else {
    codeColumns_ = 16;
    codeRows_ = 58;
  }
  return ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS + 2;
}


#line 763
- (void)paintCode {
  jint maxErr, lenErr, tot, pad;
  if ((options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_USE_RAW_CODEWORDS) != 0) {
    if (lenCodewords_ > ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS || lenCodewords_ < 1 || lenCodewords_ != IOSIntArray_Get(nil_chk(codewords_), 0)) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"invalid.codeword.size" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
  }
  else {
    if (text_ == nil)
#line 772
    @throw [[JavaLangNullPointerException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"text.cannot.be.null" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
    if (((IOSByteArray *) nil_chk(text_))->size_ > ComItextpdfTextPdfBarcodePDF417_ABSOLUTE_MAX_TEXT_SIZE) {
      @throw [[JavaLangIndexOutOfBoundsException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"the.text.is.too.big" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
    segmentList_ = [[ComItextpdfTextPdfBarcodePDF417_SegmentList alloc] init];
    [self breakString];
    
#line 779
    [self assemble];
    segmentList_ = nil;
    *IOSIntArray_GetRef(nil_chk(codewords_), 0) = lenCodewords_ = cwPtr_;
  }
  maxErr = [ComItextpdfTextPdfBarcodePDF417 maxPossibleErrorLevelWithInt:ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS + 2 - lenCodewords_];
  if ((options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_USE_ERROR_LEVEL) == 0) {
    if (lenCodewords_ < 41)
#line 786
    errorLevel_ = 2;
    else if (lenCodewords_ < 161)
#line 788
    errorLevel_ = 3;
    else if (lenCodewords_ < 321)
#line 790
    errorLevel_ = 4;
    else
#line 792
    errorLevel_ = 5;
  }
  if (errorLevel_ < 0)
#line 795
  errorLevel_ = 0;
  else if (errorLevel_ > maxErr)
#line 797
  errorLevel_ = maxErr;
  if (codeColumns_ < 1)
#line 799
  codeColumns_ = 1;
  else if (codeColumns_ > 30)
#line 801
  codeColumns_ = 30;
  if (codeRows_ < 3)
#line 803
  codeRows_ = 3;
  else if (codeRows_ > 90)
#line 805
  codeRows_ = 90;
  lenErr = LShift32(2, errorLevel_);
  jboolean fixedColumn = (options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_FIXED_ROWS) == 0;
  jboolean skipRowColAdjust = NO;
  tot = lenCodewords_ + lenErr;
  if ((options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_FIXED_RECTANGLE) != 0) {
    tot = codeColumns_ * codeRows_;
    if (tot > ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS + 2) {
      tot = [self getMaxSquare];
    }
    if (tot < lenCodewords_ + lenErr)
#line 816
    tot = lenCodewords_ + lenErr;
    else
#line 818
    skipRowColAdjust = YES;
  }
  else if ((options_ & (ComItextpdfTextPdfBarcodePDF417_PDF417_FIXED_COLUMNS | ComItextpdfTextPdfBarcodePDF417_PDF417_FIXED_ROWS)) == 0) {
    jdouble c, b;
    fixedColumn = YES;
    if (aspectRatio_ < 0.001)
#line 824
    aspectRatio_ = 0.001f;
    else if (aspectRatio_ > 1000)
#line 826
    aspectRatio_ = 1000;
    b = 73 * aspectRatio_ - 4;
    c = (-b + [JavaLangMath sqrtWithDouble:b * b + 4 * 17 * aspectRatio_ * (lenCodewords_ + lenErr) * yHeight_]) / (2 * 17 * aspectRatio_);
    codeColumns_ = J2ObjCFpToInt((c + 0.5));
    if (codeColumns_ < 1)
#line 831
    codeColumns_ = 1;
    else if (codeColumns_ > 30)
#line 833
    codeColumns_ = 30;
  }
  if (!skipRowColAdjust) {
    if (fixedColumn) {
      codeRows_ = (tot - 1) / codeColumns_ + 1;
      if (codeRows_ < 3)
#line 839
      codeRows_ = 3;
      else if (codeRows_ > 90) {
        codeRows_ = 90;
        codeColumns_ = (tot - 1) / 90 + 1;
      }
    }
    else {
      codeColumns_ = (tot - 1) / codeRows_ + 1;
      if (codeColumns_ > 30) {
        codeColumns_ = 30;
        codeRows_ = (tot - 1) / 30 + 1;
      }
    }
    tot = codeRows_ * codeColumns_;
  }
  if (tot > ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS + 2) {
    tot = [self getMaxSquare];
  }
  errorLevel_ = [ComItextpdfTextPdfBarcodePDF417 maxPossibleErrorLevelWithInt:tot - lenCodewords_];
  lenErr = LShift32(2, errorLevel_);
  pad = tot - lenErr - lenCodewords_;
  if ((options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_USE_MACRO) != 0) {
    
#line 862
    [JavaLangSystem arraycopyWithId:codewords_ withInt:macroIndex_ withId:codewords_ withInt:macroIndex_ + pad withInt:pad];
    cwPtr_ = lenCodewords_ + pad;
    while (pad-- != 0)
#line 865
    *IOSIntArray_GetRef(nil_chk(codewords_), macroIndex_++) = ComItextpdfTextPdfBarcodePDF417_TEXT_MODE;
  }
  else {
    cwPtr_ = lenCodewords_;
    while (pad-- != 0)
#line 870
    *IOSIntArray_GetRef(nil_chk(codewords_), cwPtr_++) = ComItextpdfTextPdfBarcodePDF417_TEXT_MODE;
  }
  *IOSIntArray_GetRef(nil_chk(codewords_), 0) = lenCodewords_ = cwPtr_;
  [self calculateErrorCorrectionWithInt:lenCodewords_];
  lenCodewords_ = tot;
  [self outPaintCode];
}


#line 884
- (ComItextpdfTextImage *)getImage {
  
#line 885
  [self paintCode];
  IOSByteArray *g4 = [ComItextpdfTextPdfCodecCCITTG4Encoder compressWithByteArray:outBits_ withInt:bitColumns_ withInt:codeRows_];
  return [ComItextpdfTextImage getInstanceWithInt:bitColumns_ withInt:codeRows_ withBoolean:NO withInt:ComItextpdfTextElement_CCITTG4 withInt:(options_ & ComItextpdfTextPdfBarcodePDF417_PDF417_INVERT_BITMAP) == 0 ? 0 : ComItextpdfTextElement_CCITT_BLACKIS1 withByteArray:g4 withIntArray:nil];
}


#line 894
- (IOSByteArray *)getOutBits {
  
#line 895
  return self->outBits_;
}


#line 901
- (jint)getBitColumns {
  
#line 902
  return self->bitColumns_;
}


#line 909
- (jint)getCodeRows {
  
#line 910
  return self->codeRows_;
}


#line 917
- (void)setCodeRowsWithInt:(jint)codeRows {
  
#line 918
  self->codeRows_ = codeRows;
}


#line 924
- (jint)getCodeColumns {
  
#line 925
  return self->codeColumns_;
}


#line 932
- (void)setCodeColumnsWithInt:(jint)codeColumns {
  
#line 933
  self->codeColumns_ = codeColumns;
}


#line 941
- (IOSIntArray *)getCodewords {
  
#line 942
  return self->codewords_;
}


#line 948
- (jint)getLenCodewords {
  
#line 949
  return self->lenCodewords_;
}


#line 955
- (void)setLenCodewordsWithInt:(jint)lenCodewords {
  
#line 956
  self->lenCodewords_ = lenCodewords;
}


#line 963
- (jint)getErrorLevel {
  
#line 964
  return self->errorLevel_;
}


#line 970
- (void)setErrorLevelWithInt:(jint)errorLevel {
  
#line 971
  self->errorLevel_ = errorLevel;
}


#line 978
- (IOSByteArray *)getText {
  
#line 979
  return self->text_;
}


#line 986
- (void)setTextWithByteArray:(IOSByteArray *)text {
  
#line 987
  self->text_ = text;
}


#line 994
- (void)setTextWithNSString:(NSString *)s {
  
#line 995
  self->text_ = [ComItextpdfTextPdfPdfEncodings convertToBytesWithNSString:s withNSString:@"cp437"];
}


#line 1001
- (jint)getOptions {
  
#line 1002
  return self->options_;
}


#line 1009
- (void)setOptionsWithInt:(jint)options {
  
#line 1010
  self->options_ = options;
}


#line 1016
- (jfloat)getAspectRatio {
  
#line 1017
  return self->aspectRatio_;
}


#line 1024
- (void)setAspectRatioWithFloat:(jfloat)aspectRatio {
  
#line 1025
  self->aspectRatio_ = aspectRatio;
}


#line 1031
- (jfloat)getYHeight {
  
#line 1032
  return self->yHeight_;
}


#line 1038
- (void)setYHeightWithFloat:(jfloat)yHeight {
  
#line 1039
  self->yHeight_ = yHeight;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBarcodePDF417 *)other {
  [super copyAllFieldsTo:other];
  other->aspectRatio_ = aspectRatio_;
  other->bitColumns_ = bitColumns_;
  other->bitPtr_ = bitPtr_;
  other->codeColumns_ = codeColumns_;
  other->codeRows_ = codeRows_;
  other->codewords_ = codewords_;
  other->cwPtr_ = cwPtr_;
  other->errorLevel_ = errorLevel_;
  other->lenCodewords_ = lenCodewords_;
  other->macroFileId_ = macroFileId_;
  other->macroIndex_ = macroIndex_;
  other->macroSegmentCount_ = macroSegmentCount_;
  other->macroSegmentId_ = macroSegmentId_;
  other->options_ = options_;
  other->outBits_ = outBits_;
  other->segmentList_ = segmentList_;
  other->text_ = text_;
  other->yHeight_ = yHeight_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfBarcodePDF417 class]) {
    ComItextpdfTextPdfBarcodePDF417_CLUSTERS_ = [IOSObjectArray arrayWithObjects:(id[]){ [IOSIntArray arrayWithInts:(jint[]){
#line 1075
      (jint) 0x1d5c0, (jint) 0x1eaf0, (jint) 0x1f57c, (jint) 0x1d4e0, (jint) 0x1ea78, (jint) 0x1f53e, (jint) 0x1a8c0, (jint) 0x1d470,
#line 1076
      (jint) 0x1a860, (jint) 0x15040, (jint) 0x1a830, (jint) 0x15020, (jint) 0x1adc0, (jint) 0x1d6f0, (jint) 0x1eb7c, (jint) 0x1ace0,
#line 1077
      (jint) 0x1d678, (jint) 0x1eb3e, (jint) 0x158c0, (jint) 0x1ac70, (jint) 0x15860, (jint) 0x15dc0, (jint) 0x1aef0, (jint) 0x1d77c,
#line 1078
      (jint) 0x15ce0, (jint) 0x1ae78, (jint) 0x1d73e, (jint) 0x15c70, (jint) 0x1ae3c, (jint) 0x15ef0, (jint) 0x1af7c, (jint) 0x15e78,
#line 1079
      (jint) 0x1af3e, (jint) 0x15f7c, (jint) 0x1f5fa, (jint) 0x1d2e0, (jint) 0x1e978, (jint) 0x1f4be, (jint) 0x1a4c0, (jint) 0x1d270,
#line 1080
      (jint) 0x1e93c, (jint) 0x1a460, (jint) 0x1d238, (jint) 0x14840, (jint) 0x1a430, (jint) 0x1d21c, (jint) 0x14820, (jint) 0x1a418,
#line 1081
      (jint) 0x14810, (jint) 0x1a6e0, (jint) 0x1d378, (jint) 0x1e9be, (jint) 0x14cc0, (jint) 0x1a670, (jint) 0x1d33c, (jint) 0x14c60,
#line 1082
      (jint) 0x1a638, (jint) 0x1d31e, (jint) 0x14c30, (jint) 0x1a61c, (jint) 0x14ee0, (jint) 0x1a778, (jint) 0x1d3be, (jint) 0x14e70,
#line 1083
      (jint) 0x1a73c, (jint) 0x14e38, (jint) 0x1a71e, (jint) 0x14f78, (jint) 0x1a7be, (jint) 0x14f3c, (jint) 0x14f1e, (jint) 0x1a2c0,
#line 1084
      (jint) 0x1d170, (jint) 0x1e8bc, (jint) 0x1a260, (jint) 0x1d138, (jint) 0x1e89e, (jint) 0x14440, (jint) 0x1a230, (jint) 0x1d11c,
#line 1085
      (jint) 0x14420, (jint) 0x1a218, (jint) 0x14410, (jint) 0x14408, (jint) 0x146c0, (jint) 0x1a370, (jint) 0x1d1bc, (jint) 0x14660,
#line 1086
      (jint) 0x1a338, (jint) 0x1d19e, (jint) 0x14630, (jint) 0x1a31c, (jint) 0x14618, (jint) 0x1460c, (jint) 0x14770, (jint) 0x1a3bc,
#line 1087
      (jint) 0x14738, (jint) 0x1a39e, (jint) 0x1471c, (jint) 0x147bc, (jint) 0x1a160, (jint) 0x1d0b8, (jint) 0x1e85e, (jint) 0x14240,
#line 1088
      (jint) 0x1a130, (jint) 0x1d09c, (jint) 0x14220, (jint) 0x1a118, (jint) 0x1d08e, (jint) 0x14210, (jint) 0x1a10c, (jint) 0x14208,
#line 1089
      (jint) 0x1a106, (jint) 0x14360, (jint) 0x1a1b8, (jint) 0x1d0de, (jint) 0x14330, (jint) 0x1a19c, (jint) 0x14318, (jint) 0x1a18e,
#line 1090
      (jint) 0x1430c, (jint) 0x14306, (jint) 0x1a1de, (jint) 0x1438e, (jint) 0x14140, (jint) 0x1a0b0, (jint) 0x1d05c, (jint) 0x14120,
#line 1091
      (jint) 0x1a098, (jint) 0x1d04e, (jint) 0x14110, (jint) 0x1a08c, (jint) 0x14108, (jint) 0x1a086, (jint) 0x14104, (jint) 0x141b0,
#line 1092
      (jint) 0x14198, (jint) 0x1418c, (jint) 0x140a0, (jint) 0x1d02e, (jint) 0x1a04c, (jint) 0x1a046, (jint) 0x14082, (jint) 0x1cae0,
#line 1093
      (jint) 0x1e578, (jint) 0x1f2be, (jint) 0x194c0, (jint) 0x1ca70, (jint) 0x1e53c, (jint) 0x19460, (jint) 0x1ca38, (jint) 0x1e51e,
#line 1094
      (jint) 0x12840, (jint) 0x19430, (jint) 0x12820, (jint) 0x196e0, (jint) 0x1cb78, (jint) 0x1e5be, (jint) 0x12cc0, (jint) 0x19670,
#line 1095
      (jint) 0x1cb3c, (jint) 0x12c60, (jint) 0x19638, (jint) 0x12c30, (jint) 0x12c18, (jint) 0x12ee0, (jint) 0x19778, (jint) 0x1cbbe,
#line 1096
      (jint) 0x12e70, (jint) 0x1973c, (jint) 0x12e38, (jint) 0x12e1c, (jint) 0x12f78, (jint) 0x197be, (jint) 0x12f3c, (jint) 0x12fbe,
#line 1097
      (jint) 0x1dac0, (jint) 0x1ed70, (jint) 0x1f6bc, (jint) 0x1da60, (jint) 0x1ed38, (jint) 0x1f69e, (jint) 0x1b440, (jint) 0x1da30,
#line 1098
      (jint) 0x1ed1c, (jint) 0x1b420, (jint) 0x1da18, (jint) 0x1ed0e, (jint) 0x1b410, (jint) 0x1da0c, (jint) 0x192c0, (jint) 0x1c970,
#line 1099
      (jint) 0x1e4bc, (jint) 0x1b6c0, (jint) 0x19260, (jint) 0x1c938, (jint) 0x1e49e, (jint) 0x1b660, (jint) 0x1db38, (jint) 0x1ed9e,
#line 1100
      (jint) 0x16c40, (jint) 0x12420, (jint) 0x19218, (jint) 0x1c90e, (jint) 0x16c20, (jint) 0x1b618, (jint) 0x16c10, (jint) 0x126c0,
#line 1101
      (jint) 0x19370, (jint) 0x1c9bc, (jint) 0x16ec0, (jint) 0x12660, (jint) 0x19338, (jint) 0x1c99e, (jint) 0x16e60, (jint) 0x1b738,
#line 1102
      (jint) 0x1db9e, (jint) 0x16e30, (jint) 0x12618, (jint) 0x16e18, (jint) 0x12770, (jint) 0x193bc, (jint) 0x16f70, (jint) 0x12738,
#line 1103
      (jint) 0x1939e, (jint) 0x16f38, (jint) 0x1b79e, (jint) 0x16f1c, (jint) 0x127bc, (jint) 0x16fbc, (jint) 0x1279e, (jint) 0x16f9e,
#line 1104
      (jint) 0x1d960, (jint) 0x1ecb8, (jint) 0x1f65e, (jint) 0x1b240, (jint) 0x1d930, (jint) 0x1ec9c, (jint) 0x1b220, (jint) 0x1d918,
#line 1105
      (jint) 0x1ec8e, (jint) 0x1b210, (jint) 0x1d90c, (jint) 0x1b208, (jint) 0x1b204, (jint) 0x19160, (jint) 0x1c8b8, (jint) 0x1e45e,
#line 1106
      (jint) 0x1b360, (jint) 0x19130, (jint) 0x1c89c, (jint) 0x16640, (jint) 0x12220, (jint) 0x1d99c, (jint) 0x1c88e, (jint) 0x16620,
#line 1107
      (jint) 0x12210, (jint) 0x1910c, (jint) 0x16610, (jint) 0x1b30c, (jint) 0x19106, (jint) 0x12204, (jint) 0x12360, (jint) 0x191b8,
#line 1108
      (jint) 0x1c8de, (jint) 0x16760, (jint) 0x12330, (jint) 0x1919c, (jint) 0x16730, (jint) 0x1b39c, (jint) 0x1918e, (jint) 0x16718,
#line 1109
      (jint) 0x1230c, (jint) 0x12306, (jint) 0x123b8, (jint) 0x191de, (jint) 0x167b8, (jint) 0x1239c, (jint) 0x1679c, (jint) 0x1238e,
#line 1110
      (jint) 0x1678e, (jint) 0x167de, (jint) 0x1b140, (jint) 0x1d8b0, (jint) 0x1ec5c, (jint) 0x1b120, (jint) 0x1d898, (jint) 0x1ec4e,
#line 1111
      (jint) 0x1b110, (jint) 0x1d88c, (jint) 0x1b108, (jint) 0x1d886, (jint) 0x1b104, (jint) 0x1b102, (jint) 0x12140, (jint) 0x190b0,
#line 1112
      (jint) 0x1c85c, (jint) 0x16340, (jint) 0x12120, (jint) 0x19098, (jint) 0x1c84e, (jint) 0x16320, (jint) 0x1b198, (jint) 0x1d8ce,
#line 1113
      (jint) 0x16310, (jint) 0x12108, (jint) 0x19086, (jint) 0x16308, (jint) 0x1b186, (jint) 0x16304, (jint) 0x121b0, (jint) 0x190dc,
#line 1114
      (jint) 0x163b0, (jint) 0x12198, (jint) 0x190ce, (jint) 0x16398, (jint) 0x1b1ce, (jint) 0x1638c, (jint) 0x12186, (jint) 0x16386,
#line 1115
      (jint) 0x163dc, (jint) 0x163ce, (jint) 0x1b0a0, (jint) 0x1d858, (jint) 0x1ec2e, (jint) 0x1b090, (jint) 0x1d84c, (jint) 0x1b088,
#line 1116
      (jint) 0x1d846, (jint) 0x1b084, (jint) 0x1b082, (jint) 0x120a0, (jint) 0x19058, (jint) 0x1c82e, (jint) 0x161a0, (jint) 0x12090,
#line 1117
      (jint) 0x1904c, (jint) 0x16190, (jint) 0x1b0cc, (jint) 0x19046, (jint) 0x16188, (jint) 0x12084, (jint) 0x16184, (jint) 0x12082,
#line 1118
      (jint) 0x120d8, (jint) 0x161d8, (jint) 0x161cc, (jint) 0x161c6, (jint) 0x1d82c, (jint) 0x1d826, (jint) 0x1b042, (jint) 0x1902c,
#line 1119
      (jint) 0x12048, (jint) 0x160c8, (jint) 0x160c4, (jint) 0x160c2, (jint) 0x18ac0, (jint) 0x1c570, (jint) 0x1e2bc, (jint) 0x18a60,
#line 1120
      (jint) 0x1c538, (jint) 0x11440, (jint) 0x18a30, (jint) 0x1c51c, (jint) 0x11420, (jint) 0x18a18, (jint) 0x11410, (jint) 0x11408,
#line 1121
      (jint) 0x116c0, (jint) 0x18b70, (jint) 0x1c5bc, (jint) 0x11660, (jint) 0x18b38, (jint) 0x1c59e, (jint) 0x11630, (jint) 0x18b1c,
#line 1122
      (jint) 0x11618, (jint) 0x1160c, (jint) 0x11770, (jint) 0x18bbc, (jint) 0x11738, (jint) 0x18b9e, (jint) 0x1171c, (jint) 0x117bc,
#line 1123
      (jint) 0x1179e, (jint) 0x1cd60, (jint) 0x1e6b8, (jint) 0x1f35e, (jint) 0x19a40, (jint) 0x1cd30, (jint) 0x1e69c, (jint) 0x19a20,
#line 1124
      (jint) 0x1cd18, (jint) 0x1e68e, (jint) 0x19a10, (jint) 0x1cd0c, (jint) 0x19a08, (jint) 0x1cd06, (jint) 0x18960, (jint) 0x1c4b8,
#line 1125
      (jint) 0x1e25e, (jint) 0x19b60, (jint) 0x18930, (jint) 0x1c49c, (jint) 0x13640, (jint) 0x11220, (jint) 0x1cd9c, (jint) 0x1c48e,
#line 1126
      (jint) 0x13620, (jint) 0x19b18, (jint) 0x1890c, (jint) 0x13610, (jint) 0x11208, (jint) 0x13608, (jint) 0x11360, (jint) 0x189b8,
#line 1127
      (jint) 0x1c4de, (jint) 0x13760, (jint) 0x11330, (jint) 0x1cdde, (jint) 0x13730, (jint) 0x19b9c, (jint) 0x1898e, (jint) 0x13718,
#line 1128
      (jint) 0x1130c, (jint) 0x1370c, (jint) 0x113b8, (jint) 0x189de, (jint) 0x137b8, (jint) 0x1139c, (jint) 0x1379c, (jint) 0x1138e,
#line 1129
      (jint) 0x113de, (jint) 0x137de, (jint) 0x1dd40, (jint) 0x1eeb0, (jint) 0x1f75c, (jint) 0x1dd20, (jint) 0x1ee98, (jint) 0x1f74e,
#line 1130
      (jint) 0x1dd10, (jint) 0x1ee8c, (jint) 0x1dd08, (jint) 0x1ee86, (jint) 0x1dd04, (jint) 0x19940, (jint) 0x1ccb0, (jint) 0x1e65c,
#line 1131
      (jint) 0x1bb40, (jint) 0x19920, (jint) 0x1eedc, (jint) 0x1e64e, (jint) 0x1bb20, (jint) 0x1dd98, (jint) 0x1eece, (jint) 0x1bb10,
#line 1132
      (jint) 0x19908, (jint) 0x1cc86, (jint) 0x1bb08, (jint) 0x1dd86, (jint) 0x19902, (jint) 0x11140, (jint) 0x188b0, (jint) 0x1c45c,
#line 1133
      (jint) 0x13340, (jint) 0x11120, (jint) 0x18898, (jint) 0x1c44e, (jint) 0x17740, (jint) 0x13320, (jint) 0x19998, (jint) 0x1ccce,
#line 1134
      (jint) 0x17720, (jint) 0x1bb98, (jint) 0x1ddce, (jint) 0x18886, (jint) 0x17710, (jint) 0x13308, (jint) 0x19986, (jint) 0x17708,
#line 1135
      (jint) 0x11102, (jint) 0x111b0, (jint) 0x188dc, (jint) 0x133b0, (jint) 0x11198, (jint) 0x188ce, (jint) 0x177b0, (jint) 0x13398,
#line 1136
      (jint) 0x199ce, (jint) 0x17798, (jint) 0x1bbce, (jint) 0x11186, (jint) 0x13386, (jint) 0x111dc, (jint) 0x133dc, (jint) 0x111ce,
#line 1137
      (jint) 0x177dc, (jint) 0x133ce, (jint) 0x1dca0, (jint) 0x1ee58, (jint) 0x1f72e, (jint) 0x1dc90, (jint) 0x1ee4c, (jint) 0x1dc88,
#line 1138
      (jint) 0x1ee46, (jint) 0x1dc84, (jint) 0x1dc82, (jint) 0x198a0, (jint) 0x1cc58, (jint) 0x1e62e, (jint) 0x1b9a0, (jint) 0x19890,
#line 1139
      (jint) 0x1ee6e, (jint) 0x1b990, (jint) 0x1dccc, (jint) 0x1cc46, (jint) 0x1b988, (jint) 0x19884, (jint) 0x1b984, (jint) 0x19882,
#line 1140
      (jint) 0x1b982, (jint) 0x110a0, (jint) 0x18858, (jint) 0x1c42e, (jint) 0x131a0, (jint) 0x11090, (jint) 0x1884c, (jint) 0x173a0,
#line 1141
      (jint) 0x13190, (jint) 0x198cc, (jint) 0x18846, (jint) 0x17390, (jint) 0x1b9cc, (jint) 0x11084, (jint) 0x17388, (jint) 0x13184,
#line 1142
      (jint) 0x11082, (jint) 0x13182, (jint) 0x110d8, (jint) 0x1886e, (jint) 0x131d8, (jint) 0x110cc, (jint) 0x173d8, (jint) 0x131cc,
#line 1143
      (jint) 0x110c6, (jint) 0x173cc, (jint) 0x131c6, (jint) 0x110ee, (jint) 0x173ee, (jint) 0x1dc50, (jint) 0x1ee2c, (jint) 0x1dc48,
#line 1144
      (jint) 0x1ee26, (jint) 0x1dc44, (jint) 0x1dc42, (jint) 0x19850, (jint) 0x1cc2c, (jint) 0x1b8d0, (jint) 0x19848, (jint) 0x1cc26,
#line 1145
      (jint) 0x1b8c8, (jint) 0x1dc66, (jint) 0x1b8c4, (jint) 0x19842, (jint) 0x1b8c2, (jint) 0x11050, (jint) 0x1882c, (jint) 0x130d0,
#line 1146
      (jint) 0x11048, (jint) 0x18826, (jint) 0x171d0, (jint) 0x130c8, (jint) 0x19866, (jint) 0x171c8, (jint) 0x1b8e6, (jint) 0x11042,
#line 1147
      (jint) 0x171c4, (jint) 0x130c2, (jint) 0x171c2, (jint) 0x130ec, (jint) 0x171ec, (jint) 0x171e6, (jint) 0x1ee16, (jint) 0x1dc22,
#line 1148
      (jint) 0x1cc16, (jint) 0x19824, (jint) 0x19822, (jint) 0x11028, (jint) 0x13068, (jint) 0x170e8, (jint) 0x11022, (jint) 0x13062,
#line 1149
      (jint) 0x18560, (jint) 0x10a40, (jint) 0x18530, (jint) 0x10a20, (jint) 0x18518, (jint) 0x1c28e, (jint) 0x10a10, (jint) 0x1850c,
#line 1150
      (jint) 0x10a08, (jint) 0x18506, (jint) 0x10b60, (jint) 0x185b8, (jint) 0x1c2de, (jint) 0x10b30, (jint) 0x1859c, (jint) 0x10b18,
#line 1151
      (jint) 0x1858e, (jint) 0x10b0c, (jint) 0x10b06, (jint) 0x10bb8, (jint) 0x185de, (jint) 0x10b9c, (jint) 0x10b8e, (jint) 0x10bde,
#line 1152
      (jint) 0x18d40, (jint) 0x1c6b0, (jint) 0x1e35c, (jint) 0x18d20, (jint) 0x1c698, (jint) 0x18d10, (jint) 0x1c68c, (jint) 0x18d08,
#line 1153
      (jint) 0x1c686, (jint) 0x18d04, (jint) 0x10940, (jint) 0x184b0, (jint) 0x1c25c, (jint) 0x11b40, (jint) 0x10920, (jint) 0x1c6dc,
#line 1154
      (jint) 0x1c24e, (jint) 0x11b20, (jint) 0x18d98, (jint) 0x1c6ce, (jint) 0x11b10, (jint) 0x10908, (jint) 0x18486, (jint) 0x11b08,
#line 1155
      (jint) 0x18d86, (jint) 0x10902, (jint) 0x109b0, (jint) 0x184dc, (jint) 0x11bb0, (jint) 0x10998, (jint) 0x184ce, (jint) 0x11b98,
#line 1156
      (jint) 0x18dce, (jint) 0x11b8c, (jint) 0x10986, (jint) 0x109dc, (jint) 0x11bdc, (jint) 0x109ce, (jint) 0x11bce, (jint) 0x1cea0,
#line 1157
      (jint) 0x1e758, (jint) 0x1f3ae, (jint) 0x1ce90, (jint) 0x1e74c, (jint) 0x1ce88, (jint) 0x1e746, (jint) 0x1ce84, (jint) 0x1ce82,
#line 1158
      (jint) 0x18ca0, (jint) 0x1c658, (jint) 0x19da0, (jint) 0x18c90, (jint) 0x1c64c, (jint) 0x19d90, (jint) 0x1cecc, (jint) 0x1c646,
#line 1159
      (jint) 0x19d88, (jint) 0x18c84, (jint) 0x19d84, (jint) 0x18c82, (jint) 0x19d82, (jint) 0x108a0, (jint) 0x18458, (jint) 0x119a0,
#line 1160
      (jint) 0x10890, (jint) 0x1c66e, (jint) 0x13ba0, (jint) 0x11990, (jint) 0x18ccc, (jint) 0x18446, (jint) 0x13b90, (jint) 0x19dcc,
#line 1161
      (jint) 0x10884, (jint) 0x13b88, (jint) 0x11984, (jint) 0x10882, (jint) 0x11982, (jint) 0x108d8, (jint) 0x1846e, (jint) 0x119d8,
#line 1162
      (jint) 0x108cc, (jint) 0x13bd8, (jint) 0x119cc, (jint) 0x108c6, (jint) 0x13bcc, (jint) 0x119c6, (jint) 0x108ee, (jint) 0x119ee,
#line 1163
      (jint) 0x13bee, (jint) 0x1ef50, (jint) 0x1f7ac, (jint) 0x1ef48, (jint) 0x1f7a6, (jint) 0x1ef44, (jint) 0x1ef42, (jint) 0x1ce50,
#line 1164
      (jint) 0x1e72c, (jint) 0x1ded0, (jint) 0x1ef6c, (jint) 0x1e726, (jint) 0x1dec8, (jint) 0x1ef66, (jint) 0x1dec4, (jint) 0x1ce42,
#line 1165
      (jint) 0x1dec2, (jint) 0x18c50, (jint) 0x1c62c, (jint) 0x19cd0, (jint) 0x18c48, (jint) 0x1c626, (jint) 0x1bdd0, (jint) 0x19cc8,
#line 1166
      (jint) 0x1ce66, (jint) 0x1bdc8, (jint) 0x1dee6, (jint) 0x18c42, (jint) 0x1bdc4, (jint) 0x19cc2, (jint) 0x1bdc2, (jint) 0x10850,
#line 1167
      (jint) 0x1842c, (jint) 0x118d0, (jint) 0x10848, (jint) 0x18426, (jint) 0x139d0, (jint) 0x118c8, (jint) 0x18c66, (jint) 0x17bd0,
#line 1168
      (jint) 0x139c8, (jint) 0x19ce6, (jint) 0x10842, (jint) 0x17bc8, (jint) 0x1bde6, (jint) 0x118c2, (jint) 0x17bc4, (jint) 0x1086c,
#line 1169
      (jint) 0x118ec, (jint) 0x10866, (jint) 0x139ec, (jint) 0x118e6, (jint) 0x17bec, (jint) 0x139e6, (jint) 0x17be6, (jint) 0x1ef28,
#line 1170
      (jint) 0x1f796, (jint) 0x1ef24, (jint) 0x1ef22, (jint) 0x1ce28, (jint) 0x1e716, (jint) 0x1de68, (jint) 0x1ef36, (jint) 0x1de64,
#line 1171
      (jint) 0x1ce22, (jint) 0x1de62, (jint) 0x18c28, (jint) 0x1c616, (jint) 0x19c68, (jint) 0x18c24, (jint) 0x1bce8, (jint) 0x19c64,
#line 1172
      (jint) 0x18c22, (jint) 0x1bce4, (jint) 0x19c62, (jint) 0x1bce2, (jint) 0x10828, (jint) 0x18416, (jint) 0x11868, (jint) 0x18c36,
#line 1173
      (jint) 0x138e8, (jint) 0x11864, (jint) 0x10822, (jint) 0x179e8, (jint) 0x138e4, (jint) 0x11862, (jint) 0x179e4, (jint) 0x138e2,
#line 1174
      (jint) 0x179e2, (jint) 0x11876, (jint) 0x179f6, (jint) 0x1ef12, (jint) 0x1de34, (jint) 0x1de32, (jint) 0x19c34, (jint) 0x1bc74,
#line 1175
      (jint) 0x1bc72, (jint) 0x11834, (jint) 0x13874, (jint) 0x178f4, (jint) 0x178f2, (jint) 0x10540, (jint) 0x10520, (jint) 0x18298,
#line 1176
      (jint) 0x10510, (jint) 0x10508, (jint) 0x10504, (jint) 0x105b0, (jint) 0x10598, (jint) 0x1058c, (jint) 0x10586, (jint) 0x105dc,
#line 1177
      (jint) 0x105ce, (jint) 0x186a0, (jint) 0x18690, (jint) 0x1c34c, (jint) 0x18688, (jint) 0x1c346, (jint) 0x18684, (jint) 0x18682,
#line 1178
      (jint) 0x104a0, (jint) 0x18258, (jint) 0x10da0, (jint) 0x186d8, (jint) 0x1824c, (jint) 0x10d90, (jint) 0x186cc, (jint) 0x10d88,
#line 1179
      (jint) 0x186c6, (jint) 0x10d84, (jint) 0x10482, (jint) 0x10d82, (jint) 0x104d8, (jint) 0x1826e, (jint) 0x10dd8, (jint) 0x186ee,
#line 1180
      (jint) 0x10dcc, (jint) 0x104c6, (jint) 0x10dc6, (jint) 0x104ee, (jint) 0x10dee, (jint) 0x1c750, (jint) 0x1c748, (jint) 0x1c744,
#line 1181
      (jint) 0x1c742, (jint) 0x18650, (jint) 0x18ed0, (jint) 0x1c76c, (jint) 0x1c326, (jint) 0x18ec8, (jint) 0x1c766, (jint) 0x18ec4,
#line 1182
      (jint) 0x18642, (jint) 0x18ec2, (jint) 0x10450, (jint) 0x10cd0, (jint) 0x10448, (jint) 0x18226, (jint) 0x11dd0, (jint) 0x10cc8,
#line 1183
      (jint) 0x10444, (jint) 0x11dc8, (jint) 0x10cc4, (jint) 0x10442, (jint) 0x11dc4, (jint) 0x10cc2, (jint) 0x1046c, (jint) 0x10cec,
#line 1184
      (jint) 0x10466, (jint) 0x11dec, (jint) 0x10ce6, (jint) 0x11de6, (jint) 0x1e7a8, (jint) 0x1e7a4, (jint) 0x1e7a2, (jint) 0x1c728,
#line 1185
      (jint) 0x1cf68, (jint) 0x1e7b6, (jint) 0x1cf64, (jint) 0x1c722, (jint) 0x1cf62, (jint) 0x18628, (jint) 0x1c316, (jint) 0x18e68,
#line 1186
      (jint) 0x1c736, (jint) 0x19ee8, (jint) 0x18e64, (jint) 0x18622, (jint) 0x19ee4, (jint) 0x18e62, (jint) 0x19ee2, (jint) 0x10428,
#line 1187
      (jint) 0x18216, (jint) 0x10c68, (jint) 0x18636, (jint) 0x11ce8, (jint) 0x10c64, (jint) 0x10422, (jint) 0x13de8, (jint) 0x11ce4,
#line 1188
      (jint) 0x10c62, (jint) 0x13de4, (jint) 0x11ce2, (jint) 0x10436, (jint) 0x10c76, (jint) 0x11cf6, (jint) 0x13df6, (jint) 0x1f7d4,
#line 1189
      (jint) 0x1f7d2, (jint) 0x1e794, (jint) 0x1efb4, (jint) 0x1e792, (jint) 0x1efb2, (jint) 0x1c714, (jint) 0x1cf34, (jint) 0x1c712,
#line 1190
      (jint) 0x1df74, (jint) 0x1cf32, (jint) 0x1df72, (jint) 0x18614, (jint) 0x18e34, (jint) 0x18612, (jint) 0x19e74, (jint) 0x18e32,
#line 1191
      (jint) 0x1bef4 } count:929], [IOSIntArray arrayWithInts:(jint[]){
#line 1193
        (jint) 0x1f560, (jint) 0x1fab8, (jint) 0x1ea40, (jint) 0x1f530, (jint) 0x1fa9c, (jint) 0x1ea20, (jint) 0x1f518, (jint) 0x1fa8e,
#line 1194
        (jint) 0x1ea10, (jint) 0x1f50c, (jint) 0x1ea08, (jint) 0x1f506, (jint) 0x1ea04, (jint) 0x1eb60, (jint) 0x1f5b8, (jint) 0x1fade,
#line 1195
        (jint) 0x1d640, (jint) 0x1eb30, (jint) 0x1f59c, (jint) 0x1d620, (jint) 0x1eb18, (jint) 0x1f58e, (jint) 0x1d610, (jint) 0x1eb0c,
#line 1196
        (jint) 0x1d608, (jint) 0x1eb06, (jint) 0x1d604, (jint) 0x1d760, (jint) 0x1ebb8, (jint) 0x1f5de, (jint) 0x1ae40, (jint) 0x1d730,
#line 1197
        (jint) 0x1eb9c, (jint) 0x1ae20, (jint) 0x1d718, (jint) 0x1eb8e, (jint) 0x1ae10, (jint) 0x1d70c, (jint) 0x1ae08, (jint) 0x1d706,
#line 1198
        (jint) 0x1ae04, (jint) 0x1af60, (jint) 0x1d7b8, (jint) 0x1ebde, (jint) 0x15e40, (jint) 0x1af30, (jint) 0x1d79c, (jint) 0x15e20,
#line 1199
        (jint) 0x1af18, (jint) 0x1d78e, (jint) 0x15e10, (jint) 0x1af0c, (jint) 0x15e08, (jint) 0x1af06, (jint) 0x15f60, (jint) 0x1afb8,
#line 1200
        (jint) 0x1d7de, (jint) 0x15f30, (jint) 0x1af9c, (jint) 0x15f18, (jint) 0x1af8e, (jint) 0x15f0c, (jint) 0x15fb8, (jint) 0x1afde,
#line 1201
        (jint) 0x15f9c, (jint) 0x15f8e, (jint) 0x1e940, (jint) 0x1f4b0, (jint) 0x1fa5c, (jint) 0x1e920, (jint) 0x1f498, (jint) 0x1fa4e,
#line 1202
        (jint) 0x1e910, (jint) 0x1f48c, (jint) 0x1e908, (jint) 0x1f486, (jint) 0x1e904, (jint) 0x1e902, (jint) 0x1d340, (jint) 0x1e9b0,
#line 1203
        (jint) 0x1f4dc, (jint) 0x1d320, (jint) 0x1e998, (jint) 0x1f4ce, (jint) 0x1d310, (jint) 0x1e98c, (jint) 0x1d308, (jint) 0x1e986,
#line 1204
        (jint) 0x1d304, (jint) 0x1d302, (jint) 0x1a740, (jint) 0x1d3b0, (jint) 0x1e9dc, (jint) 0x1a720, (jint) 0x1d398, (jint) 0x1e9ce,
#line 1205
        (jint) 0x1a710, (jint) 0x1d38c, (jint) 0x1a708, (jint) 0x1d386, (jint) 0x1a704, (jint) 0x1a702, (jint) 0x14f40, (jint) 0x1a7b0,
#line 1206
        (jint) 0x1d3dc, (jint) 0x14f20, (jint) 0x1a798, (jint) 0x1d3ce, (jint) 0x14f10, (jint) 0x1a78c, (jint) 0x14f08, (jint) 0x1a786,
#line 1207
        (jint) 0x14f04, (jint) 0x14fb0, (jint) 0x1a7dc, (jint) 0x14f98, (jint) 0x1a7ce, (jint) 0x14f8c, (jint) 0x14f86, (jint) 0x14fdc,
#line 1208
        (jint) 0x14fce, (jint) 0x1e8a0, (jint) 0x1f458, (jint) 0x1fa2e, (jint) 0x1e890, (jint) 0x1f44c, (jint) 0x1e888, (jint) 0x1f446,
#line 1209
        (jint) 0x1e884, (jint) 0x1e882, (jint) 0x1d1a0, (jint) 0x1e8d8, (jint) 0x1f46e, (jint) 0x1d190, (jint) 0x1e8cc, (jint) 0x1d188,
#line 1210
        (jint) 0x1e8c6, (jint) 0x1d184, (jint) 0x1d182, (jint) 0x1a3a0, (jint) 0x1d1d8, (jint) 0x1e8ee, (jint) 0x1a390, (jint) 0x1d1cc,
#line 1211
        (jint) 0x1a388, (jint) 0x1d1c6, (jint) 0x1a384, (jint) 0x1a382, (jint) 0x147a0, (jint) 0x1a3d8, (jint) 0x1d1ee, (jint) 0x14790,
#line 1212
        (jint) 0x1a3cc, (jint) 0x14788, (jint) 0x1a3c6, (jint) 0x14784, (jint) 0x14782, (jint) 0x147d8, (jint) 0x1a3ee, (jint) 0x147cc,
#line 1213
        (jint) 0x147c6, (jint) 0x147ee, (jint) 0x1e850, (jint) 0x1f42c, (jint) 0x1e848, (jint) 0x1f426, (jint) 0x1e844, (jint) 0x1e842,
#line 1214
        (jint) 0x1d0d0, (jint) 0x1e86c, (jint) 0x1d0c8, (jint) 0x1e866, (jint) 0x1d0c4, (jint) 0x1d0c2, (jint) 0x1a1d0, (jint) 0x1d0ec,
#line 1215
        (jint) 0x1a1c8, (jint) 0x1d0e6, (jint) 0x1a1c4, (jint) 0x1a1c2, (jint) 0x143d0, (jint) 0x1a1ec, (jint) 0x143c8, (jint) 0x1a1e6,
#line 1216
        (jint) 0x143c4, (jint) 0x143c2, (jint) 0x143ec, (jint) 0x143e6, (jint) 0x1e828, (jint) 0x1f416, (jint) 0x1e824, (jint) 0x1e822,
#line 1217
        (jint) 0x1d068, (jint) 0x1e836, (jint) 0x1d064, (jint) 0x1d062, (jint) 0x1a0e8, (jint) 0x1d076, (jint) 0x1a0e4, (jint) 0x1a0e2,
#line 1218
        (jint) 0x141e8, (jint) 0x1a0f6, (jint) 0x141e4, (jint) 0x141e2, (jint) 0x1e814, (jint) 0x1e812, (jint) 0x1d034, (jint) 0x1d032,
#line 1219
        (jint) 0x1a074, (jint) 0x1a072, (jint) 0x1e540, (jint) 0x1f2b0, (jint) 0x1f95c, (jint) 0x1e520, (jint) 0x1f298, (jint) 0x1f94e,
#line 1220
        (jint) 0x1e510, (jint) 0x1f28c, (jint) 0x1e508, (jint) 0x1f286, (jint) 0x1e504, (jint) 0x1e502, (jint) 0x1cb40, (jint) 0x1e5b0,
#line 1221
        (jint) 0x1f2dc, (jint) 0x1cb20, (jint) 0x1e598, (jint) 0x1f2ce, (jint) 0x1cb10, (jint) 0x1e58c, (jint) 0x1cb08, (jint) 0x1e586,
#line 1222
        (jint) 0x1cb04, (jint) 0x1cb02, (jint) 0x19740, (jint) 0x1cbb0, (jint) 0x1e5dc, (jint) 0x19720, (jint) 0x1cb98, (jint) 0x1e5ce,
#line 1223
        (jint) 0x19710, (jint) 0x1cb8c, (jint) 0x19708, (jint) 0x1cb86, (jint) 0x19704, (jint) 0x19702, (jint) 0x12f40, (jint) 0x197b0,
#line 1224
        (jint) 0x1cbdc, (jint) 0x12f20, (jint) 0x19798, (jint) 0x1cbce, (jint) 0x12f10, (jint) 0x1978c, (jint) 0x12f08, (jint) 0x19786,
#line 1225
        (jint) 0x12f04, (jint) 0x12fb0, (jint) 0x197dc, (jint) 0x12f98, (jint) 0x197ce, (jint) 0x12f8c, (jint) 0x12f86, (jint) 0x12fdc,
#line 1226
        (jint) 0x12fce, (jint) 0x1f6a0, (jint) 0x1fb58, (jint) 0x16bf0, (jint) 0x1f690, (jint) 0x1fb4c, (jint) 0x169f8, (jint) 0x1f688,
#line 1227
        (jint) 0x1fb46, (jint) 0x168fc, (jint) 0x1f684, (jint) 0x1f682, (jint) 0x1e4a0, (jint) 0x1f258, (jint) 0x1f92e, (jint) 0x1eda0,
#line 1228
        (jint) 0x1e490, (jint) 0x1fb6e, (jint) 0x1ed90, (jint) 0x1f6cc, (jint) 0x1f246, (jint) 0x1ed88, (jint) 0x1e484, (jint) 0x1ed84,
#line 1229
        (jint) 0x1e482, (jint) 0x1ed82, (jint) 0x1c9a0, (jint) 0x1e4d8, (jint) 0x1f26e, (jint) 0x1dba0, (jint) 0x1c990, (jint) 0x1e4cc,
#line 1230
        (jint) 0x1db90, (jint) 0x1edcc, (jint) 0x1e4c6, (jint) 0x1db88, (jint) 0x1c984, (jint) 0x1db84, (jint) 0x1c982, (jint) 0x1db82,
#line 1231
        (jint) 0x193a0, (jint) 0x1c9d8, (jint) 0x1e4ee, (jint) 0x1b7a0, (jint) 0x19390, (jint) 0x1c9cc, (jint) 0x1b790, (jint) 0x1dbcc,
#line 1232
        (jint) 0x1c9c6, (jint) 0x1b788, (jint) 0x19384, (jint) 0x1b784, (jint) 0x19382, (jint) 0x1b782, (jint) 0x127a0, (jint) 0x193d8,
#line 1233
        (jint) 0x1c9ee, (jint) 0x16fa0, (jint) 0x12790, (jint) 0x193cc, (jint) 0x16f90, (jint) 0x1b7cc, (jint) 0x193c6, (jint) 0x16f88,
#line 1234
        (jint) 0x12784, (jint) 0x16f84, (jint) 0x12782, (jint) 0x127d8, (jint) 0x193ee, (jint) 0x16fd8, (jint) 0x127cc, (jint) 0x16fcc,
#line 1235
        (jint) 0x127c6, (jint) 0x16fc6, (jint) 0x127ee, (jint) 0x1f650, (jint) 0x1fb2c, (jint) 0x165f8, (jint) 0x1f648, (jint) 0x1fb26,
#line 1236
        (jint) 0x164fc, (jint) 0x1f644, (jint) 0x1647e, (jint) 0x1f642, (jint) 0x1e450, (jint) 0x1f22c, (jint) 0x1ecd0, (jint) 0x1e448,
#line 1237
        (jint) 0x1f226, (jint) 0x1ecc8, (jint) 0x1f666, (jint) 0x1ecc4, (jint) 0x1e442, (jint) 0x1ecc2, (jint) 0x1c8d0, (jint) 0x1e46c,
#line 1238
        (jint) 0x1d9d0, (jint) 0x1c8c8, (jint) 0x1e466, (jint) 0x1d9c8, (jint) 0x1ece6, (jint) 0x1d9c4, (jint) 0x1c8c2, (jint) 0x1d9c2,
#line 1239
        (jint) 0x191d0, (jint) 0x1c8ec, (jint) 0x1b3d0, (jint) 0x191c8, (jint) 0x1c8e6, (jint) 0x1b3c8, (jint) 0x1d9e6, (jint) 0x1b3c4,
#line 1240
        (jint) 0x191c2, (jint) 0x1b3c2, (jint) 0x123d0, (jint) 0x191ec, (jint) 0x167d0, (jint) 0x123c8, (jint) 0x191e6, (jint) 0x167c8,
#line 1241
        (jint) 0x1b3e6, (jint) 0x167c4, (jint) 0x123c2, (jint) 0x167c2, (jint) 0x123ec, (jint) 0x167ec, (jint) 0x123e6, (jint) 0x167e6,
#line 1242
        (jint) 0x1f628, (jint) 0x1fb16, (jint) 0x162fc, (jint) 0x1f624, (jint) 0x1627e, (jint) 0x1f622, (jint) 0x1e428, (jint) 0x1f216,
#line 1243
        (jint) 0x1ec68, (jint) 0x1f636, (jint) 0x1ec64, (jint) 0x1e422, (jint) 0x1ec62, (jint) 0x1c868, (jint) 0x1e436, (jint) 0x1d8e8,
#line 1244
        (jint) 0x1c864, (jint) 0x1d8e4, (jint) 0x1c862, (jint) 0x1d8e2, (jint) 0x190e8, (jint) 0x1c876, (jint) 0x1b1e8, (jint) 0x1d8f6,
#line 1245
        (jint) 0x1b1e4, (jint) 0x190e2, (jint) 0x1b1e2, (jint) 0x121e8, (jint) 0x190f6, (jint) 0x163e8, (jint) 0x121e4, (jint) 0x163e4,
#line 1246
        (jint) 0x121e2, (jint) 0x163e2, (jint) 0x121f6, (jint) 0x163f6, (jint) 0x1f614, (jint) 0x1617e, (jint) 0x1f612, (jint) 0x1e414,
#line 1247
        (jint) 0x1ec34, (jint) 0x1e412, (jint) 0x1ec32, (jint) 0x1c834, (jint) 0x1d874, (jint) 0x1c832, (jint) 0x1d872, (jint) 0x19074,
#line 1248
        (jint) 0x1b0f4, (jint) 0x19072, (jint) 0x1b0f2, (jint) 0x120f4, (jint) 0x161f4, (jint) 0x120f2, (jint) 0x161f2, (jint) 0x1f60a,
#line 1249
        (jint) 0x1e40a, (jint) 0x1ec1a, (jint) 0x1c81a, (jint) 0x1d83a, (jint) 0x1903a, (jint) 0x1b07a, (jint) 0x1e2a0, (jint) 0x1f158,
#line 1250
        (jint) 0x1f8ae, (jint) 0x1e290, (jint) 0x1f14c, (jint) 0x1e288, (jint) 0x1f146, (jint) 0x1e284, (jint) 0x1e282, (jint) 0x1c5a0,
#line 1251
        (jint) 0x1e2d8, (jint) 0x1f16e, (jint) 0x1c590, (jint) 0x1e2cc, (jint) 0x1c588, (jint) 0x1e2c6, (jint) 0x1c584, (jint) 0x1c582,
#line 1252
        (jint) 0x18ba0, (jint) 0x1c5d8, (jint) 0x1e2ee, (jint) 0x18b90, (jint) 0x1c5cc, (jint) 0x18b88, (jint) 0x1c5c6, (jint) 0x18b84,
#line 1253
        (jint) 0x18b82, (jint) 0x117a0, (jint) 0x18bd8, (jint) 0x1c5ee, (jint) 0x11790, (jint) 0x18bcc, (jint) 0x11788, (jint) 0x18bc6,
#line 1254
        (jint) 0x11784, (jint) 0x11782, (jint) 0x117d8, (jint) 0x18bee, (jint) 0x117cc, (jint) 0x117c6, (jint) 0x117ee, (jint) 0x1f350,
#line 1255
        (jint) 0x1f9ac, (jint) 0x135f8, (jint) 0x1f348, (jint) 0x1f9a6, (jint) 0x134fc, (jint) 0x1f344, (jint) 0x1347e, (jint) 0x1f342,
#line 1256
        (jint) 0x1e250, (jint) 0x1f12c, (jint) 0x1e6d0, (jint) 0x1e248, (jint) 0x1f126, (jint) 0x1e6c8, (jint) 0x1f366, (jint) 0x1e6c4,
#line 1257
        (jint) 0x1e242, (jint) 0x1e6c2, (jint) 0x1c4d0, (jint) 0x1e26c, (jint) 0x1cdd0, (jint) 0x1c4c8, (jint) 0x1e266, (jint) 0x1cdc8,
#line 1258
        (jint) 0x1e6e6, (jint) 0x1cdc4, (jint) 0x1c4c2, (jint) 0x1cdc2, (jint) 0x189d0, (jint) 0x1c4ec, (jint) 0x19bd0, (jint) 0x189c8,
#line 1259
        (jint) 0x1c4e6, (jint) 0x19bc8, (jint) 0x1cde6, (jint) 0x19bc4, (jint) 0x189c2, (jint) 0x19bc2, (jint) 0x113d0, (jint) 0x189ec,
#line 1260
        (jint) 0x137d0, (jint) 0x113c8, (jint) 0x189e6, (jint) 0x137c8, (jint) 0x19be6, (jint) 0x137c4, (jint) 0x113c2, (jint) 0x137c2,
#line 1261
        (jint) 0x113ec, (jint) 0x137ec, (jint) 0x113e6, (jint) 0x137e6, (jint) 0x1fba8, (jint) 0x175f0, (jint) 0x1bafc, (jint) 0x1fba4,
#line 1262
        (jint) 0x174f8, (jint) 0x1ba7e, (jint) 0x1fba2, (jint) 0x1747c, (jint) 0x1743e, (jint) 0x1f328, (jint) 0x1f996, (jint) 0x132fc,
#line 1263
        (jint) 0x1f768, (jint) 0x1fbb6, (jint) 0x176fc, (jint) 0x1327e, (jint) 0x1f764, (jint) 0x1f322, (jint) 0x1767e, (jint) 0x1f762,
#line 1264
        (jint) 0x1e228, (jint) 0x1f116, (jint) 0x1e668, (jint) 0x1e224, (jint) 0x1eee8, (jint) 0x1f776, (jint) 0x1e222, (jint) 0x1eee4,
#line 1265
        (jint) 0x1e662, (jint) 0x1eee2, (jint) 0x1c468, (jint) 0x1e236, (jint) 0x1cce8, (jint) 0x1c464, (jint) 0x1dde8, (jint) 0x1cce4,
#line 1266
        (jint) 0x1c462, (jint) 0x1dde4, (jint) 0x1cce2, (jint) 0x1dde2, (jint) 0x188e8, (jint) 0x1c476, (jint) 0x199e8, (jint) 0x188e4,
#line 1267
        (jint) 0x1bbe8, (jint) 0x199e4, (jint) 0x188e2, (jint) 0x1bbe4, (jint) 0x199e2, (jint) 0x1bbe2, (jint) 0x111e8, (jint) 0x188f6,
#line 1268
        (jint) 0x133e8, (jint) 0x111e4, (jint) 0x177e8, (jint) 0x133e4, (jint) 0x111e2, (jint) 0x177e4, (jint) 0x133e2, (jint) 0x177e2,
#line 1269
        (jint) 0x111f6, (jint) 0x133f6, (jint) 0x1fb94, (jint) 0x172f8, (jint) 0x1b97e, (jint) 0x1fb92, (jint) 0x1727c, (jint) 0x1723e,
#line 1270
        (jint) 0x1f314, (jint) 0x1317e, (jint) 0x1f734, (jint) 0x1f312, (jint) 0x1737e, (jint) 0x1f732, (jint) 0x1e214, (jint) 0x1e634,
#line 1271
        (jint) 0x1e212, (jint) 0x1ee74, (jint) 0x1e632, (jint) 0x1ee72, (jint) 0x1c434, (jint) 0x1cc74, (jint) 0x1c432, (jint) 0x1dcf4,
#line 1272
        (jint) 0x1cc72, (jint) 0x1dcf2, (jint) 0x18874, (jint) 0x198f4, (jint) 0x18872, (jint) 0x1b9f4, (jint) 0x198f2, (jint) 0x1b9f2,
#line 1273
        (jint) 0x110f4, (jint) 0x131f4, (jint) 0x110f2, (jint) 0x173f4, (jint) 0x131f2, (jint) 0x173f2, (jint) 0x1fb8a, (jint) 0x1717c,
#line 1274
        (jint) 0x1713e, (jint) 0x1f30a, (jint) 0x1f71a, (jint) 0x1e20a, (jint) 0x1e61a, (jint) 0x1ee3a, (jint) 0x1c41a, (jint) 0x1cc3a,
#line 1275
        (jint) 0x1dc7a, (jint) 0x1883a, (jint) 0x1987a, (jint) 0x1b8fa, (jint) 0x1107a, (jint) 0x130fa, (jint) 0x171fa, (jint) 0x170be,
#line 1276
        (jint) 0x1e150, (jint) 0x1f0ac, (jint) 0x1e148, (jint) 0x1f0a6, (jint) 0x1e144, (jint) 0x1e142, (jint) 0x1c2d0, (jint) 0x1e16c,
#line 1277
        (jint) 0x1c2c8, (jint) 0x1e166, (jint) 0x1c2c4, (jint) 0x1c2c2, (jint) 0x185d0, (jint) 0x1c2ec, (jint) 0x185c8, (jint) 0x1c2e6,
#line 1278
        (jint) 0x185c4, (jint) 0x185c2, (jint) 0x10bd0, (jint) 0x185ec, (jint) 0x10bc8, (jint) 0x185e6, (jint) 0x10bc4, (jint) 0x10bc2,
#line 1279
        (jint) 0x10bec, (jint) 0x10be6, (jint) 0x1f1a8, (jint) 0x1f8d6, (jint) 0x11afc, (jint) 0x1f1a4, (jint) 0x11a7e, (jint) 0x1f1a2,
#line 1280
        (jint) 0x1e128, (jint) 0x1f096, (jint) 0x1e368, (jint) 0x1e124, (jint) 0x1e364, (jint) 0x1e122, (jint) 0x1e362, (jint) 0x1c268,
#line 1281
        (jint) 0x1e136, (jint) 0x1c6e8, (jint) 0x1c264, (jint) 0x1c6e4, (jint) 0x1c262, (jint) 0x1c6e2, (jint) 0x184e8, (jint) 0x1c276,
#line 1282
        (jint) 0x18de8, (jint) 0x184e4, (jint) 0x18de4, (jint) 0x184e2, (jint) 0x18de2, (jint) 0x109e8, (jint) 0x184f6, (jint) 0x11be8,
#line 1283
        (jint) 0x109e4, (jint) 0x11be4, (jint) 0x109e2, (jint) 0x11be2, (jint) 0x109f6, (jint) 0x11bf6, (jint) 0x1f9d4, (jint) 0x13af8,
#line 1284
        (jint) 0x19d7e, (jint) 0x1f9d2, (jint) 0x13a7c, (jint) 0x13a3e, (jint) 0x1f194, (jint) 0x1197e, (jint) 0x1f3b4, (jint) 0x1f192,
#line 1285
        (jint) 0x13b7e, (jint) 0x1f3b2, (jint) 0x1e114, (jint) 0x1e334, (jint) 0x1e112, (jint) 0x1e774, (jint) 0x1e332, (jint) 0x1e772,
#line 1286
        (jint) 0x1c234, (jint) 0x1c674, (jint) 0x1c232, (jint) 0x1cef4, (jint) 0x1c672, (jint) 0x1cef2, (jint) 0x18474, (jint) 0x18cf4,
#line 1287
        (jint) 0x18472, (jint) 0x19df4, (jint) 0x18cf2, (jint) 0x19df2, (jint) 0x108f4, (jint) 0x119f4, (jint) 0x108f2, (jint) 0x13bf4,
#line 1288
        (jint) 0x119f2, (jint) 0x13bf2, (jint) 0x17af0, (jint) 0x1bd7c, (jint) 0x17a78, (jint) 0x1bd3e, (jint) 0x17a3c, (jint) 0x17a1e,
#line 1289
        (jint) 0x1f9ca, (jint) 0x1397c, (jint) 0x1fbda, (jint) 0x17b7c, (jint) 0x1393e, (jint) 0x17b3e, (jint) 0x1f18a, (jint) 0x1f39a,
#line 1290
        (jint) 0x1f7ba, (jint) 0x1e10a, (jint) 0x1e31a, (jint) 0x1e73a, (jint) 0x1ef7a, (jint) 0x1c21a, (jint) 0x1c63a, (jint) 0x1ce7a,
#line 1291
        (jint) 0x1defa, (jint) 0x1843a, (jint) 0x18c7a, (jint) 0x19cfa, (jint) 0x1bdfa, (jint) 0x1087a, (jint) 0x118fa, (jint) 0x139fa,
#line 1292
        (jint) 0x17978, (jint) 0x1bcbe, (jint) 0x1793c, (jint) 0x1791e, (jint) 0x138be, (jint) 0x179be, (jint) 0x178bc, (jint) 0x1789e,
#line 1293
        (jint) 0x1785e, (jint) 0x1e0a8, (jint) 0x1e0a4, (jint) 0x1e0a2, (jint) 0x1c168, (jint) 0x1e0b6, (jint) 0x1c164, (jint) 0x1c162,
#line 1294
        (jint) 0x182e8, (jint) 0x1c176, (jint) 0x182e4, (jint) 0x182e2, (jint) 0x105e8, (jint) 0x182f6, (jint) 0x105e4, (jint) 0x105e2,
#line 1295
        (jint) 0x105f6, (jint) 0x1f0d4, (jint) 0x10d7e, (jint) 0x1f0d2, (jint) 0x1e094, (jint) 0x1e1b4, (jint) 0x1e092, (jint) 0x1e1b2,
#line 1296
        (jint) 0x1c134, (jint) 0x1c374, (jint) 0x1c132, (jint) 0x1c372, (jint) 0x18274, (jint) 0x186f4, (jint) 0x18272, (jint) 0x186f2,
#line 1297
        (jint) 0x104f4, (jint) 0x10df4, (jint) 0x104f2, (jint) 0x10df2, (jint) 0x1f8ea, (jint) 0x11d7c, (jint) 0x11d3e, (jint) 0x1f0ca,
#line 1298
        (jint) 0x1f1da, (jint) 0x1e08a, (jint) 0x1e19a, (jint) 0x1e3ba, (jint) 0x1c11a, (jint) 0x1c33a, (jint) 0x1c77a, (jint) 0x1823a,
#line 1299
        (jint) 0x1867a, (jint) 0x18efa, (jint) 0x1047a, (jint) 0x10cfa, (jint) 0x11dfa, (jint) 0x13d78, (jint) 0x19ebe, (jint) 0x13d3c,
#line 1300
        (jint) 0x13d1e, (jint) 0x11cbe, (jint) 0x13dbe, (jint) 0x17d70, (jint) 0x1bebc, (jint) 0x17d38, (jint) 0x1be9e, (jint) 0x17d1c,
#line 1301
        (jint) 0x17d0e, (jint) 0x13cbc, (jint) 0x17dbc, (jint) 0x13c9e, (jint) 0x17d9e, (jint) 0x17cb8, (jint) 0x1be5e, (jint) 0x17c9c,
#line 1302
        (jint) 0x17c8e, (jint) 0x13c5e, (jint) 0x17cde, (jint) 0x17c5c, (jint) 0x17c4e, (jint) 0x17c2e, (jint) 0x1c0b4, (jint) 0x1c0b2,
#line 1303
        (jint) 0x18174, (jint) 0x18172, (jint) 0x102f4, (jint) 0x102f2, (jint) 0x1e0da, (jint) 0x1c09a, (jint) 0x1c1ba, (jint) 0x1813a,
#line 1304
        (jint) 0x1837a, (jint) 0x1027a, (jint) 0x106fa, (jint) 0x10ebe, (jint) 0x11ebc, (jint) 0x11e9e, (jint) 0x13eb8, (jint) 0x19f5e,
#line 1305
        (jint) 0x13e9c, (jint) 0x13e8e, (jint) 0x11e5e, (jint) 0x13ede, (jint) 0x17eb0, (jint) 0x1bf5c, (jint) 0x17e98, (jint) 0x1bf4e,
#line 1306
        (jint) 0x17e8c, (jint) 0x17e86, (jint) 0x13e5c, (jint) 0x17edc, (jint) 0x13e4e, (jint) 0x17ece, (jint) 0x17e58, (jint) 0x1bf2e,
#line 1307
        (jint) 0x17e4c, (jint) 0x17e46, (jint) 0x13e2e, (jint) 0x17e6e, (jint) 0x17e2c, (jint) 0x17e26, (jint) 0x10f5e, (jint) 0x11f5c,
#line 1308
        (jint) 0x11f4e, (jint) 0x13f58, (jint) 0x19fae, (jint) 0x13f4c, (jint) 0x13f46, (jint) 0x11f2e, (jint) 0x13f6e, (jint) 0x13f2c,
#line 1309
        (jint) 0x13f26 } count:929], [IOSIntArray arrayWithInts:(jint[]){
#line 1311
          (jint) 0x1abe0, (jint) 0x1d5f8, (jint) 0x153c0, (jint) 0x1a9f0, (jint) 0x1d4fc, (jint) 0x151e0, (jint) 0x1a8f8, (jint) 0x1d47e,
#line 1312
          (jint) 0x150f0, (jint) 0x1a87c, (jint) 0x15078, (jint) 0x1fad0, (jint) 0x15be0, (jint) 0x1adf8, (jint) 0x1fac8, (jint) 0x159f0,
#line 1313
          (jint) 0x1acfc, (jint) 0x1fac4, (jint) 0x158f8, (jint) 0x1ac7e, (jint) 0x1fac2, (jint) 0x1587c, (jint) 0x1f5d0, (jint) 0x1faec,
#line 1314
          (jint) 0x15df8, (jint) 0x1f5c8, (jint) 0x1fae6, (jint) 0x15cfc, (jint) 0x1f5c4, (jint) 0x15c7e, (jint) 0x1f5c2, (jint) 0x1ebd0,
#line 1315
          (jint) 0x1f5ec, (jint) 0x1ebc8, (jint) 0x1f5e6, (jint) 0x1ebc4, (jint) 0x1ebc2, (jint) 0x1d7d0, (jint) 0x1ebec, (jint) 0x1d7c8,
#line 1316
          (jint) 0x1ebe6, (jint) 0x1d7c4, (jint) 0x1d7c2, (jint) 0x1afd0, (jint) 0x1d7ec, (jint) 0x1afc8, (jint) 0x1d7e6, (jint) 0x1afc4,
#line 1317
          (jint) 0x14bc0, (jint) 0x1a5f0, (jint) 0x1d2fc, (jint) 0x149e0, (jint) 0x1a4f8, (jint) 0x1d27e, (jint) 0x148f0, (jint) 0x1a47c,
#line 1318
          (jint) 0x14878, (jint) 0x1a43e, (jint) 0x1483c, (jint) 0x1fa68, (jint) 0x14df0, (jint) 0x1a6fc, (jint) 0x1fa64, (jint) 0x14cf8,
#line 1319
          (jint) 0x1a67e, (jint) 0x1fa62, (jint) 0x14c7c, (jint) 0x14c3e, (jint) 0x1f4e8, (jint) 0x1fa76, (jint) 0x14efc, (jint) 0x1f4e4,
#line 1320
          (jint) 0x14e7e, (jint) 0x1f4e2, (jint) 0x1e9e8, (jint) 0x1f4f6, (jint) 0x1e9e4, (jint) 0x1e9e2, (jint) 0x1d3e8, (jint) 0x1e9f6,
#line 1321
          (jint) 0x1d3e4, (jint) 0x1d3e2, (jint) 0x1a7e8, (jint) 0x1d3f6, (jint) 0x1a7e4, (jint) 0x1a7e2, (jint) 0x145e0, (jint) 0x1a2f8,
#line 1322
          (jint) 0x1d17e, (jint) 0x144f0, (jint) 0x1a27c, (jint) 0x14478, (jint) 0x1a23e, (jint) 0x1443c, (jint) 0x1441e, (jint) 0x1fa34,
#line 1323
          (jint) 0x146f8, (jint) 0x1a37e, (jint) 0x1fa32, (jint) 0x1467c, (jint) 0x1463e, (jint) 0x1f474, (jint) 0x1477e, (jint) 0x1f472,
#line 1324
          (jint) 0x1e8f4, (jint) 0x1e8f2, (jint) 0x1d1f4, (jint) 0x1d1f2, (jint) 0x1a3f4, (jint) 0x1a3f2, (jint) 0x142f0, (jint) 0x1a17c,
#line 1325
          (jint) 0x14278, (jint) 0x1a13e, (jint) 0x1423c, (jint) 0x1421e, (jint) 0x1fa1a, (jint) 0x1437c, (jint) 0x1433e, (jint) 0x1f43a,
#line 1326
          (jint) 0x1e87a, (jint) 0x1d0fa, (jint) 0x14178, (jint) 0x1a0be, (jint) 0x1413c, (jint) 0x1411e, (jint) 0x141be, (jint) 0x140bc,
#line 1327
          (jint) 0x1409e, (jint) 0x12bc0, (jint) 0x195f0, (jint) 0x1cafc, (jint) 0x129e0, (jint) 0x194f8, (jint) 0x1ca7e, (jint) 0x128f0,
#line 1328
          (jint) 0x1947c, (jint) 0x12878, (jint) 0x1943e, (jint) 0x1283c, (jint) 0x1f968, (jint) 0x12df0, (jint) 0x196fc, (jint) 0x1f964,
#line 1329
          (jint) 0x12cf8, (jint) 0x1967e, (jint) 0x1f962, (jint) 0x12c7c, (jint) 0x12c3e, (jint) 0x1f2e8, (jint) 0x1f976, (jint) 0x12efc,
#line 1330
          (jint) 0x1f2e4, (jint) 0x12e7e, (jint) 0x1f2e2, (jint) 0x1e5e8, (jint) 0x1f2f6, (jint) 0x1e5e4, (jint) 0x1e5e2, (jint) 0x1cbe8,
#line 1331
          (jint) 0x1e5f6, (jint) 0x1cbe4, (jint) 0x1cbe2, (jint) 0x197e8, (jint) 0x1cbf6, (jint) 0x197e4, (jint) 0x197e2, (jint) 0x1b5e0,
#line 1332
          (jint) 0x1daf8, (jint) 0x1ed7e, (jint) 0x169c0, (jint) 0x1b4f0, (jint) 0x1da7c, (jint) 0x168e0, (jint) 0x1b478, (jint) 0x1da3e,
#line 1333
          (jint) 0x16870, (jint) 0x1b43c, (jint) 0x16838, (jint) 0x1b41e, (jint) 0x1681c, (jint) 0x125e0, (jint) 0x192f8, (jint) 0x1c97e,
#line 1334
          (jint) 0x16de0, (jint) 0x124f0, (jint) 0x1927c, (jint) 0x16cf0, (jint) 0x1b67c, (jint) 0x1923e, (jint) 0x16c78, (jint) 0x1243c,
#line 1335
          (jint) 0x16c3c, (jint) 0x1241e, (jint) 0x16c1e, (jint) 0x1f934, (jint) 0x126f8, (jint) 0x1937e, (jint) 0x1fb74, (jint) 0x1f932,
#line 1336
          (jint) 0x16ef8, (jint) 0x1267c, (jint) 0x1fb72, (jint) 0x16e7c, (jint) 0x1263e, (jint) 0x16e3e, (jint) 0x1f274, (jint) 0x1277e,
#line 1337
          (jint) 0x1f6f4, (jint) 0x1f272, (jint) 0x16f7e, (jint) 0x1f6f2, (jint) 0x1e4f4, (jint) 0x1edf4, (jint) 0x1e4f2, (jint) 0x1edf2,
#line 1338
          (jint) 0x1c9f4, (jint) 0x1dbf4, (jint) 0x1c9f2, (jint) 0x1dbf2, (jint) 0x193f4, (jint) 0x193f2, (jint) 0x165c0, (jint) 0x1b2f0,
#line 1339
          (jint) 0x1d97c, (jint) 0x164e0, (jint) 0x1b278, (jint) 0x1d93e, (jint) 0x16470, (jint) 0x1b23c, (jint) 0x16438, (jint) 0x1b21e,
#line 1340
          (jint) 0x1641c, (jint) 0x1640e, (jint) 0x122f0, (jint) 0x1917c, (jint) 0x166f0, (jint) 0x12278, (jint) 0x1913e, (jint) 0x16678,
#line 1341
          (jint) 0x1b33e, (jint) 0x1663c, (jint) 0x1221e, (jint) 0x1661e, (jint) 0x1f91a, (jint) 0x1237c, (jint) 0x1fb3a, (jint) 0x1677c,
#line 1342
          (jint) 0x1233e, (jint) 0x1673e, (jint) 0x1f23a, (jint) 0x1f67a, (jint) 0x1e47a, (jint) 0x1ecfa, (jint) 0x1c8fa, (jint) 0x1d9fa,
#line 1343
          (jint) 0x191fa, (jint) 0x162e0, (jint) 0x1b178, (jint) 0x1d8be, (jint) 0x16270, (jint) 0x1b13c, (jint) 0x16238, (jint) 0x1b11e,
#line 1344
          (jint) 0x1621c, (jint) 0x1620e, (jint) 0x12178, (jint) 0x190be, (jint) 0x16378, (jint) 0x1213c, (jint) 0x1633c, (jint) 0x1211e,
#line 1345
          (jint) 0x1631e, (jint) 0x121be, (jint) 0x163be, (jint) 0x16170, (jint) 0x1b0bc, (jint) 0x16138, (jint) 0x1b09e, (jint) 0x1611c,
#line 1346
          (jint) 0x1610e, (jint) 0x120bc, (jint) 0x161bc, (jint) 0x1209e, (jint) 0x1619e, (jint) 0x160b8, (jint) 0x1b05e, (jint) 0x1609c,
#line 1347
          (jint) 0x1608e, (jint) 0x1205e, (jint) 0x160de, (jint) 0x1605c, (jint) 0x1604e, (jint) 0x115e0, (jint) 0x18af8, (jint) 0x1c57e,
#line 1348
          (jint) 0x114f0, (jint) 0x18a7c, (jint) 0x11478, (jint) 0x18a3e, (jint) 0x1143c, (jint) 0x1141e, (jint) 0x1f8b4, (jint) 0x116f8,
#line 1349
          (jint) 0x18b7e, (jint) 0x1f8b2, (jint) 0x1167c, (jint) 0x1163e, (jint) 0x1f174, (jint) 0x1177e, (jint) 0x1f172, (jint) 0x1e2f4,
#line 1350
          (jint) 0x1e2f2, (jint) 0x1c5f4, (jint) 0x1c5f2, (jint) 0x18bf4, (jint) 0x18bf2, (jint) 0x135c0, (jint) 0x19af0, (jint) 0x1cd7c,
#line 1351
          (jint) 0x134e0, (jint) 0x19a78, (jint) 0x1cd3e, (jint) 0x13470, (jint) 0x19a3c, (jint) 0x13438, (jint) 0x19a1e, (jint) 0x1341c,
#line 1352
          (jint) 0x1340e, (jint) 0x112f0, (jint) 0x1897c, (jint) 0x136f0, (jint) 0x11278, (jint) 0x1893e, (jint) 0x13678, (jint) 0x19b3e,
#line 1353
          (jint) 0x1363c, (jint) 0x1121e, (jint) 0x1361e, (jint) 0x1f89a, (jint) 0x1137c, (jint) 0x1f9ba, (jint) 0x1377c, (jint) 0x1133e,
#line 1354
          (jint) 0x1373e, (jint) 0x1f13a, (jint) 0x1f37a, (jint) 0x1e27a, (jint) 0x1e6fa, (jint) 0x1c4fa, (jint) 0x1cdfa, (jint) 0x189fa,
#line 1355
          (jint) 0x1bae0, (jint) 0x1dd78, (jint) 0x1eebe, (jint) 0x174c0, (jint) 0x1ba70, (jint) 0x1dd3c, (jint) 0x17460, (jint) 0x1ba38,
#line 1356
          (jint) 0x1dd1e, (jint) 0x17430, (jint) 0x1ba1c, (jint) 0x17418, (jint) 0x1ba0e, (jint) 0x1740c, (jint) 0x132e0, (jint) 0x19978,
#line 1357
          (jint) 0x1ccbe, (jint) 0x176e0, (jint) 0x13270, (jint) 0x1993c, (jint) 0x17670, (jint) 0x1bb3c, (jint) 0x1991e, (jint) 0x17638,
#line 1358
          (jint) 0x1321c, (jint) 0x1761c, (jint) 0x1320e, (jint) 0x1760e, (jint) 0x11178, (jint) 0x188be, (jint) 0x13378, (jint) 0x1113c,
#line 1359
          (jint) 0x17778, (jint) 0x1333c, (jint) 0x1111e, (jint) 0x1773c, (jint) 0x1331e, (jint) 0x1771e, (jint) 0x111be, (jint) 0x133be,
#line 1360
          (jint) 0x177be, (jint) 0x172c0, (jint) 0x1b970, (jint) 0x1dcbc, (jint) 0x17260, (jint) 0x1b938, (jint) 0x1dc9e, (jint) 0x17230,
#line 1361
          (jint) 0x1b91c, (jint) 0x17218, (jint) 0x1b90e, (jint) 0x1720c, (jint) 0x17206, (jint) 0x13170, (jint) 0x198bc, (jint) 0x17370,
#line 1362
          (jint) 0x13138, (jint) 0x1989e, (jint) 0x17338, (jint) 0x1b99e, (jint) 0x1731c, (jint) 0x1310e, (jint) 0x1730e, (jint) 0x110bc,
#line 1363
          (jint) 0x131bc, (jint) 0x1109e, (jint) 0x173bc, (jint) 0x1319e, (jint) 0x1739e, (jint) 0x17160, (jint) 0x1b8b8, (jint) 0x1dc5e,
#line 1364
          (jint) 0x17130, (jint) 0x1b89c, (jint) 0x17118, (jint) 0x1b88e, (jint) 0x1710c, (jint) 0x17106, (jint) 0x130b8, (jint) 0x1985e,
#line 1365
          (jint) 0x171b8, (jint) 0x1309c, (jint) 0x1719c, (jint) 0x1308e, (jint) 0x1718e, (jint) 0x1105e, (jint) 0x130de, (jint) 0x171de,
#line 1366
          (jint) 0x170b0, (jint) 0x1b85c, (jint) 0x17098, (jint) 0x1b84e, (jint) 0x1708c, (jint) 0x17086, (jint) 0x1305c, (jint) 0x170dc,
#line 1367
          (jint) 0x1304e, (jint) 0x170ce, (jint) 0x17058, (jint) 0x1b82e, (jint) 0x1704c, (jint) 0x17046, (jint) 0x1302e, (jint) 0x1706e,
#line 1368
          (jint) 0x1702c, (jint) 0x17026, (jint) 0x10af0, (jint) 0x1857c, (jint) 0x10a78, (jint) 0x1853e, (jint) 0x10a3c, (jint) 0x10a1e,
#line 1369
          (jint) 0x10b7c, (jint) 0x10b3e, (jint) 0x1f0ba, (jint) 0x1e17a, (jint) 0x1c2fa, (jint) 0x185fa, (jint) 0x11ae0, (jint) 0x18d78,
#line 1370
          (jint) 0x1c6be, (jint) 0x11a70, (jint) 0x18d3c, (jint) 0x11a38, (jint) 0x18d1e, (jint) 0x11a1c, (jint) 0x11a0e, (jint) 0x10978,
#line 1371
          (jint) 0x184be, (jint) 0x11b78, (jint) 0x1093c, (jint) 0x11b3c, (jint) 0x1091e, (jint) 0x11b1e, (jint) 0x109be, (jint) 0x11bbe,
#line 1372
          (jint) 0x13ac0, (jint) 0x19d70, (jint) 0x1cebc, (jint) 0x13a60, (jint) 0x19d38, (jint) 0x1ce9e, (jint) 0x13a30, (jint) 0x19d1c,
#line 1373
          (jint) 0x13a18, (jint) 0x19d0e, (jint) 0x13a0c, (jint) 0x13a06, (jint) 0x11970, (jint) 0x18cbc, (jint) 0x13b70, (jint) 0x11938,
#line 1374
          (jint) 0x18c9e, (jint) 0x13b38, (jint) 0x1191c, (jint) 0x13b1c, (jint) 0x1190e, (jint) 0x13b0e, (jint) 0x108bc, (jint) 0x119bc,
#line 1375
          (jint) 0x1089e, (jint) 0x13bbc, (jint) 0x1199e, (jint) 0x13b9e, (jint) 0x1bd60, (jint) 0x1deb8, (jint) 0x1ef5e, (jint) 0x17a40,
#line 1376
          (jint) 0x1bd30, (jint) 0x1de9c, (jint) 0x17a20, (jint) 0x1bd18, (jint) 0x1de8e, (jint) 0x17a10, (jint) 0x1bd0c, (jint) 0x17a08,
#line 1377
          (jint) 0x1bd06, (jint) 0x17a04, (jint) 0x13960, (jint) 0x19cb8, (jint) 0x1ce5e, (jint) 0x17b60, (jint) 0x13930, (jint) 0x19c9c,
#line 1378
          (jint) 0x17b30, (jint) 0x1bd9c, (jint) 0x19c8e, (jint) 0x17b18, (jint) 0x1390c, (jint) 0x17b0c, (jint) 0x13906, (jint) 0x17b06,
#line 1379
          (jint) 0x118b8, (jint) 0x18c5e, (jint) 0x139b8, (jint) 0x1189c, (jint) 0x17bb8, (jint) 0x1399c, (jint) 0x1188e, (jint) 0x17b9c,
#line 1380
          (jint) 0x1398e, (jint) 0x17b8e, (jint) 0x1085e, (jint) 0x118de, (jint) 0x139de, (jint) 0x17bde, (jint) 0x17940, (jint) 0x1bcb0,
#line 1381
          (jint) 0x1de5c, (jint) 0x17920, (jint) 0x1bc98, (jint) 0x1de4e, (jint) 0x17910, (jint) 0x1bc8c, (jint) 0x17908, (jint) 0x1bc86,
#line 1382
          (jint) 0x17904, (jint) 0x17902, (jint) 0x138b0, (jint) 0x19c5c, (jint) 0x179b0, (jint) 0x13898, (jint) 0x19c4e, (jint) 0x17998,
#line 1383
          (jint) 0x1bcce, (jint) 0x1798c, (jint) 0x13886, (jint) 0x17986, (jint) 0x1185c, (jint) 0x138dc, (jint) 0x1184e, (jint) 0x179dc,
#line 1384
          (jint) 0x138ce, (jint) 0x179ce, (jint) 0x178a0, (jint) 0x1bc58, (jint) 0x1de2e, (jint) 0x17890, (jint) 0x1bc4c, (jint) 0x17888,
#line 1385
          (jint) 0x1bc46, (jint) 0x17884, (jint) 0x17882, (jint) 0x13858, (jint) 0x19c2e, (jint) 0x178d8, (jint) 0x1384c, (jint) 0x178cc,
#line 1386
          (jint) 0x13846, (jint) 0x178c6, (jint) 0x1182e, (jint) 0x1386e, (jint) 0x178ee, (jint) 0x17850, (jint) 0x1bc2c, (jint) 0x17848,
#line 1387
          (jint) 0x1bc26, (jint) 0x17844, (jint) 0x17842, (jint) 0x1382c, (jint) 0x1786c, (jint) 0x13826, (jint) 0x17866, (jint) 0x17828,
#line 1388
          (jint) 0x1bc16, (jint) 0x17824, (jint) 0x17822, (jint) 0x13816, (jint) 0x17836, (jint) 0x10578, (jint) 0x182be, (jint) 0x1053c,
#line 1389
          (jint) 0x1051e, (jint) 0x105be, (jint) 0x10d70, (jint) 0x186bc, (jint) 0x10d38, (jint) 0x1869e, (jint) 0x10d1c, (jint) 0x10d0e,
#line 1390
          (jint) 0x104bc, (jint) 0x10dbc, (jint) 0x1049e, (jint) 0x10d9e, (jint) 0x11d60, (jint) 0x18eb8, (jint) 0x1c75e, (jint) 0x11d30,
#line 1391
          (jint) 0x18e9c, (jint) 0x11d18, (jint) 0x18e8e, (jint) 0x11d0c, (jint) 0x11d06, (jint) 0x10cb8, (jint) 0x1865e, (jint) 0x11db8,
#line 1392
          (jint) 0x10c9c, (jint) 0x11d9c, (jint) 0x10c8e, (jint) 0x11d8e, (jint) 0x1045e, (jint) 0x10cde, (jint) 0x11dde, (jint) 0x13d40,
#line 1393
          (jint) 0x19eb0, (jint) 0x1cf5c, (jint) 0x13d20, (jint) 0x19e98, (jint) 0x1cf4e, (jint) 0x13d10, (jint) 0x19e8c, (jint) 0x13d08,
#line 1394
          (jint) 0x19e86, (jint) 0x13d04, (jint) 0x13d02, (jint) 0x11cb0, (jint) 0x18e5c, (jint) 0x13db0, (jint) 0x11c98, (jint) 0x18e4e,
#line 1395
          (jint) 0x13d98, (jint) 0x19ece, (jint) 0x13d8c, (jint) 0x11c86, (jint) 0x13d86, (jint) 0x10c5c, (jint) 0x11cdc, (jint) 0x10c4e,
#line 1396
          (jint) 0x13ddc, (jint) 0x11cce, (jint) 0x13dce, (jint) 0x1bea0, (jint) 0x1df58, (jint) 0x1efae, (jint) 0x1be90, (jint) 0x1df4c,
#line 1397
          (jint) 0x1be88, (jint) 0x1df46, (jint) 0x1be84, (jint) 0x1be82, (jint) 0x13ca0, (jint) 0x19e58, (jint) 0x1cf2e, (jint) 0x17da0,
#line 1398
          (jint) 0x13c90, (jint) 0x19e4c, (jint) 0x17d90, (jint) 0x1becc, (jint) 0x19e46, (jint) 0x17d88, (jint) 0x13c84, (jint) 0x17d84,
#line 1399
          (jint) 0x13c82, (jint) 0x17d82, (jint) 0x11c58, (jint) 0x18e2e, (jint) 0x13cd8, (jint) 0x11c4c, (jint) 0x17dd8, (jint) 0x13ccc,
#line 1400
          (jint) 0x11c46, (jint) 0x17dcc, (jint) 0x13cc6, (jint) 0x17dc6, (jint) 0x10c2e, (jint) 0x11c6e, (jint) 0x13cee, (jint) 0x17dee,
#line 1401
          (jint) 0x1be50, (jint) 0x1df2c, (jint) 0x1be48, (jint) 0x1df26, (jint) 0x1be44, (jint) 0x1be42, (jint) 0x13c50, (jint) 0x19e2c,
#line 1402
          (jint) 0x17cd0, (jint) 0x13c48, (jint) 0x19e26, (jint) 0x17cc8, (jint) 0x1be66, (jint) 0x17cc4, (jint) 0x13c42, (jint) 0x17cc2,
#line 1403
          (jint) 0x11c2c, (jint) 0x13c6c, (jint) 0x11c26, (jint) 0x17cec, (jint) 0x13c66, (jint) 0x17ce6, (jint) 0x1be28, (jint) 0x1df16,
#line 1404
          (jint) 0x1be24, (jint) 0x1be22, (jint) 0x13c28, (jint) 0x19e16, (jint) 0x17c68, (jint) 0x13c24, (jint) 0x17c64, (jint) 0x13c22,
#line 1405
          (jint) 0x17c62, (jint) 0x11c16, (jint) 0x13c36, (jint) 0x17c76, (jint) 0x1be14, (jint) 0x1be12, (jint) 0x13c14, (jint) 0x17c34,
#line 1406
          (jint) 0x13c12, (jint) 0x17c32, (jint) 0x102bc, (jint) 0x1029e, (jint) 0x106b8, (jint) 0x1835e, (jint) 0x1069c, (jint) 0x1068e,
#line 1407
          (jint) 0x1025e, (jint) 0x106de, (jint) 0x10eb0, (jint) 0x1875c, (jint) 0x10e98, (jint) 0x1874e, (jint) 0x10e8c, (jint) 0x10e86,
#line 1408
          (jint) 0x1065c, (jint) 0x10edc, (jint) 0x1064e, (jint) 0x10ece, (jint) 0x11ea0, (jint) 0x18f58, (jint) 0x1c7ae, (jint) 0x11e90,
#line 1409
          (jint) 0x18f4c, (jint) 0x11e88, (jint) 0x18f46, (jint) 0x11e84, (jint) 0x11e82, (jint) 0x10e58, (jint) 0x1872e, (jint) 0x11ed8,
#line 1410
          (jint) 0x18f6e, (jint) 0x11ecc, (jint) 0x10e46, (jint) 0x11ec6, (jint) 0x1062e, (jint) 0x10e6e, (jint) 0x11eee, (jint) 0x19f50,
#line 1411
          (jint) 0x1cfac, (jint) 0x19f48, (jint) 0x1cfa6, (jint) 0x19f44, (jint) 0x19f42, (jint) 0x11e50, (jint) 0x18f2c, (jint) 0x13ed0,
#line 1412
          (jint) 0x19f6c, (jint) 0x18f26, (jint) 0x13ec8, (jint) 0x11e44, (jint) 0x13ec4, (jint) 0x11e42, (jint) 0x13ec2, (jint) 0x10e2c,
#line 1413
          (jint) 0x11e6c, (jint) 0x10e26, (jint) 0x13eec, (jint) 0x11e66, (jint) 0x13ee6, (jint) 0x1dfa8, (jint) 0x1efd6, (jint) 0x1dfa4,
#line 1414
          (jint) 0x1dfa2, (jint) 0x19f28, (jint) 0x1cf96, (jint) 0x1bf68, (jint) 0x19f24, (jint) 0x1bf64, (jint) 0x19f22, (jint) 0x1bf62,
#line 1415
          (jint) 0x11e28, (jint) 0x18f16, (jint) 0x13e68, (jint) 0x11e24, (jint) 0x17ee8, (jint) 0x13e64, (jint) 0x11e22, (jint) 0x17ee4,
#line 1416
          (jint) 0x13e62, (jint) 0x17ee2, (jint) 0x10e16, (jint) 0x11e36, (jint) 0x13e76, (jint) 0x17ef6, (jint) 0x1df94, (jint) 0x1df92,
#line 1417
          (jint) 0x19f14, (jint) 0x1bf34, (jint) 0x19f12, (jint) 0x1bf32, (jint) 0x11e14, (jint) 0x13e34, (jint) 0x11e12, (jint) 0x17e74,
#line 1418
          (jint) 0x13e32, (jint) 0x17e72, (jint) 0x1df8a, (jint) 0x19f0a, (jint) 0x1bf1a, (jint) 0x11e0a, (jint) 0x13e1a, (jint) 0x17e3a,
#line 1419
          (jint) 0x1035c, (jint) 0x1034e, (jint) 0x10758, (jint) 0x183ae, (jint) 0x1074c, (jint) 0x10746, (jint) 0x1032e, (jint) 0x1076e,
#line 1420
          (jint) 0x10f50, (jint) 0x187ac, (jint) 0x10f48, (jint) 0x187a6, (jint) 0x10f44, (jint) 0x10f42, (jint) 0x1072c, (jint) 0x10f6c,
#line 1421
          (jint) 0x10726, (jint) 0x10f66, (jint) 0x18fa8, (jint) 0x1c7d6, (jint) 0x18fa4, (jint) 0x18fa2, (jint) 0x10f28, (jint) 0x18796,
#line 1422
          (jint) 0x11f68, (jint) 0x18fb6, (jint) 0x11f64, (jint) 0x10f22, (jint) 0x11f62, (jint) 0x10716, (jint) 0x10f36, (jint) 0x11f76,
#line 1423
          (jint) 0x1cfd4, (jint) 0x1cfd2, (jint) 0x18f94, (jint) 0x19fb4, (jint) 0x18f92, (jint) 0x19fb2, (jint) 0x10f14, (jint) 0x11f34,
#line 1424
          (jint) 0x10f12, (jint) 0x13f74, (jint) 0x11f32, (jint) 0x13f72, (jint) 0x1cfca, (jint) 0x18f8a, (jint) 0x19f9a, (jint) 0x10f0a,
#line 1425
          (jint) 0x11f1a, (jint) 0x13f3a, (jint) 0x103ac, (jint) 0x103a6, (jint) 0x107a8, (jint) 0x183d6, (jint) 0x107a4, (jint) 0x107a2,
#line 1426
          (jint) 0x10396, (jint) 0x107b6, (jint) 0x187d4, (jint) 0x187d2, (jint) 0x10794, (jint) 0x10fb4, (jint) 0x10792, (jint) 0x10fb2,
#line 1427
          (jint) 0x1c7ea } count:929] } count:3 type:[IOSIntArray iosClass]];
          ComItextpdfTextPdfBarcodePDF417_ERROR_LEVEL_ = [IOSObjectArray arrayWithObjects:(id[]){ [IOSIntArray arrayWithInts:(jint[]){
#line 1432
            27, 917 } count:2], [IOSIntArray arrayWithInts:(jint[]){
#line 1434
              522, 568, 723, 809 } count:4], [IOSIntArray arrayWithInts:(jint[]){
#line 1436
                237, 308, 436, 284, 646, 653, 428, 379 } count:8], [IOSIntArray arrayWithInts:(jint[]){
#line 1438
                  274, 562, 232, 755, 599, 524, 801, 132, 295, 116, 442, 428, 295, 42, 176, 65 } count:16], [IOSIntArray arrayWithInts:(jint[]){
#line 1440
                    361, 575, 922, 525, 176, 586, 640, 321, 536, 742, 677, 742, 687, 284, 193, 517,
#line 1441
                    273, 494, 263, 147, 593, 800, 571, 320, 803, 133, 231, 390, 685, 330, 63, 410 } count:32], [IOSIntArray arrayWithInts:(jint[]){
#line 1443
                      539, 422, 6, 93, 862, 771, 453, 106, 610, 287, 107, 505, 733, 877, 381, 612,
#line 1444
                      723, 476, 462, 172, 430, 609, 858, 822, 543, 376, 511, 400, 672, 762, 283, 184,
#line 1445
                      440, 35, 519, 31, 460, 594, 225, 535, 517, 352, 605, 158, 651, 201, 488, 502,
#line 1446
                      648, 733, 717, 83, 404, 97, 280, 771, 840, 629, 4, 381, 843, 623, 264, 543 } count:64], [IOSIntArray arrayWithInts:(jint[]){
#line 1448
                        521, 310, 864, 547, 858, 580, 296, 379, 53, 779, 897, 444, 400, 925, 749, 415,
#line 1449
                        822, 93, 217, 208, 928, 244, 583, 620, 246, 148, 447, 631, 292, 908, 490, 704,
#line 1450
                        516, 258, 457, 907, 594, 723, 674, 292, 272, 96, 684, 432, 686, 606, 860, 569,
#line 1451
                        193, 219, 129, 186, 236, 287, 192, 775, 278, 173, 40, 379, 712, 463, 646, 776,
#line 1452
                        171, 491, 297, 763, 156, 732, 95, 270, 447, 90, 507, 48, 228, 821, 808, 898,
#line 1453
                        784, 663, 627, 378, 382, 262, 380, 602, 754, 336, 89, 614, 87, 432, 670, 616,
#line 1454
                        157, 374, 242, 726, 600, 269, 375, 898, 845, 454, 354, 130, 814, 587, 804, 34,
#line 1455
                        211, 330, 539, 297, 827, 865, 37, 517, 834, 315, 550, 86, 801, 4, 108, 539 } count:128], [IOSIntArray arrayWithInts:(jint[]){
#line 1457
                          524, 894, 75, 766, 882, 857, 74, 204, 82, 586, 708, 250, 905, 786, 138, 720,
#line 1458
                          858, 194, 311, 913, 275, 190, 375, 850, 438, 733, 194, 280, 201, 280, 828, 757,
#line 1459
                          710, 814, 919, 89, 68, 569, 11, 204, 796, 605, 540, 913, 801, 700, 799, 137,
#line 1460
                          439, 418, 592, 668, 353, 859, 370, 694, 325, 240, 216, 257, 284, 549, 209, 884,
#line 1461
                          315, 70, 329, 793, 490, 274, 877, 162, 749, 812, 684, 461, 334, 376, 849, 521,
#line 1462
                          307, 291, 803, 712, 19, 358, 399, 908, 103, 511, 51, 8, 517, 225, 289, 470,
#line 1463
                          637, 731, 66, 255, 917, 269, 463, 830, 730, 433, 848, 585, 136, 538, 906, 90,
#line 1464
                          2, 290, 743, 199, 655, 903, 329, 49, 802, 580, 355, 588, 188, 462, 10, 134,
#line 1465
                          628, 320, 479, 130, 739, 71, 263, 318, 374, 601, 192, 605, 142, 673, 687, 234,
#line 1466
                          722, 384, 177, 752, 607, 640, 455, 193, 689, 707, 805, 641, 48, 60, 732, 621,
#line 1467
                          895, 544, 261, 852, 655, 309, 697, 755, 756, 60, 231, 773, 434, 421, 726, 528,
#line 1468
                          503, 118, 49, 795, 32, 144, 500, 238, 836, 394, 280, 566, 319, 9, 647, 550,
#line 1469
                          73, 914, 342, 126, 32, 681, 331, 792, 620, 60, 609, 441, 180, 791, 893, 754,
#line 1470
                          605, 383, 228, 749, 760, 213, 54, 297, 134, 54, 834, 299, 922, 191, 910, 532,
#line 1471
                          609, 829, 189, 20, 167, 29, 872, 449, 83, 402, 41, 656, 505, 579, 481, 173,
#line 1472
                          404, 251, 688, 95, 497, 555, 642, 543, 307, 159, 924, 558, 648, 55, 497, 10 } count:256], [IOSIntArray arrayWithInts:(jint[]){
#line 1474
                            352, 77, 373, 504, 35, 599, 428, 207, 409, 574, 118, 498, 285, 380, 350, 492,
#line 1475
                            197, 265, 920, 155, 914, 299, 229, 643, 294, 871, 306, 88, 87, 193, 352, 781,
#line 1476
                            846, 75, 327, 520, 435, 543, 203, 666, 249, 346, 781, 621, 640, 268, 794, 534,
#line 1477
                            539, 781, 408, 390, 644, 102, 476, 499, 290, 632, 545, 37, 858, 916, 552, 41,
#line 1478
                            542, 289, 122, 272, 383, 800, 485, 98, 752, 472, 761, 107, 784, 860, 658, 741,
#line 1479
                            290, 204, 681, 407, 855, 85, 99, 62, 482, 180, 20, 297, 451, 593, 913, 142,
#line 1480
                            808, 684, 287, 536, 561, 76, 653, 899, 729, 567, 744, 390, 513, 192, 516, 258,
#line 1481
                            240, 518, 794, 395, 768, 848, 51, 610, 384, 168, 190, 826, 328, 596, 786, 303,
#line 1482
                            570, 381, 415, 641, 156, 237, 151, 429, 531, 207, 676, 710, 89, 168, 304, 402,
#line 1483
                            40, 708, 575, 162, 864, 229, 65, 861, 841, 512, 164, 477, 221, 92, 358, 785,
#line 1484
                            288, 357, 850, 836, 827, 736, 707, 94, 8, 494, 114, 521, 2, 499, 851, 543,
#line 1485
                            152, 729, 771, 95, 248, 361, 578, 323, 856, 797, 289, 51, 684, 466, 533, 820,
#line 1486
                            669, 45, 902, 452, 167, 342, 244, 173, 35, 463, 651, 51, 699, 591, 452, 578,
#line 1487
                            37, 124, 298, 332, 552, 43, 427, 119, 662, 777, 475, 850, 764, 364, 578, 911,
#line 1488
                            283, 711, 472, 420, 245, 288, 594, 394, 511, 327, 589, 777, 699, 688, 43, 408,
#line 1489
                            842, 383, 721, 521, 560, 644, 714, 559, 62, 145, 873, 663, 713, 159, 672, 729,
#line 1490
                            624, 59, 193, 417, 158, 209, 563, 564, 343, 693, 109, 608, 563, 365, 181, 772,
#line 1491
                            677, 310, 248, 353, 708, 410, 579, 870, 617, 841, 632, 860, 289, 536, 35, 777,
#line 1492
                            618, 586, 424, 833, 77, 597, 346, 269, 757, 632, 695, 751, 331, 247, 184, 45,
#line 1493
                            787, 680, 18, 66, 407, 369, 54, 492, 228, 613, 830, 922, 437, 519, 644, 905,
#line 1494
                            789, 420, 305, 441, 207, 300, 892, 827, 141, 537, 381, 662, 513, 56, 252, 341,
#line 1495
                            242, 797, 838, 837, 720, 224, 307, 631, 61, 87, 560, 310, 756, 665, 397, 808,
#line 1496
                            851, 309, 473, 795, 378, 31, 647, 915, 459, 806, 590, 731, 425, 216, 548, 249,
#line 1497
                            321, 881, 699, 535, 673, 782, 210, 815, 905, 303, 843, 922, 281, 73, 469, 791,
#line 1498
                            660, 162, 498, 308, 155, 422, 907, 817, 187, 62, 16, 425, 535, 336, 286, 437,
#line 1499
                            375, 273, 610, 296, 183, 923, 116, 667, 751, 353, 62, 366, 691, 379, 687, 842,
#line 1500
                            37, 357, 720, 742, 330, 5, 39, 923, 311, 424, 242, 749, 321, 54, 669, 316,
#line 1501
                            342, 299, 534, 105, 667, 488, 640, 672, 576, 540, 316, 486, 721, 610, 46, 656,
#line 1502
                            447, 171, 616, 464, 190, 531, 297, 321, 762, 752, 533, 175, 134, 14, 381, 433,
#line 1503
                            717, 45, 111, 20, 596, 284, 736, 138, 646, 411, 877, 669, 141, 919, 45, 780,
#line 1504
                            407, 164, 332, 899, 165, 726, 600, 325, 498, 655, 357, 752, 768, 223, 849, 647,
#line 1505
                            63, 310, 863, 251, 366, 304, 282, 738, 675, 410, 389, 244, 31, 121, 303, 263 } count:512] } count:9 type:[IOSIntArray iosClass]];
                            ComItextpdfTextPdfBarcodePDF417_initialized = YES;
                          }
                        }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BarcodePDF417", NULL, 0x1, NULL },
    { "setMacroSegmentIdWithInt:", "setMacroSegmentId", "V", 0x1, NULL },
    { "setMacroSegmentCountWithInt:", "setMacroSegmentCount", "V", 0x1, NULL },
    { "setMacroFileIdWithNSString:", "setMacroFileId", "V", 0x1, NULL },
    { "checkSegmentTypeWithComItextpdfTextPdfBarcodePDF417_Segment:withChar:", "checkSegmentType", "Z", 0x4, NULL },
    { "getSegmentLengthWithComItextpdfTextPdfBarcodePDF417_Segment:", "getSegmentLength", "I", 0x4, NULL },
    { "setDefaultParameters", NULL, "V", 0x1, NULL },
    { "outCodeword17WithInt:", "outCodeword17", "V", 0x4, NULL },
    { "outCodeword18WithInt:", "outCodeword18", "V", 0x4, NULL },
    { "outCodewordWithInt:", "outCodeword", "V", 0x4, NULL },
    { "outStopPattern", NULL, "V", 0x4, NULL },
    { "outStartPattern", NULL, "V", 0x4, NULL },
    { "outPaintCode", NULL, "V", 0x4, NULL },
    { "calculateErrorCorrectionWithInt:", "calculateErrorCorrection", "V", 0x4, NULL },
    { "getTextTypeAndValueWithByteArray:withInt:withInt:", "getTextTypeAndValue", "I", 0xa, NULL },
    { "getTextTypeAndValueWithInt:withInt:", "getTextTypeAndValue", "I", 0x4, NULL },
    { "textCompactionWithByteArray:withInt:withInt:", "textCompaction", "V", 0x2, NULL },
    { "textCompactionWithInt:withInt:", "textCompaction", "V", 0x4, NULL },
    { "basicNumberCompactionWithInt:withInt:", "basicNumberCompaction", "V", 0x4, NULL },
    { "basicNumberCompactionWithByteArray:withInt:withInt:", "basicNumberCompaction", "V", 0x2, NULL },
    { "numberCompactionWithByteArray:withInt:withInt:", "numberCompaction", "V", 0x2, NULL },
    { "numberCompactionWithInt:withInt:", "numberCompaction", "V", 0x4, NULL },
    { "byteCompaction6WithInt:", "byteCompaction6", "V", 0x4, NULL },
    { "byteCompactionWithInt:withInt:", "byteCompaction", "V", 0x0, NULL },
    { "breakString", NULL, "V", 0x0, NULL },
    { "assemble", NULL, "V", 0x4, NULL },
    { "macroCodes", NULL, "V", 0x2, NULL },
    { "appendWithInt:withInt:", "append", "V", 0x2, NULL },
    { "appendWithNSString:", "append", "V", 0x2, NULL },
    { "maxPossibleErrorLevelWithInt:", "maxPossibleErrorLevel", "I", 0xc, NULL },
    { "dumpList", NULL, "V", 0x4, NULL },
    { "getMaxSquare", NULL, "I", 0x4, NULL },
    { "paintCode", NULL, "V", 0x1, NULL },
    { "getImage", NULL, "Lcom.itextpdf.text.Image;", 0x1, "Lcom.itextpdf.text.BadElementException;" },
    { "getOutBits", NULL, "[B", 0x1, NULL },
    { "getBitColumns", NULL, "I", 0x1, NULL },
    { "getCodeRows", NULL, "I", 0x1, NULL },
    { "setCodeRowsWithInt:", "setCodeRows", "V", 0x1, NULL },
    { "getCodeColumns", NULL, "I", 0x1, NULL },
    { "setCodeColumnsWithInt:", "setCodeColumns", "V", 0x1, NULL },
    { "getCodewords", NULL, "[I", 0x1, NULL },
    { "getLenCodewords", NULL, "I", 0x1, NULL },
    { "setLenCodewordsWithInt:", "setLenCodewords", "V", 0x1, NULL },
    { "getErrorLevel", NULL, "I", 0x1, NULL },
    { "setErrorLevelWithInt:", "setErrorLevel", "V", 0x1, NULL },
    { "getText", NULL, "[B", 0x1, NULL },
    { "setTextWithByteArray:", "setText", "V", 0x1, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL },
    { "getOptions", NULL, "I", 0x1, NULL },
    { "setOptionsWithInt:", "setOptions", "V", 0x1, NULL },
    { "getAspectRatio", NULL, "F", 0x1, NULL },
    { "setAspectRatioWithFloat:", "setAspectRatio", "V", 0x1, NULL },
    { "getYHeight", NULL, "F", 0x1, NULL },
    { "setYHeightWithFloat:", "setYHeight", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PDF417_USE_ASPECT_RATIO_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_USE_ASPECT_RATIO },
    { "PDF417_FIXED_RECTANGLE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_FIXED_RECTANGLE },
    { "PDF417_FIXED_COLUMNS_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_FIXED_COLUMNS },
    { "PDF417_FIXED_ROWS_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_FIXED_ROWS },
    { "PDF417_AUTO_ERROR_LEVEL_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_AUTO_ERROR_LEVEL },
    { "PDF417_USE_ERROR_LEVEL_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_USE_ERROR_LEVEL },
    { "PDF417_FORCE_BINARY_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_FORCE_BINARY },
    { "PDF417_USE_RAW_CODEWORDS_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_USE_RAW_CODEWORDS },
    { "PDF417_INVERT_BITMAP_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_INVERT_BITMAP },
    { "PDF417_USE_MACRO_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PDF417_USE_MACRO },
    { "macroSegmentCount_", NULL, 0x2, "I", NULL,  },
    { "macroSegmentId_", NULL, 0x2, "I", NULL,  },
    { "macroFileId_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "macroIndex_", NULL, 0x2, "I", NULL,  },
    { "bitPtr_", NULL, 0x4, "I", NULL,  },
    { "cwPtr_", NULL, 0x4, "I", NULL,  },
    { "segmentList_", NULL, 0x4, "Lcom.itextpdf.text.pdf.BarcodePDF417$SegmentList;", NULL,  },
    { "START_PATTERN_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_START_PATTERN },
    { "STOP_PATTERN_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_STOP_PATTERN },
    { "START_CODE_SIZE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_START_CODE_SIZE },
    { "STOP_SIZE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_STOP_SIZE },
    { "MOD_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_MOD },
    { "ALPHA_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_ALPHA },
    { "LOWER_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_LOWER },
    { "MIXED_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_MIXED },
    { "PUNCTUATION_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PUNCTUATION },
    { "ISBYTE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_ISBYTE },
    { "BYTESHIFT_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_BYTESHIFT },
    { "PL_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PL },
    { "LL_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_LL },
    { "AS_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_AS },
    { "ML_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_ML },
    { "AL_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_AL },
    { "PS_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PS },
    { "PAL_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_PAL },
    { "SPACE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_SPACE },
    { "TEXT_MODE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_TEXT_MODE },
    { "BYTE_MODE_6_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_BYTE_MODE_6 },
    { "BYTE_MODE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_BYTE_MODE },
    { "NUMERIC_MODE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_NUMERIC_MODE },
    { "ABSOLUTE_MAX_TEXT_SIZE_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_ABSOLUTE_MAX_TEXT_SIZE },
    { "MAX_DATA_CODEWORDS_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_MAX_DATA_CODEWORDS },
    { "MACRO_SEGMENT_ID_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_MACRO_SEGMENT_ID },
    { "MACRO_LAST_SEGMENT_", NULL, 0x1c, "I", NULL, .constantValue.asInt = ComItextpdfTextPdfBarcodePDF417_MACRO_LAST_SEGMENT },
    { "MIXED_SET_", NULL, 0x1a, "Ljava.lang.String;", &ComItextpdfTextPdfBarcodePDF417_MIXED_SET_,  },
    { "PUNCTUATION_SET_", NULL, 0x1a, "Ljava.lang.String;", &ComItextpdfTextPdfBarcodePDF417_PUNCTUATION_SET_,  },
    { "CLUSTERS_", NULL, 0x1a, "[[I", &ComItextpdfTextPdfBarcodePDF417_CLUSTERS_,  },
    { "ERROR_LEVEL_", NULL, 0x1a, "[[I", &ComItextpdfTextPdfBarcodePDF417_ERROR_LEVEL_,  },
    { "outBits_", NULL, 0x2, "[B", NULL,  },
    { "bitColumns_", NULL, 0x2, "I", NULL,  },
    { "codeRows_", NULL, 0x2, "I", NULL,  },
    { "codeColumns_", NULL, 0x2, "I", NULL,  },
    { "codewords_", NULL, 0x2, "[I", NULL,  },
    { "lenCodewords_", NULL, 0x2, "I", NULL,  },
    { "errorLevel_", NULL, 0x2, "I", NULL,  },
    { "text_", NULL, 0x2, "[B", NULL,  },
    { "options_", NULL, 0x2, "I", NULL,  },
    { "aspectRatio_", NULL, 0x2, "F", NULL,  },
    { "yHeight_", NULL, 0x2, "F", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodePDF417 = { "BarcodePDF417", "com.itextpdf.text.pdf", NULL, 0x1, 54, methods, 59, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodePDF417;
}

@end


#line 1541
@implementation ComItextpdfTextPdfBarcodePDF417_Segment


#line 1546
- (instancetype)initWithChar:(jchar)type
                     withInt:(jint)start
                     withInt:(jint)end {
  if (self = [super init]) {
    
#line 1547
    self->type_ = type;
    
#line 1548
    self->start_ = start;
    
#line 1549
    self->end_ = end;
  }
  return self;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBarcodePDF417_Segment *)other {
  [super copyAllFieldsTo:other];
  other->end_ = end_;
  other->start_ = start_;
  other->type_ = type_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithChar:withInt:withInt:", "Segment", NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x1, "C", NULL,  },
    { "start_", NULL, 0x1, "I", NULL,  },
    { "end_", NULL, 0x1, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodePDF417_Segment = { "Segment", "com.itextpdf.text.pdf", "BarcodePDF417", 0xc, 1, methods, 3, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodePDF417_Segment;
}

@end


#line 1553
@implementation ComItextpdfTextPdfBarcodePDF417_SegmentList


#line 1556
- (void)addWithChar:(jchar)type
            withInt:(jint)start
            withInt:(jint)end {
  
#line 1557
  [((JavaUtilArrayList *) nil_chk(list_)) addWithId:[[ComItextpdfTextPdfBarcodePDF417_Segment alloc] initWithChar:type withInt:start withInt:end]];
}


#line 1560
- (ComItextpdfTextPdfBarcodePDF417_Segment *)getWithInt:(jint)idx {
  
#line 1561
  if (idx < 0 || idx >= [((JavaUtilArrayList *) nil_chk(list_)) size])
#line 1562
  return nil;
  return [((JavaUtilArrayList *) nil_chk(list_)) getWithInt:idx];
}


#line 1566
- (void)removeWithInt:(jint)idx {
  
#line 1567
  if (idx < 0 || idx >= [((JavaUtilArrayList *) nil_chk(list_)) size])
#line 1568
  return;
  (void) [((JavaUtilArrayList *) nil_chk(list_)) removeWithInt:idx];
}


#line 1572
- (jint)size {
  
#line 1573
  return [((JavaUtilArrayList *) nil_chk(list_)) size];
}

- (instancetype)init {
  if (self = [super init]) {
    list_ =
#line 1554
    [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBarcodePDF417_SegmentList *)other {
  [super copyAllFieldsTo:other];
  other->list_ = list_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithChar:withInt:withInt:", "add", "V", 0x1, NULL },
    { "getWithInt:", "get", "Lcom.itextpdf.text.pdf.BarcodePDF417$Segment;", 0x1, NULL },
    { "removeWithInt:", "remove", "V", 0x1, NULL },
    { "size", NULL, "I", 0x1, NULL },
    { "init", NULL, NULL, 0x4, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "list_", NULL, 0x4, "Ljava.util.ArrayList;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBarcodePDF417_SegmentList = { "SegmentList", "com.itextpdf.text.pdf", "BarcodePDF417", 0xc, 5, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTextPdfBarcodePDF417_SegmentList;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfStructureElement.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfStructureElement.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/Chunk.h"
#include "com/itextpdf/text/Document.h"
#include "com/itextpdf/text/DocumentException.h"
#include "com/itextpdf/text/Element.h"
#include "com/itextpdf/text/ExceptionConverter.h"
#include "com/itextpdf/text/Font.h"
#include "com/itextpdf/text/Image.h"
#include "com/itextpdf/text/List.h"
#include "com/itextpdf/text/ListBody.h"
#include "com/itextpdf/text/ListItem.h"
#include "com/itextpdf/text/ListLabel.h"
#include "com/itextpdf/text/Paragraph.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/PdfArray.h"
#include "com/itextpdf/text/pdf/PdfDictionary.h"
#include "com/itextpdf/text/pdf/PdfDiv.h"
#include "com/itextpdf/text/pdf/PdfIndirectReference.h"
#include "com/itextpdf/text/pdf/PdfName.h"
#include "com/itextpdf/text/pdf/PdfNull.h"
#include "com/itextpdf/text/pdf/PdfNumber.h"
#include "com/itextpdf/text/pdf/PdfObject.h"
#include "com/itextpdf/text/pdf/PdfPCell.h"
#include "com/itextpdf/text/pdf/PdfPHeaderCell.h"
#include "com/itextpdf/text/pdf/PdfPRow.h"
#include "com/itextpdf/text/pdf/PdfPTable.h"
#include "com/itextpdf/text/pdf/PdfPTableBody.h"
#include "com/itextpdf/text/pdf/PdfPTableFooter.h"
#include "com/itextpdf/text/pdf/PdfPTableHeader.h"
#include "com/itextpdf/text/pdf/PdfRectangle.h"
#include "com/itextpdf/text/pdf/PdfString.h"
#include "com/itextpdf/text/pdf/PdfStructureElement.h"
#include "com/itextpdf/text/pdf/PdfStructureTreeRoot.h"
#include "com/itextpdf/text/pdf/PdfTemplate.h"
#include "com/itextpdf/text/pdf/PdfWriter.h"
#include "com/itextpdf/text/pdf/interfaces/IAccessibleElement.h"
#include "com/itextpdf/text/pdf/interfaces/IPdfStructureElement.h"
#include "com/itextpdf/text/pdf/internal/PdfIsoKeys.h"
#include "com/itextpdf/text/pdf/internal/PdfVersionImp.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Float.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Set.h"


#line 63
@implementation ComItextpdfTextPdfPdfStructureElement


#line 83
- (instancetype)initWithComItextpdfTextPdfPdfStructureElement:(ComItextpdfTextPdfPdfStructureElement *)parent
                                withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)structureType {
  if (self = [super init]) {
    
#line 84
    top_ = ((ComItextpdfTextPdfPdfStructureElement *) nil_chk(parent))->top_;
    
#line 85
    [self init__WithComItextpdfTextPdfPdfDictionary:parent withComItextpdfTextPdfPdfName:structureType];
    
#line 86
    self->parent_ = parent;
    
#line 87
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_P_() withComItextpdfTextPdfPdfObject:parent->reference_];
    
#line 88
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_STRUCTELEM_()];
  }
  return self;
}


#line 96
- (instancetype)initWithComItextpdfTextPdfPdfStructureTreeRoot:(ComItextpdfTextPdfPdfStructureTreeRoot *)parent
                                 withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)structureType {
  if (self = [super init]) {
    
#line 97
    top_ = parent;
    
#line 98
    [self init__WithComItextpdfTextPdfPdfDictionary:parent withComItextpdfTextPdfPdfName:structureType];
    
#line 99
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_P_() withComItextpdfTextPdfPdfObject:[((ComItextpdfTextPdfPdfStructureTreeRoot *) nil_chk(parent)) getReference]];
    
#line 100
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_STRUCTELEM_()];
  }
  return self;
}


#line 103
- (instancetype)initWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)parent
                          withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)structureType {
  if (self = [super init]) {
    
#line 104
    if ([parent isKindOfClass:[ComItextpdfTextPdfPdfStructureElement class]]) {
      top_ = ((ComItextpdfTextPdfPdfStructureElement *) nil_chk(((ComItextpdfTextPdfPdfStructureElement *) check_class_cast(parent, [ComItextpdfTextPdfPdfStructureElement class]))))->top_;
      [self init__WithComItextpdfTextPdfPdfDictionary:parent withComItextpdfTextPdfPdfName:structureType];
      self->parent_ = (ComItextpdfTextPdfPdfStructureElement *) check_class_cast(parent, [ComItextpdfTextPdfPdfStructureElement class]);
      [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_P_() withComItextpdfTextPdfPdfObject:((ComItextpdfTextPdfPdfStructureElement *) nil_chk(((ComItextpdfTextPdfPdfStructureElement *) check_class_cast(parent, [ComItextpdfTextPdfPdfStructureElement class]))))->reference_];
      [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_STRUCTELEM_()];
    }
    else
#line 110
    if ([parent isKindOfClass:[ComItextpdfTextPdfPdfStructureTreeRoot class]]) {
      top_ = (ComItextpdfTextPdfPdfStructureTreeRoot *) check_class_cast(parent, [ComItextpdfTextPdfPdfStructureTreeRoot class]);
      [self init__WithComItextpdfTextPdfPdfDictionary:parent withComItextpdfTextPdfPdfName:structureType];
      [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_P_() withComItextpdfTextPdfPdfObject:[((ComItextpdfTextPdfPdfStructureTreeRoot *) nil_chk(((ComItextpdfTextPdfPdfStructureTreeRoot *) check_class_cast(parent, [ComItextpdfTextPdfPdfStructureTreeRoot class])))) getReference]];
      [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_STRUCTELEM_()];
    }
    else {
    }
  }
  return self;
}


#line 120
- (ComItextpdfTextPdfPdfName *)getStructureType {
  
#line 121
  return structureType_;
}


#line 124
- (void)init__WithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)parent
                    withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)structureType {
  
#line 125
  if (![((id<JavaUtilList>) nil_chk([((ComItextpdfTextPdfPdfWriter *) nil_chk([((ComItextpdfTextPdfPdfStructureTreeRoot *) nil_chk(top_)) getWriter])) getStandardStructElems])) containsWithId:structureType]) {
    ComItextpdfTextPdfPdfDictionary *roleMap = [top_ getAsDictWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ROLEMAP_()];
    if (roleMap == nil || ![roleMap containsWithComItextpdfTextPdfPdfName:structureType])
#line 128
    @throw [[ComItextpdfTextExceptionConverter alloc] initWithJavaLangException:[[ComItextpdfTextDocumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"unknown.structure.element.role.1" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [((ComItextpdfTextPdfPdfName *) nil_chk(structureType)) description] } count:1 type:[IOSClass classWithClass:[NSObject class]]]]]];
    else
#line 130
    self->structureType_ = [roleMap getAsNameWithComItextpdfTextPdfPdfName:structureType];
  }
  else {
    
#line 132
    self->structureType_ = structureType;
  }
  ComItextpdfTextPdfPdfObject *kido = [((ComItextpdfTextPdfPdfDictionary *) nil_chk(parent)) getWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_K_()];
  ComItextpdfTextPdfPdfArray *kids = nil;
  if (kido == nil) {
    kids = [[ComItextpdfTextPdfPdfArray alloc] init];
    [parent putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_K_() withComItextpdfTextPdfPdfObject:kids];
  }
  else
#line 139
  if ([kido isKindOfClass:[ComItextpdfTextPdfPdfArray class]]) {
    kids = (ComItextpdfTextPdfPdfArray *) check_class_cast(kido, [ComItextpdfTextPdfPdfArray class]);
  }
  else {
    
#line 142
    kids = [[ComItextpdfTextPdfPdfArray alloc] init];
    [kids addWithComItextpdfTextPdfPdfObject:kido];
    [parent putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_K_() withComItextpdfTextPdfPdfObject:kids];
  }
  if ([((ComItextpdfTextPdfPdfArray *) nil_chk(kids)) size] > 0) {
    if ([kids getAsNumberWithInt:0] != nil)
#line 148
    (void) [kids removeWithInt:0];
    if ([kids size] > 0) {
      ComItextpdfTextPdfPdfDictionary *mcr = [kids getAsDictWithInt:0];
      if (mcr != nil && [((ComItextpdfTextPdfPdfName *) nil_chk(ComItextpdfTextPdfPdfName_get_MCR_())) isEqual:[mcr getAsNameWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TYPE_()]]) {
        (void) [kids removeWithInt:0];
      }
    }
  }
  [kids addWithComItextpdfTextPdfPdfObject:self];
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_S_() withComItextpdfTextPdfPdfObject:structureType];
  reference_ = [((ComItextpdfTextPdfPdfWriter *) nil_chk([top_ getWriter])) getPdfIndirectReference];
}


#line 165
- (ComItextpdfTextPdfPdfDictionary *)getParent {
  
#line 166
  return [self getParentWithBoolean:NO];
}


#line 169
- (ComItextpdfTextPdfPdfDictionary *)getParentWithBoolean:(jboolean)includeStructTreeRoot {
  
#line 170
  if (parent_ == nil && includeStructTreeRoot)
#line 171
  return top_;
  else
#line 173
  return parent_;
}


#line 176
- (void)setPageMarkWithInt:(jint)page
                   withInt:(jint)mark {
  
#line 177
  if (mark >= 0)
#line 178
  [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_K_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:mark]];
  [((ComItextpdfTextPdfPdfStructureTreeRoot *) nil_chk(top_)) setPageMarkWithInt:page withComItextpdfTextPdfPdfIndirectReference:reference_];
}


#line 187
- (ComItextpdfTextPdfPdfIndirectReference *)getReference {
  
#line 188
  return self->reference_;
}


#line 196
- (ComItextpdfTextPdfPdfObject *)getAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)name {
  
#line 197
  ComItextpdfTextPdfPdfDictionary *attr = [self getAsDictWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_A_()];
  if (attr != nil) {
    if ([attr containsWithComItextpdfTextPdfPdfName:name])
#line 200
    return [attr getWithComItextpdfTextPdfPdfName:name];
  }
  ComItextpdfTextPdfPdfDictionary *parent = [self getParent];
  if ([parent isKindOfClass:[ComItextpdfTextPdfPdfStructureElement class]])
#line 204
  return [((ComItextpdfTextPdfPdfStructureElement *) nil_chk(((ComItextpdfTextPdfPdfStructureElement *) check_class_cast(parent, [ComItextpdfTextPdfPdfStructureElement class])))) getAttributeWithComItextpdfTextPdfPdfName:name];
  if ([parent isKindOfClass:[ComItextpdfTextPdfPdfStructureTreeRoot class]])
#line 206
  return [((ComItextpdfTextPdfPdfStructureTreeRoot *) nil_chk(((ComItextpdfTextPdfPdfStructureTreeRoot *) check_class_cast(parent, [ComItextpdfTextPdfPdfStructureTreeRoot class])))) getAttributeWithComItextpdfTextPdfPdfName:name];
  
#line 208
  return [[ComItextpdfTextPdfPdfNull alloc] init];
}


#line 215
- (void)setAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)name
                  withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)obj {
  
#line 216
  ComItextpdfTextPdfPdfDictionary *attr = [self getAsDictWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_A_()];
  if (attr == nil) {
    attr = [[ComItextpdfTextPdfPdfDictionary alloc] init];
    [self putWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_A_() withComItextpdfTextPdfPdfObject:attr];
  }
  [((ComItextpdfTextPdfPdfDictionary *) nil_chk(attr)) putWithComItextpdfTextPdfPdfName:name withComItextpdfTextPdfPdfObject:obj];
}


#line 224
- (void)writeAttributesWithComItextpdfTextPdfInterfacesIAccessibleElement:(id<ComItextpdfTextPdfInterfacesIAccessibleElement>)element {
  
#line 225
  if ([((ComItextpdfTextPdfInternalPdfVersionImp *) nil_chk([((ComItextpdfTextPdfPdfWriter *) nil_chk([((ComItextpdfTextPdfPdfStructureTreeRoot *) nil_chk(top_)) getWriter])) getPdfVersion])) getVersion] < ComItextpdfTextPdfPdfWriter_VERSION_1_7)
#line 226
  return;
  if ([(id) element isKindOfClass:[ComItextpdfTextListItem class]]) {
    [self writeAttributesWithComItextpdfTextListItem:(ComItextpdfTextListItem *) check_class_cast(element, [ComItextpdfTextListItem class])];
  }
  else
#line 229
  if ([(id) element isKindOfClass:[ComItextpdfTextParagraph class]]) {
    [self writeAttributesWithComItextpdfTextParagraph:(ComItextpdfTextParagraph *) check_class_cast(element, [ComItextpdfTextParagraph class])];
  }
  else
#line 231
  if ([(id) element isKindOfClass:[ComItextpdfTextChunk class]]) {
    [self writeAttributesWithComItextpdfTextChunk:(ComItextpdfTextChunk *) check_class_cast(element, [ComItextpdfTextChunk class])];
  }
  else
#line 233
  if ([(id) element isKindOfClass:[ComItextpdfTextImage class]]) {
    [self writeAttributesWithComItextpdfTextImage:(ComItextpdfTextImage *) check_class_cast(element, [ComItextpdfTextImage class])];
  }
  else
#line 235
  if ([(id) element isKindOfClass:[ComItextpdfTextList class]]) {
    [self writeAttributesWithComItextpdfTextList:(ComItextpdfTextList *) check_class_cast(element, [ComItextpdfTextList class])];
  }
  else
#line 237
  if ([(id) element isKindOfClass:[ComItextpdfTextListLabel class]]) {
    [self writeAttributesWithComItextpdfTextListLabel:(ComItextpdfTextListLabel *) check_class_cast(element, [ComItextpdfTextListLabel class])];
  }
  else
#line 239
  if ([(id) element isKindOfClass:[ComItextpdfTextListBody class]]) {
    [self writeAttributesWithComItextpdfTextListBody:(ComItextpdfTextListBody *) check_class_cast(element, [ComItextpdfTextListBody class])];
  }
  else
#line 241
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfPTable class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *) check_class_cast(element, [ComItextpdfTextPdfPdfPTable class])];
  }
  else
#line 243
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfPRow class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfPRow:(ComItextpdfTextPdfPdfPRow *) check_class_cast(element, [ComItextpdfTextPdfPdfPRow class])];
  }
  else
#line 245
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfPHeaderCell class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfPHeaderCell:(ComItextpdfTextPdfPdfPHeaderCell *) check_class_cast(element, [ComItextpdfTextPdfPdfPHeaderCell class])];
  }
  else
#line 247
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfPCell class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfPCell:(ComItextpdfTextPdfPdfPCell *) check_class_cast(element, [ComItextpdfTextPdfPdfPCell class])];
  }
  else
#line 249
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfPTableHeader class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfPTableHeader:(ComItextpdfTextPdfPdfPTableHeader *) check_class_cast(element, [ComItextpdfTextPdfPdfPTableHeader class])];
  }
  else
#line 251
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfPTableFooter class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfPTableFooter:(ComItextpdfTextPdfPdfPTableFooter *) check_class_cast(element, [ComItextpdfTextPdfPdfPTableFooter class])];
  }
  else
#line 253
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfPTableBody class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfPTableBody:(ComItextpdfTextPdfPdfPTableBody *) check_class_cast(element, [ComItextpdfTextPdfPdfPTableBody class])];
  }
  else
#line 255
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfDiv class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfDiv:(ComItextpdfTextPdfPdfDiv *) check_class_cast(element, [ComItextpdfTextPdfPdfDiv class])];
  }
  else
#line 257
  if ([(id) element isKindOfClass:[ComItextpdfTextPdfPdfTemplate class]]) {
    [self writeAttributesWithComItextpdfTextPdfPdfTemplate:(ComItextpdfTextPdfPdfTemplate *) check_class_cast(element, [ComItextpdfTextPdfPdfTemplate class])];
  }
  else
#line 259
  if ([(id) element isKindOfClass:[ComItextpdfTextDocument class]]) {
    [self writeAttributesWithComItextpdfTextDocument:(ComItextpdfTextDocument *) check_class_cast(element, [ComItextpdfTextDocument class])];
  }
  if ([((id<ComItextpdfTextPdfInterfacesIAccessibleElement>) nil_chk(element)) getAccessibleAttributes] != nil) {
    for (ComItextpdfTextPdfPdfName * __strong key in nil_chk([((JavaUtilHashMap *) nil_chk([element getAccessibleAttributes])) keySet])) {
      if ([((ComItextpdfTextPdfPdfName *) nil_chk(key)) isEqual:ComItextpdfTextPdfPdfName_get_LANG_()] || [key isEqual:ComItextpdfTextPdfPdfName_get_ALT_()] || [key isEqual:ComItextpdfTextPdfPdfName_get_ACTUALTEXT_()] || [key isEqual:ComItextpdfTextPdfPdfName_get_E_()]) {
        [self putWithComItextpdfTextPdfPdfName:key withComItextpdfTextPdfPdfObject:[element getAccessibleAttributeWithComItextpdfTextPdfPdfName:key]];
      }
      else {
        
#line 267
        [self setAttributeWithComItextpdfTextPdfPdfName:key withComItextpdfTextPdfPdfObject:[element getAccessibleAttributeWithComItextpdfTextPdfPdfName:key]];
      }
    }
  }
}


#line 273
- (void)writeAttributesWithComItextpdfTextChunk:(ComItextpdfTextChunk *)chunk {
  
#line 274
  if (chunk != nil) {
    if ([chunk getImage] != nil) {
      [self writeAttributesWithComItextpdfTextImage:[chunk getImage]];
    }
    else {
      
#line 278
      JavaUtilHashMap *attr = [chunk getAttributes];
      if (attr != nil) {
        [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_LAYOUT_()];
        
#line 282
        if ([attr containsKeyWithId:ComItextpdfTextChunk_get_UNDERLINE_()]) {
          [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTDECORATIONTYPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_UNDERLINE_()];
        }
        if ([attr containsKeyWithId:ComItextpdfTextChunk_get_BACKGROUND_()]) {
          IOSObjectArray *back = (IOSObjectArray *) check_class_cast([attr getWithId:ComItextpdfTextChunk_get_BACKGROUND_()], [IOSObjectArray class]);
          ComItextpdfTextBaseColor *color = (ComItextpdfTextBaseColor *) check_class_cast(IOSObjectArray_Get(nil_chk(back), 0), [ComItextpdfTextBaseColor class]);
          [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BACKGROUNDCOLOR_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:[IOSFloatArray arrayWithFloats:(jfloat[]){ [((ComItextpdfTextBaseColor *) nil_chk(color)) getRed] / 255.0f, [color getGreen] / 255.0f, [color getBlue] / 255.0f } count:3]]];
        }
        
#line 292
        id<ComItextpdfTextPdfInterfacesIPdfStructureElement> parent = (id<ComItextpdfTextPdfInterfacesIPdfStructureElement>) check_protocol_cast([self getParentWithBoolean:YES], @protocol(ComItextpdfTextPdfInterfacesIPdfStructureElement));
        ComItextpdfTextPdfPdfObject *obj = [((id<ComItextpdfTextPdfInterfacesIPdfStructureElement>) nil_chk(parent)) getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COLOR_()];
        if (([chunk getFont] != nil) && ([((ComItextpdfTextFont *) nil_chk([chunk getFont])) getColor] != nil)) {
          ComItextpdfTextBaseColor *c = [((ComItextpdfTextFont *) nil_chk([chunk getFont])) getColor];
          [self setColorAttributeWithComItextpdfTextBaseColor:c withComItextpdfTextPdfPdfObject:obj withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COLOR_()];
        }
        ComItextpdfTextPdfPdfObject *decorThickness = [parent getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTDECORATIONTHICKNESS_()];
        ComItextpdfTextPdfPdfObject *decorColor = [parent getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTDECORATIONCOLOR_()];
        if ([attr containsKeyWithId:ComItextpdfTextChunk_get_UNDERLINE_()]) {
          IOSObjectArray *unders = (IOSObjectArray *) check_class_cast([attr getWithId:ComItextpdfTextChunk_get_UNDERLINE_()], [IOSObjectArray class]);
          IOSObjectArray *arr = IOSObjectArray_Get(unders, ((IOSObjectArray *) nil_chk(unders))->size_ - 1);
          ComItextpdfTextBaseColor *color = (ComItextpdfTextBaseColor *) check_class_cast(IOSObjectArray_Get(nil_chk(arr), 0), [ComItextpdfTextBaseColor class]);
          IOSFloatArray *floats = (IOSFloatArray *) check_class_cast(IOSObjectArray_Get(arr, 1), [IOSFloatArray class]);
          jfloat thickness = IOSFloatArray_Get(nil_chk(floats), 0);
          
#line 307
          if ([decorThickness isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
            jfloat t = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(decorThickness, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
            if ([JavaLangFloat compareWithFloat:thickness withFloat:t] != 0) {
              [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTDECORATIONTHICKNESS_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:thickness]];
            }
          }
          else
#line 314
          [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTDECORATIONTHICKNESS_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:thickness]];
          
#line 317
          if (color != nil) {
            [self setColorAttributeWithComItextpdfTextBaseColor:color withComItextpdfTextPdfPdfObject:decorColor withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTDECORATIONCOLOR_()];
          }
        }
        
#line 322
        if ([attr containsKeyWithId:ComItextpdfTextChunk_get_LINEHEIGHT_()]) {
          jfloat height = [((JavaLangFloat *) nil_chk((JavaLangFloat *) check_class_cast([attr getWithId:ComItextpdfTextChunk_get_LINEHEIGHT_()], [JavaLangFloat class]))) floatValue];
          ComItextpdfTextPdfPdfObject *parentLH = [parent getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LINEHEIGHT_()];
          if ([parentLH isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
            jfloat pLH = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(parentLH, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
            if ([JavaLangFloat compareWithFloat:pLH withFloat:height] != 0) {
              [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LINEHEIGHT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:height]];
            }
          }
          else
#line 332
          [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LINEHEIGHT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:height]];
        }
      }
    }
  }
}


#line 339
- (void)writeAttributesWithComItextpdfTextImage:(ComItextpdfTextImage *)image {
  
#line 340
  if (image != nil) {
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_LAYOUT_()];
    if ([image getWidth] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_WIDTH_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[image getWidth]]];
    }
    if ([image getHeight] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_HEIGHT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[image getHeight]]];
    }
    ComItextpdfTextPdfPdfRectangle *rect = [[ComItextpdfTextPdfPdfRectangle alloc] initWithComItextpdfTextRectangle:image withInt:[image getRotation]];
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BBOX_() withComItextpdfTextPdfPdfObject:rect];
    if ([image getBackgroundColor] != nil) {
      ComItextpdfTextBaseColor *color = [image getBackgroundColor];
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BACKGROUNDCOLOR_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:[IOSFloatArray arrayWithFloats:(jfloat[]){ [((ComItextpdfTextBaseColor *) nil_chk(color)) getRed] / 255.0f, [color getGreen] / 255.0f, [color getBlue] / 255.0f } count:3]]];
    }
  }
}


#line 357
- (void)writeAttributesWithComItextpdfTextPdfPdfTemplate:(ComItextpdfTextPdfPdfTemplate *)template_ {
  
#line 358
  if (template_ != nil) {
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_LAYOUT_()];
    if ([template_ getWidth] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_WIDTH_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[template_ getWidth]]];
    }
    if ([template_ getHeight] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_HEIGHT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[template_ getHeight]]];
    }
    ComItextpdfTextPdfPdfRectangle *rect = [[ComItextpdfTextPdfPdfRectangle alloc] initWithComItextpdfTextRectangle:[template_ getBoundingBox]];
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BBOX_() withComItextpdfTextPdfPdfObject:rect];
  }
}


#line 371
- (void)writeAttributesWithComItextpdfTextParagraph:(ComItextpdfTextParagraph *)paragraph {
  
#line 372
  if (paragraph != nil) {
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_LAYOUT_()];
    
#line 375
    if ([JavaLangFloat compareWithFloat:[paragraph getSpacingBefore] withFloat:0.0f] != 0)
#line 376
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SPACEBEFORE_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[paragraph getSpacingBefore]]];
    if ([JavaLangFloat compareWithFloat:[paragraph getSpacingAfter] withFloat:0.0f] != 0)
#line 378
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SPACEAFTER_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[paragraph getSpacingAfter]]];
    
#line 381
    id<ComItextpdfTextPdfInterfacesIPdfStructureElement> parent = (id<ComItextpdfTextPdfInterfacesIPdfStructureElement>) check_protocol_cast([self getParentWithBoolean:YES], @protocol(ComItextpdfTextPdfInterfacesIPdfStructureElement));
    ComItextpdfTextPdfPdfObject *obj = [((id<ComItextpdfTextPdfInterfacesIPdfStructureElement>) nil_chk(parent)) getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COLOR_()];
    if (([paragraph getFont] != nil) && ([((ComItextpdfTextFont *) nil_chk([paragraph getFont])) getColor] != nil)) {
      ComItextpdfTextBaseColor *c = [((ComItextpdfTextFont *) nil_chk([paragraph getFont])) getColor];
      [self setColorAttributeWithComItextpdfTextBaseColor:c withComItextpdfTextPdfPdfObject:obj withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COLOR_()];
    }
    obj = [parent getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTINDENT_()];
    if ([JavaLangFloat compareWithFloat:[paragraph getFirstLineIndent] withFloat:0.0f] != 0) {
      jboolean writeIndent = YES;
      if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
        if ([JavaLangFloat compareWithFloat:[((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue] withFloat:[((JavaLangFloat *) [[JavaLangFloat alloc] initWithFloat:[paragraph getFirstLineIndent]]) floatValue]] == 0)
#line 392
        writeIndent = NO;
      }
      if (writeIndent)
#line 395
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[paragraph getFirstLineIndent]]];
    }
    obj = [parent getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_()];
    if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
      jfloat startIndent = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
      if ([JavaLangFloat compareWithFloat:startIndent withFloat:[paragraph getIndentationLeft]] != 0)
#line 401
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[paragraph getIndentationLeft]]];
    }
    else {
      
#line 403
      if ([JavaLangMath absWithFloat:[paragraph getIndentationLeft]] > JavaLangFloat_MIN_VALUE)
#line 404
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[paragraph getIndentationLeft]]];
    }
    
#line 407
    obj = [parent getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_()];
    if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
      jfloat endIndent = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
      if ([JavaLangFloat compareWithFloat:endIndent withFloat:[paragraph getIndentationRight]] != 0)
#line 411
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[paragraph getIndentationRight]]];
    }
    else {
      
#line 413
      if ([JavaLangFloat compareWithFloat:[paragraph getIndentationRight] withFloat:0] != 0)
#line 414
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[paragraph getIndentationRight]]];
    }
    
#line 417
    [self setTextAlignAttributeWithInt:[paragraph getAlignment]];
  }
}


#line 421
- (void)writeAttributesWithComItextpdfTextList:(ComItextpdfTextList *)list {
  
#line 422
  if (list != nil) {
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_LIST_()];
    if ([list isAutoindent]) {
      if ([list isNumbered]) {
        if ([list isLettered]) {
          if ([list isLowercase])
#line 428
          [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LISTNUMBERING_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_LOWERROMAN_()];
          else
#line 430
          [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LISTNUMBERING_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_UPPERROMAN_()];
        }
        else {
          [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LISTNUMBERING_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_DECIMAL_()];
        }
      }
      else
#line 437
      if ([list isLettered]) {
        if ([list isLowercase])
#line 439
        [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LISTNUMBERING_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_LOWERALPHA_()];
        else
#line 441
        [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_LISTNUMBERING_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_UPPERALPHA_()];
      }
    }
    ComItextpdfTextPdfPdfObject *obj = [((ComItextpdfTextPdfPdfStructureElement *) nil_chk(parent_)) getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_()];
    if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
      jfloat startIndent = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
      if ([JavaLangFloat compareWithFloat:startIndent withFloat:[list getIndentationLeft]] != 0)
#line 448
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[list getIndentationLeft]]];
    }
    else {
      
#line 450
      if ([JavaLangMath absWithFloat:[list getIndentationLeft]] > JavaLangFloat_MIN_VALUE)
#line 451
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[list getIndentationLeft]]];
    }
    
#line 454
    obj = [parent_ getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_()];
    if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
      jfloat endIndent = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
      if ([JavaLangFloat compareWithFloat:endIndent withFloat:[list getIndentationRight]] != 0)
#line 458
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[list getIndentationRight]]];
    }
    else {
      
#line 460
      if ([JavaLangFloat compareWithFloat:[list getIndentationRight] withFloat:0] != 0)
#line 461
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[list getIndentationRight]]];
    }
  }
}


#line 466
- (void)writeAttributesWithComItextpdfTextListItem:(ComItextpdfTextListItem *)listItem {
  
#line 467
  if (listItem != nil) {
    ComItextpdfTextPdfPdfObject *obj = [((ComItextpdfTextPdfPdfStructureElement *) nil_chk(parent_)) getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_()];
    if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
      jfloat startIndent = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
      if ([JavaLangFloat compareWithFloat:startIndent withFloat:[listItem getIndentationLeft]] != 0)
#line 472
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[listItem getIndentationLeft]]];
    }
    else {
      
#line 474
      if ([JavaLangMath absWithFloat:[listItem getIndentationLeft]] > JavaLangFloat_MIN_VALUE)
#line 475
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[listItem getIndentationLeft]]];
    }
    
#line 478
    obj = [parent_ getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_()];
    if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
      jfloat endIndent = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
      if ([JavaLangFloat compareWithFloat:endIndent withFloat:[listItem getIndentationRight]] != 0)
#line 482
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[listItem getIndentationRight]]];
    }
    else {
      
#line 484
      if ([JavaLangFloat compareWithFloat:[listItem getIndentationRight] withFloat:0] != 0)
#line 485
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ENDINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[listItem getIndentationRight]]];
    }
  }
}


#line 490
- (void)writeAttributesWithComItextpdfTextListBody:(ComItextpdfTextListBody *)listBody {
  
#line 491
  if (listBody != nil) {
  }
}


#line 496
- (void)writeAttributesWithComItextpdfTextListLabel:(ComItextpdfTextListLabel *)listLabel {
  if (listLabel != nil) {
    ComItextpdfTextPdfPdfObject *obj = [((ComItextpdfTextPdfPdfStructureElement *) nil_chk(parent_)) getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_()];
    if ([obj isKindOfClass:[ComItextpdfTextPdfPdfNumber class]]) {
      jfloat startIndent = [((ComItextpdfTextPdfPdfNumber *) nil_chk(((ComItextpdfTextPdfPdfNumber *) check_class_cast(obj, [ComItextpdfTextPdfPdfNumber class])))) floatValue];
      if ([JavaLangFloat compareWithFloat:startIndent withFloat:[listLabel getIndentation]] != 0)
#line 502
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[listLabel getIndentation]]];
    }
    else {
      
#line 504
      if ([JavaLangMath absWithFloat:[listLabel getIndentation]] > JavaLangFloat_MIN_VALUE)
#line 505
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_STARTINDENT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[listLabel getIndentation]]];
    }
  }
}


#line 510
- (void)writeAttributesWithComItextpdfTextPdfPdfPTable:(ComItextpdfTextPdfPdfPTable *)table {
  
#line 511
  if (table != nil) {
    
#line 513
    if ([JavaLangFloat compareWithFloat:[table getSpacingBefore] withFloat:0.0f] != 0)
#line 514
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SPACEBEFORE_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[table getSpacingBefore]]];
    
#line 516
    if ([JavaLangFloat compareWithFloat:[table getSpacingAfter] withFloat:0.0f] != 0)
#line 517
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SPACEAFTER_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[table getSpacingAfter]]];
    
#line 519
    if ([table getTotalHeight] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_HEIGHT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[table getTotalHeight]]];
    }
    if ([table getTotalWidth] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_WIDTH_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[table getTotalWidth]]];
    }
  }
}


#line 528
- (void)writeAttributesWithComItextpdfTextPdfPdfPRow:(ComItextpdfTextPdfPdfPRow *)row {
  
#line 529
  if (row != nil) {
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_TABLE_()];
  }
}


#line 534
- (void)writeAttributesWithComItextpdfTextPdfPdfPCell:(ComItextpdfTextPdfPdfPCell *)cell {
  
#line 535
  if (cell != nil) {
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_TABLE_()];
    if ([cell getColspan] != 1) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_COLSPAN_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:[cell getColspan]]];
    }
    if ([cell getRowspan] != 1) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_ROWSPAN_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithInt:[cell getRowspan]]];
    }
    if ([cell getHeaders] != nil) {
      ComItextpdfTextPdfPdfArray *headers = [[ComItextpdfTextPdfPdfArray alloc] init];
      JavaUtilArrayList *list = [cell getHeaders];
      for (ComItextpdfTextPdfPdfPHeaderCell * __strong header in nil_chk(list)) {
        if ([((ComItextpdfTextPdfPdfPHeaderCell *) nil_chk(header)) getName] != nil)
#line 548
        [headers addWithComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfString alloc] initWithNSString:[header getName]]];
      }
      if (![headers isEmpty])
#line 551
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_HEADERS_() withComItextpdfTextPdfPdfObject:headers];
    }
    
#line 554
    if ([cell getFixedHeight] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_HEIGHT_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[cell getFixedHeight]]];
    }
    
#line 558
    if ([cell getWidth] > 0) {
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_WIDTH_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfNumber alloc] initWithFloat:[cell getWidth]]];
    }
    
#line 562
    if ([cell getBackgroundColor] != nil) {
      ComItextpdfTextBaseColor *color = [cell getBackgroundColor];
      [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BACKGROUNDCOLOR_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:[IOSFloatArray arrayWithFloats:(jfloat[]){ [((ComItextpdfTextBaseColor *) nil_chk(color)) getRed] / 255.0f, [color getGreen] / 255.0f, [color getBlue] / 255.0f } count:3]]];
    }
  }
}


#line 569
- (void)writeAttributesWithComItextpdfTextPdfPdfPHeaderCell:(ComItextpdfTextPdfPdfPHeaderCell *)headerCell {
  
#line 570
  if (headerCell != nil) {
    if ([headerCell getScope] != ComItextpdfTextPdfPdfPHeaderCell_NONE) {
      switch ([headerCell getScope]) {
        case ComItextpdfTextPdfPdfPHeaderCell_ROW:
        
#line 573
        [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SCOPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_ROW_()];
        
#line 573
        break;
        case ComItextpdfTextPdfPdfPHeaderCell_COLUMN:
        
#line 574
        [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SCOPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_COLUMN_()];
        
#line 574
        break;
        case ComItextpdfTextPdfPdfPHeaderCell_BOTH:
        
#line 575
        [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_SCOPE_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_BOTH_()];
        
#line 575
        break;
      }
    }
    if ([headerCell getName] != nil)
#line 579
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_NAME_() withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfName alloc] initWithNSString:[headerCell getName]]];
    [self writeAttributesWithComItextpdfTextPdfPdfPCell:(ComItextpdfTextPdfPdfPCell *) check_class_cast(headerCell, [ComItextpdfTextPdfPdfPCell class])];
  }
}


#line 584
- (void)writeAttributesWithComItextpdfTextPdfPdfPTableHeader:(ComItextpdfTextPdfPdfPTableHeader *)header {
  
#line 585
  if (header != nil) {
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_O_() withComItextpdfTextPdfPdfObject:ComItextpdfTextPdfPdfName_get_TABLE_()];
  }
}


#line 590
- (void)writeAttributesWithComItextpdfTextPdfPdfPTableBody:(ComItextpdfTextPdfPdfPTableBody *)body {
  
#line 591
  if (body != nil) {
  }
}


#line 596
- (void)writeAttributesWithComItextpdfTextPdfPdfPTableFooter:(ComItextpdfTextPdfPdfPTableFooter *)footer {
  if (footer != nil) {
  }
}


#line 602
- (void)writeAttributesWithComItextpdfTextPdfPdfDiv:(ComItextpdfTextPdfPdfDiv *)div {
  
#line 603
  if (div != nil) {
    
#line 605
    if ([div getBackgroundColor] != nil)
#line 606
    [self setColorAttributeWithComItextpdfTextBaseColor:[div getBackgroundColor] withComItextpdfTextPdfPdfObject:nil withComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_BACKGROUNDCOLOR_()];
    
#line 609
    [self setTextAlignAttributeWithInt:[div getTextAlignment]];
  }
}


#line 613
- (void)writeAttributesWithComItextpdfTextDocument:(ComItextpdfTextDocument *)document {
  
#line 614
  if (document != nil) {
  }
}


#line 619
- (jboolean)colorsEqualWithComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)parentColor
                                       withFloatArray:(IOSFloatArray *)color {
  if ([JavaLangFloat compareWithFloat:IOSFloatArray_Get(nil_chk(color), 0) withFloat:[((ComItextpdfTextPdfPdfNumber *) nil_chk([((ComItextpdfTextPdfPdfArray *) nil_chk(parentColor)) getAsNumberWithInt:0])) floatValue]] != 0) {
    return NO;
  }
  if ([JavaLangFloat compareWithFloat:IOSFloatArray_Get(color, 1) withFloat:[((ComItextpdfTextPdfPdfNumber *) nil_chk([parentColor getAsNumberWithInt:1])) floatValue]] != 0) {
    return NO;
  }
  if ([JavaLangFloat compareWithFloat:IOSFloatArray_Get(color, 2) withFloat:[((ComItextpdfTextPdfPdfNumber *) nil_chk([parentColor getAsNumberWithInt:2])) floatValue]] != 0) {
    return NO;
  }
  return YES;
}


#line 632
- (void)setColorAttributeWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)newColor
                      withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)oldColor
                        withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)attributeName {
  IOSFloatArray *colorArr = [IOSFloatArray arrayWithFloats:(jfloat[]){ [((ComItextpdfTextBaseColor *) nil_chk(newColor)) getRed] / 255.0f, [newColor getGreen] / 255.0f, [newColor getBlue] / 255.0f } count:3];
  if ((oldColor != nil) && ([oldColor isKindOfClass:[ComItextpdfTextPdfPdfArray class]])) {
    ComItextpdfTextPdfPdfArray *oldC = (ComItextpdfTextPdfPdfArray *) check_class_cast(oldColor, [ComItextpdfTextPdfPdfArray class]);
    if ([self colorsEqualWithComItextpdfTextPdfPdfArray:oldC withFloatArray:colorArr]) {
      
#line 638
      [self setAttributeWithComItextpdfTextPdfPdfName:attributeName withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:colorArr]];
    }
    else
#line 641
    [self setAttributeWithComItextpdfTextPdfPdfName:attributeName withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:colorArr]];
  }
  else
#line 644
  [self setAttributeWithComItextpdfTextPdfPdfName:attributeName withComItextpdfTextPdfPdfObject:[[ComItextpdfTextPdfPdfArray alloc] initWithFloatArray:colorArr]];
}


#line 647
- (void)setTextAlignAttributeWithInt:(jint)elementAlign {
  
#line 648
  ComItextpdfTextPdfPdfName *align = nil;
  switch (elementAlign) {
    case ComItextpdfTextElement_ALIGN_LEFT:
    align = ComItextpdfTextPdfPdfName_get_START_();
    break;
    case ComItextpdfTextElement_ALIGN_CENTER:
    align = ComItextpdfTextPdfPdfName_get_CENTER_();
    break;
    case ComItextpdfTextElement_ALIGN_RIGHT:
    align = ComItextpdfTextPdfPdfName_get_END_();
    break;
    case ComItextpdfTextElement_ALIGN_JUSTIFIED:
    align = ComItextpdfTextPdfPdfName_get_JUSTIFY_();
    break;
  }
  ComItextpdfTextPdfPdfObject *obj = [((ComItextpdfTextPdfPdfStructureElement *) nil_chk(parent_)) getAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTALIGN_()];
  if ([obj isKindOfClass:[ComItextpdfTextPdfPdfName class]]) {
    ComItextpdfTextPdfPdfName *textAlign = ((ComItextpdfTextPdfPdfName *) check_class_cast(obj, [ComItextpdfTextPdfPdfName class]));
    if (align != nil && ![((ComItextpdfTextPdfPdfName *) nil_chk(textAlign)) isEqual:align])
#line 667
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTALIGN_() withComItextpdfTextPdfPdfObject:align];
  }
  else {
    
#line 669
    if (align != nil && ![((ComItextpdfTextPdfPdfName *) nil_chk(ComItextpdfTextPdfPdfName_get_START_())) isEqual:align])
#line 670
    [self setAttributeWithComItextpdfTextPdfPdfName:ComItextpdfTextPdfPdfName_get_TEXTALIGN_() withComItextpdfTextPdfPdfObject:align];
  }
}


#line 675
- (void)toPdfWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                      withJavaIoOutputStream:(JavaIoOutputStream *)os {
  
#line 676
  [ComItextpdfTextPdfPdfWriter checkPdfIsoConformanceWithComItextpdfTextPdfPdfWriter:writer withInt:ComItextpdfTextPdfInternalPdfIsoKeys_PDFISOKEY_STRUCTELEM withId:self];
  [super toPdfWithComItextpdfTextPdfPdfWriter:writer withJavaIoOutputStream:os];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfPdfStructureElement *)other {
  [super copyAllFieldsTo:other];
  other->parent_ = parent_;
  other->reference_ = reference_;
  other->structureType_ = structureType_;
  other->top_ = top_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComItextpdfTextPdfPdfStructureElement:withComItextpdfTextPdfPdfName:", "PdfStructureElement", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfStructureTreeRoot:withComItextpdfTextPdfPdfName:", "PdfStructureElement", NULL, 0x1, NULL },
    { "initWithComItextpdfTextPdfPdfDictionary:withComItextpdfTextPdfPdfName:", "PdfStructureElement", NULL, 0x4, NULL },
    { "getStructureType", NULL, "Lcom.itextpdf.text.pdf.PdfName;", 0x1, NULL },
    { "init__WithComItextpdfTextPdfPdfDictionary:withComItextpdfTextPdfPdfName:", "init", "V", 0x2, NULL },
    { "getParent", NULL, "Lcom.itextpdf.text.pdf.PdfDictionary;", 0x1, NULL },
    { "getParentWithBoolean:", "getParent", "Lcom.itextpdf.text.pdf.PdfDictionary;", 0x1, NULL },
    { "setPageMarkWithInt:withInt:", "setPageMark", "V", 0x0, NULL },
    { "getReference", NULL, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", 0x1, NULL },
    { "getAttributeWithComItextpdfTextPdfPdfName:", "getAttribute", "Lcom.itextpdf.text.pdf.PdfObject;", 0x1, NULL },
    { "setAttributeWithComItextpdfTextPdfPdfName:withComItextpdfTextPdfPdfObject:", "setAttribute", "V", 0x1, NULL },
    { "writeAttributesWithComItextpdfTextPdfInterfacesIAccessibleElement:", "writeAttributes", "V", 0x1, NULL },
    { "writeAttributesWithComItextpdfTextChunk:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextImage:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfTemplate:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextParagraph:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextList:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextListItem:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextListBody:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextListLabel:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfPTable:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfPRow:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfPCell:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfPHeaderCell:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfPTableHeader:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfPTableBody:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfPTableFooter:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextPdfPdfDiv:", "writeAttributes", "V", 0x2, NULL },
    { "writeAttributesWithComItextpdfTextDocument:", "writeAttributes", "V", 0x2, NULL },
    { "colorsEqualWithComItextpdfTextPdfPdfArray:withFloatArray:", "colorsEqual", "Z", 0x2, NULL },
    { "setColorAttributeWithComItextpdfTextBaseColor:withComItextpdfTextPdfPdfObject:withComItextpdfTextPdfPdfName:", "setColorAttribute", "V", 0x2, NULL },
    { "setTextAlignAttributeWithInt:", "setTextAlignAttribute", "V", 0x2, NULL },
    { "toPdfWithComItextpdfTextPdfPdfWriter:withJavaIoOutputStream:", "toPdf", "V", 0x1, "Ljava.io.IOException;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfStructureElement;", NULL,  },
    { "top_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfStructureTreeRoot;", NULL,  },
    { "reference_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfIndirectReference;", NULL,  },
    { "structureType_", NULL, 0x2, "Lcom.itextpdf.text.pdf.PdfName;", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfPdfStructureElement = { "PdfStructureElement", "com.itextpdf.text.pdf", NULL, 0x1, 33, methods, 4, fields, 0, NULL};
  return &_ComItextpdfTextPdfPdfStructureElement;
}

@end

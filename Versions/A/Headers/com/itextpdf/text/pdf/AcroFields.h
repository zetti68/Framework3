//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/AcroFields.java
//

#ifndef _ComItextpdfTextPdfAcroFields_H_
#define _ComItextpdfTextPdfAcroFields_H_

@class ComItextpdfTextBaseColor;
@class ComItextpdfTextPdfAcroFields_Item;
@class ComItextpdfTextPdfBaseField;
@class ComItextpdfTextPdfBaseFont;
@class ComItextpdfTextPdfFdfReader;
@class ComItextpdfTextPdfFdfWriter;
@class ComItextpdfTextPdfIntHashtable;
@class ComItextpdfTextPdfPdfAppearance;
@class ComItextpdfTextPdfPdfArray;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfFormField;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextPdfPdfReader;
@class ComItextpdfTextPdfPdfWriter;
@class ComItextpdfTextPdfPushbuttonField;
@class ComItextpdfTextPdfXfaForm;
@class ComItextpdfTextPdfXfdfReader;
@class ComItextpdfTextRectangle;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaIoInputStream;
@class JavaLangInteger;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol OrgW3cDomNode;

#import "JreEmulation.h"
#include "java/util/Comparator.h"

#define ComItextpdfTextPdfAcroFields_DA_COLOR 2
#define ComItextpdfTextPdfAcroFields_DA_FONT 0
#define ComItextpdfTextPdfAcroFields_DA_SIZE 1
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_CHECKBOX 2
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_COMBO 6
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_LIST 5
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_NONE 0
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_PUSHBUTTON 1
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_RADIOBUTTON 3
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_SIGNATURE 7
#define ComItextpdfTextPdfAcroFields_FIELD_TYPE_TEXT 4

@interface ComItextpdfTextPdfAcroFields : NSObject {
 @public
  ComItextpdfTextPdfPdfReader *reader_;
  ComItextpdfTextPdfPdfWriter *writer_;
  id<JavaUtilMap> fields_;
  jint topFirst_;
  JavaUtilHashMap *sigNames_;
  jboolean append_;
  JavaUtilHashMap *extensionFonts_;
  ComItextpdfTextPdfXfaForm *xfa_;
  jboolean lastWasString_;
  jboolean generateAppearances_;
  JavaUtilHashMap *localFonts_;
  jfloat extraMarginLeft_;
  jfloat extraMarginTop_;
  JavaUtilArrayList *substitutionFonts_;
  JavaUtilArrayList *orderedSignatureNames_;
  jint totalRevisions_;
  id<JavaUtilMap> fieldCache_;
}

- (instancetype)initWithComItextpdfTextPdfPdfReader:(ComItextpdfTextPdfPdfReader *)reader
                    withComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)fill;

- (IOSObjectArray *)getAppearanceStatesWithNSString:(NSString *)fieldName;

- (IOSObjectArray *)getListOptionWithNSString:(NSString *)fieldName
                                      withInt:(jint)idx;

- (IOSObjectArray *)getListOptionExportWithNSString:(NSString *)fieldName;

- (IOSObjectArray *)getListOptionDisplayWithNSString:(NSString *)fieldName;

- (jboolean)setListOptionWithNSString:(NSString *)fieldName
                    withNSStringArray:(IOSObjectArray *)exportValues
                    withNSStringArray:(IOSObjectArray *)displayValues;

- (jint)getFieldTypeWithNSString:(NSString *)fieldName;

- (void)exportAsFdfWithComItextpdfTextPdfFdfWriter:(ComItextpdfTextPdfFdfWriter *)writer;

- (jboolean)renameFieldWithNSString:(NSString *)oldName
                       withNSString:(NSString *)newName;

+ (IOSObjectArray *)splitDAelementsWithNSString:(NSString *)da;

- (void)decodeGenericDictionaryWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)merged
                                   withComItextpdfTextPdfBaseField:(ComItextpdfTextPdfBaseField *)tx;

- (ComItextpdfTextPdfPdfAppearance *)getAppearanceWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)merged
                                                                    withNSStringArray:(IOSObjectArray *)values
                                                                         withNSString:(NSString *)fieldName;

- (ComItextpdfTextPdfPdfAppearance *)getAppearanceWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)merged
                                                                         withNSString:(NSString *)text
                                                                         withNSString:(NSString *)fieldName;

- (ComItextpdfTextBaseColor *)getMKColorWithComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)ar;

- (NSString *)getFieldRichValueWithNSString:(NSString *)name;

- (NSString *)getFieldWithNSString:(NSString *)name;

- (IOSObjectArray *)getListSelectionWithNSString:(NSString *)name;

- (jboolean)setFieldPropertyWithNSString:(NSString *)field
                            withNSString:(NSString *)name
                                  withId:(id)value
                            withIntArray:(IOSIntArray *)inst;

- (jboolean)setFieldPropertyWithNSString:(NSString *)field
                            withNSString:(NSString *)name
                                 withInt:(jint)value
                            withIntArray:(IOSIntArray *)inst;

- (void)mergeXfaDataWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (void)setFieldsWithComItextpdfTextPdfFdfReader:(ComItextpdfTextPdfFdfReader *)fdf;

- (void)setFieldsWithComItextpdfTextPdfXfdfReader:(ComItextpdfTextPdfXfdfReader *)xfdf;

- (jboolean)regenerateFieldWithNSString:(NSString *)name;

- (jboolean)setFieldWithNSString:(NSString *)name
                    withNSString:(NSString *)value;

- (jboolean)setFieldRichValueWithNSString:(NSString *)name
                             withNSString:(NSString *)richValue;

- (jboolean)setFieldWithNSString:(NSString *)name
                    withNSString:(NSString *)value
                    withNSString:(NSString *)display;

- (jboolean)setListSelectionWithNSString:(NSString *)name
                       withNSStringArray:(IOSObjectArray *)value;

- (jboolean)isInAPWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)dic
                        withComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)check;

- (id<JavaUtilMap>)getFields;

- (ComItextpdfTextPdfAcroFields_Item *)getFieldItemWithNSString:(NSString *)name;

- (NSString *)getTranslatedFieldNameWithNSString:(NSString *)name;

- (id<JavaUtilList>)getFieldPositionsWithNSString:(NSString *)name;

- (jint)removeRefFromArrayWithComItextpdfTextPdfPdfArray:(ComItextpdfTextPdfPdfArray *)array
                         withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)refo;

- (jboolean)removeFieldsFromPageWithInt:(jint)page;

- (jboolean)removeFieldWithNSString:(NSString *)name
                            withInt:(jint)page;

- (jboolean)removeFieldWithNSString:(NSString *)name;

- (jboolean)isGenerateAppearances;

- (void)setGenerateAppearancesWithBoolean:(jboolean)generateAppearances;

- (jboolean)clearSignatureFieldWithNSString:(NSString *)name;

+ (void)clearSigDicWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)dic;

- (JavaUtilArrayList *)getSignatureNames;

- (JavaUtilArrayList *)getBlankSignatureNames;

- (ComItextpdfTextPdfPdfDictionary *)getSignatureDictionaryWithNSString:(NSString *)name;

- (ComItextpdfTextPdfPdfIndirectReference *)getNormalAppearanceWithNSString:(NSString *)name;

- (jboolean)signatureCoversWholeDocumentWithNSString:(NSString *)name;

- (void)markUsedWithComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)obj;

- (jint)getTotalRevisions;

- (jint)getRevisionWithNSString:(NSString *)field;

- (JavaIoInputStream *)extractRevisionWithNSString:(NSString *)field;

- (id<JavaUtilMap>)getFieldCache;

- (void)setFieldCacheWithJavaUtilMap:(id<JavaUtilMap>)fieldCache;

- (void)setExtraMarginWithFloat:(jfloat)extraMarginLeft
                      withFloat:(jfloat)extraMarginTop;

- (void)addSubstitutionFontWithComItextpdfTextPdfBaseFont:(ComItextpdfTextPdfBaseFont *)font;

- (JavaUtilArrayList *)getSubstitutionFonts;

- (void)setSubstitutionFontsWithJavaUtilArrayList:(JavaUtilArrayList *)substitutionFonts;

- (ComItextpdfTextPdfXfaForm *)getXfa;

- (void)removeXfa;

- (ComItextpdfTextPdfPushbuttonField *)getNewPushbuttonFromFieldWithNSString:(NSString *)field;

- (ComItextpdfTextPdfPushbuttonField *)getNewPushbuttonFromFieldWithNSString:(NSString *)field
                                                                     withInt:(jint)order;

- (jboolean)replacePushbuttonFieldWithNSString:(NSString *)field
            withComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)button;

- (jboolean)replacePushbuttonFieldWithNSString:(NSString *)field
            withComItextpdfTextPdfPdfFormField:(ComItextpdfTextPdfPdfFormField *)button
                                       withInt:(jint)order;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfAcroFields *)other;

@end

FOUNDATION_EXPORT BOOL ComItextpdfTextPdfAcroFields_initialized;
J2OBJC_STATIC_INIT(ComItextpdfTextPdfAcroFields)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, reader_, ComItextpdfTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, writer_, ComItextpdfTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, fields_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, sigNames_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, extensionFonts_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, xfa_, ComItextpdfTextPdfXfaForm *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, localFonts_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, substitutionFonts_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, orderedSignatureNames_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields, fieldCache_, id<JavaUtilMap>)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, DA_FONT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, DA_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, DA_COLOR, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_NONE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_PUSHBUTTON, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_CHECKBOX, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_RADIOBUTTON, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_TEXT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_LIST, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_COMBO, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, FIELD_TYPE_SIGNATURE, jint)

FOUNDATION_EXPORT JavaUtilHashMap *ComItextpdfTextPdfAcroFields_stdFieldFontNames_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, stdFieldFontNames_, JavaUtilHashMap *)

FOUNDATION_EXPORT IOSObjectArray *ComItextpdfTextPdfAcroFields_buttonRemove_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields, buttonRemove_, IOSObjectArray *)

#define ComItextpdfTextPdfAcroFields_Item_WRITE_MERGED 1
#define ComItextpdfTextPdfAcroFields_Item_WRITE_VALUE 4
#define ComItextpdfTextPdfAcroFields_Item_WRITE_WIDGET 2

@interface ComItextpdfTextPdfAcroFields_Item : NSObject {
 @public
  JavaUtilArrayList *values_;
  JavaUtilArrayList *widgets_;
  JavaUtilArrayList *widget_refs_;
  JavaUtilArrayList *merged_;
  JavaUtilArrayList *page_;
  JavaUtilArrayList *tabOrder_;
}

- (void)writeToAllWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value
                                        withInt:(jint)writeFlags;

- (void)markUsedWithComItextpdfTextPdfAcroFields:(ComItextpdfTextPdfAcroFields *)parentFields
                                         withInt:(jint)writeFlags;

- (jint)size;

- (void)removeWithInt:(jint)killIdx;

- (ComItextpdfTextPdfPdfDictionary *)getValueWithInt:(jint)idx;

- (void)addValueWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)value;

- (ComItextpdfTextPdfPdfDictionary *)getWidgetWithInt:(jint)idx;

- (void)addWidgetWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)widget;

- (ComItextpdfTextPdfPdfIndirectReference *)getWidgetRefWithInt:(jint)idx;

- (void)addWidgetRefWithComItextpdfTextPdfPdfIndirectReference:(ComItextpdfTextPdfPdfIndirectReference *)widgRef;

- (ComItextpdfTextPdfPdfDictionary *)getMergedWithInt:(jint)idx;

- (void)addMergedWithComItextpdfTextPdfPdfDictionary:(ComItextpdfTextPdfPdfDictionary *)mergeDict;

- (JavaLangInteger *)getPageWithInt:(jint)idx;

- (void)addPageWithInt:(jint)pg;

- (void)forcePageWithInt:(jint)idx
                 withInt:(jint)pg;

- (JavaLangInteger *)getTabOrderWithInt:(jint)idx;

- (void)addTabOrderWithInt:(jint)order;

- (instancetype)init;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfAcroFields_Item *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfAcroFields_Item_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_Item, values_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_Item, widgets_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_Item, widget_refs_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_Item, merged_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_Item, page_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_Item, tabOrder_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields_Item, WRITE_MERGED, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields_Item, WRITE_WIDGET, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextPdfAcroFields_Item, WRITE_VALUE, jint)

@interface ComItextpdfTextPdfAcroFields_InstHit : NSObject {
 @public
  ComItextpdfTextPdfIntHashtable *hits_;
}

- (instancetype)initWithIntArray:(IOSIntArray *)inst;

- (jboolean)isHitWithInt:(jint)n;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfAcroFields_InstHit *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfAcroFields_InstHit_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_InstHit, hits_, ComItextpdfTextPdfIntHashtable *)

@interface ComItextpdfTextPdfAcroFields_SorterComparator : NSObject < JavaUtilComparator > {
}

- (jint)compareWithId:(IOSObjectArray *)o1
               withId:(IOSObjectArray *)o2;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfAcroFields_SorterComparator_init() {}

@interface ComItextpdfTextPdfAcroFields_FieldPosition : NSObject {
 @public
  jint page_;
  ComItextpdfTextRectangle *position_;
}

- (instancetype)init;

- (void)copyAllFieldsTo:(ComItextpdfTextPdfAcroFields_FieldPosition *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfTextPdfAcroFields_FieldPosition_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfAcroFields_FieldPosition, position_, ComItextpdfTextRectangle *)

#endif // _ComItextpdfTextPdfAcroFields_H_

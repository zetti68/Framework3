//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BidiOrder.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/BidiOrder.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "com/itextpdf/text/pdf/BidiOrder.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"

BOOL ComItextpdfTextPdfBidiOrder_initialized = NO;


#line 156
@implementation ComItextpdfTextPdfBidiOrder

IOSByteArray * ComItextpdfTextPdfBidiOrder_rtypes_;
IOSCharArray * ComItextpdfTextPdfBidiOrder_baseTypes_;


#line 240
- (instancetype)initWithByteArray:(IOSByteArray *)types {
  if (self = [super init]) {
    paragraphEmbeddingLevel_ =
#line 159
    -1;
    
#line 241
    [ComItextpdfTextPdfBidiOrder validateTypesWithByteArray:types];
    
#line 243
    self->initialTypes_ = (IOSByteArray *) check_class_cast([((IOSByteArray *) nil_chk(types)) clone], [IOSByteArray class]);
    
#line 245
    [self runAlgorithm];
  }
  return self;
}


#line 256
- (instancetype)initWithByteArray:(IOSByteArray *)types
                         withByte:(jbyte)paragraphEmbeddingLevel {
  if (self = [super init]) {
    paragraphEmbeddingLevel_ =
#line 159
    -1;
    [ComItextpdfTextPdfBidiOrder validateTypesWithByteArray:types];
    
#line 258
    [ComItextpdfTextPdfBidiOrder validateParagraphEmbeddingLevelWithByte:paragraphEmbeddingLevel];
    
#line 260
    self->initialTypes_ = (IOSByteArray *) check_class_cast([((IOSByteArray *) nil_chk(types)) clone], [IOSByteArray class]);
    
#line 261
    self->paragraphEmbeddingLevel_ = paragraphEmbeddingLevel;
    
#line 263
    [self runAlgorithm];
  }
  return self;
}


#line 266
- (instancetype)initWithCharArray:(IOSCharArray *)text
                          withInt:(jint)offset
                          withInt:(jint)length
                         withByte:(jbyte)paragraphEmbeddingLevel {
  if (self = [super init]) {
    paragraphEmbeddingLevel_ =
#line 159
    -1;
    
#line 267
    initialTypes_ = [IOSByteArray arrayWithLength:length];
    
#line 268
    for (jint k = 0; k < length; ++k) {
      *IOSByteArray_GetRef(initialTypes_, k) = IOSByteArray_Get(nil_chk(ComItextpdfTextPdfBidiOrder_rtypes_), IOSCharArray_Get(nil_chk(text), offset + k));
    }
    
#line 271
    [ComItextpdfTextPdfBidiOrder validateParagraphEmbeddingLevelWithByte:paragraphEmbeddingLevel];
    
#line 273
    self->paragraphEmbeddingLevel_ = paragraphEmbeddingLevel;
    
#line 275
    [self runAlgorithm];
  }
  return self;
}


#line 278
+ (jbyte)getDirectionWithChar:(jchar)c {
  
#line 279
  return IOSByteArray_Get(nil_chk(ComItextpdfTextPdfBidiOrder_rtypes_), c);
}


#line 287
- (void)runAlgorithm {
  
#line 288
  textLength_ = ((IOSByteArray *) nil_chk(initialTypes_))->size_;
  
#line 292
  resultTypes_ = (IOSByteArray *) check_class_cast([initialTypes_ clone], [IOSByteArray class]);
  
#line 299
  if (paragraphEmbeddingLevel_ == -1) {
    [self determineParagraphEmbeddingLevel];
  }
  
#line 304
  resultLevels_ = [IOSByteArray arrayWithLength:textLength_];
  [self setLevelsWithInt:0 withInt:textLength_ withByte:paragraphEmbeddingLevel_];
  
#line 309
  [self determineExplicitEmbeddingLevels];
  
#line 312
  textLength_ = [self removeExplicitCodes];
  
#line 316
  jbyte prevLevel = paragraphEmbeddingLevel_;
  jint start = 0;
  while (start < textLength_) {
    jbyte level = IOSByteArray_Get(resultLevels_, start);
    jbyte prevType = [ComItextpdfTextPdfBidiOrder typeForLevelWithInt:[JavaLangMath maxWithInt:prevLevel withInt:level]];
    
#line 322
    jint limit = start + 1;
    while (limit < textLength_ && IOSByteArray_Get(resultLevels_, limit) == level) {
      ++limit;
    }
    
#line 327
    jbyte succLevel = limit < textLength_ ? IOSByteArray_Get(resultLevels_, limit) : paragraphEmbeddingLevel_;
    jbyte succType = [ComItextpdfTextPdfBidiOrder typeForLevelWithInt:[JavaLangMath maxWithInt:succLevel withInt:level]];
    
#line 332
    [self resolveWeakTypesWithInt:start withInt:limit withByte:level withByte:prevType withByte:succType];
    
#line 336
    [self resolveNeutralTypesWithInt:start withInt:limit withByte:level withByte:prevType withByte:succType];
    
#line 340
    [self resolveImplicitLevelsWithInt:start withInt:limit withByte:level withByte:prevType withByte:succType];
    
#line 342
    prevLevel = level;
    start = limit;
  }
  
#line 351
  textLength_ = [self reinsertExplicitCodesWithInt:textLength_];
}


#line 361
- (void)determineParagraphEmbeddingLevel {
  
#line 362
  jbyte strongType = -1;
  
#line 365
  for (jint i = 0; i < textLength_; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), i);
    if (t == ComItextpdfTextPdfBidiOrder_L || t == ComItextpdfTextPdfBidiOrder_AL || t == ComItextpdfTextPdfBidiOrder_R) {
      strongType = t;
      break;
    }
  }
  
#line 374
  if (strongType == -1) {
    
#line 376
    paragraphEmbeddingLevel_ = 0;
  }
  else
#line 377
  if (strongType == ComItextpdfTextPdfBidiOrder_L) {
    paragraphEmbeddingLevel_ = 0;
  }
  else {
    
#line 380
    paragraphEmbeddingLevel_ = 1;
  }
}


#line 392
- (void)determineExplicitEmbeddingLevels {
  embeddings_ = [ComItextpdfTextPdfBidiOrder processEmbeddingsWithByteArray:resultTypes_ withByte:paragraphEmbeddingLevel_];
  
#line 395
  for (jint i = 0; i < textLength_; ++i) {
    jbyte level = IOSByteArray_Get(nil_chk(embeddings_), i);
    if ((level & (jint) 0x80) != 0) {
      level &= (jint) 0x7f;
      *IOSByteArray_GetRef(nil_chk(resultTypes_), i) = [ComItextpdfTextPdfBidiOrder typeForLevelWithInt:level];
    }
    *IOSByteArray_GetRef(nil_chk(resultLevels_), i) = level;
  }
}


#line 412
- (jint)removeExplicitCodes {
  
#line 413
  jint w = 0;
  for (jint i = 0; i < textLength_; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(initialTypes_), i);
    if (!(t == ComItextpdfTextPdfBidiOrder_LRE || t == ComItextpdfTextPdfBidiOrder_RLE || t == ComItextpdfTextPdfBidiOrder_LRO || t == ComItextpdfTextPdfBidiOrder_RLO || t == ComItextpdfTextPdfBidiOrder_PDF || t == ComItextpdfTextPdfBidiOrder_BN)) {
      *IOSByteArray_GetRef(nil_chk(embeddings_), w) = IOSByteArray_Get(embeddings_, i);
      *IOSByteArray_GetRef(nil_chk(resultTypes_), w) = IOSByteArray_Get(resultTypes_, i);
      *IOSByteArray_GetRef(nil_chk(resultLevels_), w) = IOSByteArray_Get(resultLevels_, i);
      w++;
    }
  }
  return w;
}


#line 436
- (jint)reinsertExplicitCodesWithInt:(jint)textLength {
  
#line 437
  for (jint i = ((IOSByteArray *) nil_chk(initialTypes_))->size_; --i >= 0; ) {
    jbyte t = IOSByteArray_Get(initialTypes_, i);
    if (t == ComItextpdfTextPdfBidiOrder_LRE || t == ComItextpdfTextPdfBidiOrder_RLE || t == ComItextpdfTextPdfBidiOrder_LRO || t == ComItextpdfTextPdfBidiOrder_RLO || t == ComItextpdfTextPdfBidiOrder_PDF || t == ComItextpdfTextPdfBidiOrder_BN) {
      *IOSByteArray_GetRef(nil_chk(embeddings_), i) = 0;
      *IOSByteArray_GetRef(nil_chk(resultTypes_), i) = t;
      *IOSByteArray_GetRef(nil_chk(resultLevels_), i) = -1;
    }
    else {
      
#line 444
      --textLength;
      *IOSByteArray_GetRef(nil_chk(embeddings_), i) = IOSByteArray_Get(embeddings_, textLength);
      *IOSByteArray_GetRef(nil_chk(resultTypes_), i) = IOSByteArray_Get(resultTypes_, textLength);
      *IOSByteArray_GetRef(nil_chk(resultLevels_), i) = IOSByteArray_Get(resultLevels_, textLength);
    }
  }
  
#line 455
  if (IOSByteArray_Get(nil_chk(resultLevels_), 0) == -1) {
    *IOSByteArray_GetRef(resultLevels_, 0) = paragraphEmbeddingLevel_;
  }
  for (jint i = 1; i < initialTypes_->size_; ++i) {
    if (IOSByteArray_Get(resultLevels_, i) == -1) {
      *IOSByteArray_GetRef(resultLevels_, i) = IOSByteArray_Get(resultLevels_, i - 1);
    }
  }
  
#line 467
  return initialTypes_->size_;
}


#line 479
+ (IOSByteArray *)processEmbeddingsWithByteArray:(IOSByteArray *)resultTypes
                                        withByte:(jbyte)paragraphEmbeddingLevel {
  
#line 480
  jint EXPLICIT_LEVEL_LIMIT = 62;
  
#line 482
  jint textLength = ((IOSByteArray *) nil_chk(resultTypes))->size_;
  IOSByteArray *embeddings = [IOSByteArray arrayWithLength:textLength];
  
#line 487
  IOSByteArray *embeddingValueStack = [IOSByteArray arrayWithLength:EXPLICIT_LEVEL_LIMIT];
  jint stackCounter = 0;
  
#line 495
  jint overflowAlmostCounter = 0;
  
#line 499
  jint overflowCounter = 0;
  
#line 504
  jbyte currentEmbeddingLevel = paragraphEmbeddingLevel;
  jbyte currentEmbeddingValue = paragraphEmbeddingLevel;
  
#line 508
  for (jint i = 0; i < textLength; ++i) {
    
#line 510
    *IOSByteArray_GetRef(embeddings, i) = currentEmbeddingValue;
    
#line 512
    jbyte t = IOSByteArray_Get(resultTypes, i);
    
#line 515
    switch (t) {
      case ComItextpdfTextPdfBidiOrder_RLE:
      case ComItextpdfTextPdfBidiOrder_LRE:
      case ComItextpdfTextPdfBidiOrder_RLO:
      case ComItextpdfTextPdfBidiOrder_LRO:
      
#line 521
      if (overflowCounter == 0) {
        jbyte newLevel;
        if (t == ComItextpdfTextPdfBidiOrder_RLE || t == ComItextpdfTextPdfBidiOrder_RLO) {
          newLevel = (jbyte) ((currentEmbeddingLevel + 1) | 1);
        }
        else {
          
#line 526
          newLevel = (jbyte) ((currentEmbeddingLevel + 2) & ~1);
        }
        
#line 531
        if (newLevel < EXPLICIT_LEVEL_LIMIT) {
          *IOSByteArray_GetRef(embeddingValueStack, stackCounter) = currentEmbeddingValue;
          stackCounter++;
          
#line 535
          currentEmbeddingLevel = newLevel;
          if (t == ComItextpdfTextPdfBidiOrder_LRO || t == ComItextpdfTextPdfBidiOrder_RLO) {
            currentEmbeddingValue = (jbyte) (newLevel | (jint) 0x80);
          }
          else {
            
#line 539
            currentEmbeddingValue = newLevel;
          }
          
#line 544
          *IOSByteArray_GetRef(embeddings, i) = currentEmbeddingValue;
          break;
        }
        
#line 551
        if (currentEmbeddingLevel == 60) {
          overflowAlmostCounter++;
          break;
        }
      }
      
#line 558
      overflowCounter++;
      break;
      
#line 561
      case ComItextpdfTextPdfBidiOrder_PDF:
      
#line 568
      if (overflowCounter > 0) {
        --overflowCounter;
      }
      else
#line 570
      if (overflowAlmostCounter > 0 && currentEmbeddingLevel != 61) {
        --overflowAlmostCounter;
      }
      else
#line 572
      if (stackCounter > 0) {
        --stackCounter;
        currentEmbeddingValue = IOSByteArray_Get(embeddingValueStack, stackCounter);
        currentEmbeddingLevel = (jbyte) (currentEmbeddingValue & (jint) 0x7f);
      }
      break;
      
#line 579
      case ComItextpdfTextPdfBidiOrder_B:
      
#line 584
      stackCounter = 0;
      overflowCounter = 0;
      overflowAlmostCounter = 0;
      currentEmbeddingLevel = paragraphEmbeddingLevel;
      currentEmbeddingValue = paragraphEmbeddingLevel;
      
#line 590
      *IOSByteArray_GetRef(embeddings, i) = paragraphEmbeddingLevel;
      break;
      
#line 593
      default:
      break;
    }
  }
  
#line 598
  return embeddings;
}

- (void)resolveWeakTypesWithInt:(jint)start
                        withInt:(jint)limit
                       withByte:(jbyte)level
                       withByte:(jbyte)sor
                       withByte:(jbyte)eor {
  
#line 612
  jbyte preceedingCharacterType = sor;
  for (jint i = start; i < limit; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), i);
    if (t == ComItextpdfTextPdfBidiOrder_NSM) {
      *IOSByteArray_GetRef(resultTypes_, i) = preceedingCharacterType;
    }
    else {
      
#line 618
      preceedingCharacterType = t;
    }
  }
  
#line 624
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(resultTypes_), i) == ComItextpdfTextPdfBidiOrder_EN) {
      for (jint j = i - 1; j >= start; --j) {
        jbyte t = IOSByteArray_Get(resultTypes_, j);
        if (t == ComItextpdfTextPdfBidiOrder_L || t == ComItextpdfTextPdfBidiOrder_R || t == ComItextpdfTextPdfBidiOrder_AL) {
          if (t == ComItextpdfTextPdfBidiOrder_AL) {
            *IOSByteArray_GetRef(resultTypes_, i) = ComItextpdfTextPdfBidiOrder_AN;
          }
          break;
        }
      }
    }
  }
  
#line 639
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(resultTypes_), i) == ComItextpdfTextPdfBidiOrder_AL) {
      *IOSByteArray_GetRef(resultTypes_, i) = ComItextpdfTextPdfBidiOrder_R;
    }
  }
  
#line 657
  for (jint i = start + 1; i < limit - 1; ++i) {
    if (IOSByteArray_Get(nil_chk(resultTypes_), i) == ComItextpdfTextPdfBidiOrder_ES || IOSByteArray_Get(resultTypes_, i) == ComItextpdfTextPdfBidiOrder_CS) {
      jbyte prevSepType = IOSByteArray_Get(resultTypes_, i - 1);
      jbyte succSepType = IOSByteArray_Get(resultTypes_, i + 1);
      if (prevSepType == ComItextpdfTextPdfBidiOrder_EN && succSepType == ComItextpdfTextPdfBidiOrder_EN) {
        *IOSByteArray_GetRef(resultTypes_, i) = ComItextpdfTextPdfBidiOrder_EN;
      }
      else
#line 663
      if (IOSByteArray_Get(resultTypes_, i) == ComItextpdfTextPdfBidiOrder_CS && prevSepType == ComItextpdfTextPdfBidiOrder_AN && succSepType == ComItextpdfTextPdfBidiOrder_AN) {
        *IOSByteArray_GetRef(resultTypes_, i) = ComItextpdfTextPdfBidiOrder_AN;
      }
    }
  }
  
#line 670
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(resultTypes_), i) == ComItextpdfTextPdfBidiOrder_ET) {
      
#line 673
      jint runstart = i;
      jint runlimit = [self findRunLimitWithInt:runstart withInt:limit withByteArray:[IOSByteArray arrayWithBytes:(jbyte[]){ ComItextpdfTextPdfBidiOrder_ET } count:1]];
      
#line 677
      jbyte t = runstart == start ? sor : IOSByteArray_Get(resultTypes_, runstart - 1);
      
#line 679
      if (t != ComItextpdfTextPdfBidiOrder_EN) {
        t = runlimit == limit ? eor : IOSByteArray_Get(resultTypes_, runlimit);
      }
      
#line 683
      if (t == ComItextpdfTextPdfBidiOrder_EN) {
        [self setTypesWithInt:runstart withInt:runlimit withByte:ComItextpdfTextPdfBidiOrder_EN];
      }
      
#line 688
      i = runlimit;
    }
  }
  
#line 693
  for (jint i = start; i < limit; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), i);
    if (t == ComItextpdfTextPdfBidiOrder_ES || t == ComItextpdfTextPdfBidiOrder_ET || t == ComItextpdfTextPdfBidiOrder_CS) {
      *IOSByteArray_GetRef(resultTypes_, i) = ComItextpdfTextPdfBidiOrder_ON;
    }
  }
  
#line 701
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(resultTypes_), i) == ComItextpdfTextPdfBidiOrder_EN) {
      
#line 704
      jbyte prevStrongType = sor;
      for (jint j = i - 1; j >= start; --j) {
        jbyte t = IOSByteArray_Get(resultTypes_, j);
        if (t == ComItextpdfTextPdfBidiOrder_L || t == ComItextpdfTextPdfBidiOrder_R) {
          prevStrongType = t;
          break;
        }
      }
      if (prevStrongType == ComItextpdfTextPdfBidiOrder_L) {
        *IOSByteArray_GetRef(resultTypes_, i) = ComItextpdfTextPdfBidiOrder_L;
      }
    }
  }
}


#line 723
- (void)resolveNeutralTypesWithInt:(jint)start
                           withInt:(jint)limit
                          withByte:(jbyte)level
                          withByte:(jbyte)sor
                          withByte:(jbyte)eor {
  
#line 725
  for (jint i = start; i < limit; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), i);
    if (t == ComItextpdfTextPdfBidiOrder_WS || t == ComItextpdfTextPdfBidiOrder_ON || t == ComItextpdfTextPdfBidiOrder_B || t == ComItextpdfTextPdfBidiOrder_S) {
      
#line 729
      jint runstart = i;
      jint runlimit = [self findRunLimitWithInt:runstart withInt:limit withByteArray:[IOSByteArray arrayWithBytes:(jbyte[]){ ComItextpdfTextPdfBidiOrder_B, ComItextpdfTextPdfBidiOrder_S, ComItextpdfTextPdfBidiOrder_WS, ComItextpdfTextPdfBidiOrder_ON } count:4]];
      
#line 733
      jbyte leadingType;
      jbyte trailingType;
      
#line 736
      if (runstart == start) {
        leadingType = sor;
      }
      else {
        
#line 739
        leadingType = IOSByteArray_Get(resultTypes_, runstart - 1);
        if (leadingType == ComItextpdfTextPdfBidiOrder_L || leadingType == ComItextpdfTextPdfBidiOrder_R) {
        }
        else if (leadingType == ComItextpdfTextPdfBidiOrder_AN) {
          leadingType = ComItextpdfTextPdfBidiOrder_R;
        }
        else
#line 744
        if (leadingType == ComItextpdfTextPdfBidiOrder_EN) {
          
#line 747
          leadingType = ComItextpdfTextPdfBidiOrder_R;
        }
      }
      
#line 751
      if (runlimit == limit) {
        trailingType = eor;
      }
      else {
        
#line 754
        trailingType = IOSByteArray_Get(resultTypes_, runlimit);
        if (trailingType == ComItextpdfTextPdfBidiOrder_L || trailingType == ComItextpdfTextPdfBidiOrder_R) {
        }
        else if (trailingType == ComItextpdfTextPdfBidiOrder_AN) {
          trailingType = ComItextpdfTextPdfBidiOrder_R;
        }
        else
#line 759
        if (trailingType == ComItextpdfTextPdfBidiOrder_EN) {
          trailingType = ComItextpdfTextPdfBidiOrder_R;
        }
      }
      
#line 764
      jbyte resolvedType;
      if (leadingType == trailingType) {
        
#line 767
        resolvedType = leadingType;
      }
      else {
        
#line 772
        resolvedType = [ComItextpdfTextPdfBidiOrder typeForLevelWithInt:level];
      }
      
#line 775
      [self setTypesWithInt:runstart withInt:runlimit withByte:resolvedType];
      
#line 778
      i = runlimit;
    }
  }
}


#line 787
- (void)resolveImplicitLevelsWithInt:(jint)start
                             withInt:(jint)limit
                            withByte:(jbyte)level
                            withByte:(jbyte)sor
                            withByte:(jbyte)eor {
  
#line 788
  if ((level & 1) == 0) {
    for (jint i = start; i < limit; ++i) {
      jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), i);
      
#line 792
      if (t == ComItextpdfTextPdfBidiOrder_L) {
      }
      else if (t == ComItextpdfTextPdfBidiOrder_R) {
        *IOSByteArray_GetRef(nil_chk(resultLevels_), i) += 1;
      }
      else {
        
#line 797
        *IOSByteArray_GetRef(nil_chk(resultLevels_), i) += 2;
      }
    }
  }
  else {
    
#line 801
    for (jint i = start; i < limit; ++i) {
      jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), i);
      
#line 804
      if (t == ComItextpdfTextPdfBidiOrder_R) {
      }
      else {
        *IOSByteArray_GetRef(nil_chk(resultLevels_), i) += 1;
      }
    }
  }
}


#line 817
- (IOSByteArray *)getLevels {
  
#line 818
  return [self getLevelsWithIntArray:[IOSIntArray arrayWithInts:(jint[]){ textLength_ } count:1]];
}


#line 836
- (IOSByteArray *)getLevelsWithIntArray:(IOSIntArray *)linebreaks {
  
#line 849
  [ComItextpdfTextPdfBidiOrder validateLineBreaksWithIntArray:linebreaks withInt:textLength_];
  
#line 851
  IOSByteArray *result = (IOSByteArray *) check_class_cast([((IOSByteArray *) nil_chk(resultLevels_)) clone], [IOSByteArray class]);
  
#line 856
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(result))->size_; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(initialTypes_), i);
    if (t == ComItextpdfTextPdfBidiOrder_B || t == ComItextpdfTextPdfBidiOrder_S) {
      
#line 860
      *IOSByteArray_GetRef(result, i) = paragraphEmbeddingLevel_;
      
#line 863
      for (jint j = i - 1; j >= 0; --j) {
        if ([ComItextpdfTextPdfBidiOrder isWhitespaceWithByte:IOSByteArray_Get(initialTypes_, j)]) {
          *IOSByteArray_GetRef(result, j) = paragraphEmbeddingLevel_;
        }
        else {
          
#line 867
          break;
        }
      }
    }
  }
  
#line 874
  jint start = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(linebreaks))->size_; ++i) {
    jint limit = IOSIntArray_Get(linebreaks, i);
    for (jint j = limit - 1; j >= start; --j) {
      if ([ComItextpdfTextPdfBidiOrder isWhitespaceWithByte:IOSByteArray_Get(nil_chk(initialTypes_), j)]) {
        *IOSByteArray_GetRef(result, j) = paragraphEmbeddingLevel_;
      }
      else {
        
#line 881
        break;
      }
    }
    
#line 885
    start = limit;
  }
  
#line 888
  return result;
}


#line 909
- (IOSIntArray *)getReorderingWithIntArray:(IOSIntArray *)linebreaks {
  
#line 910
  [ComItextpdfTextPdfBidiOrder validateLineBreaksWithIntArray:linebreaks withInt:textLength_];
  
#line 912
  IOSByteArray *levels = [self getLevelsWithIntArray:linebreaks];
  
#line 914
  return [ComItextpdfTextPdfBidiOrder computeMultilineReorderingWithByteArray:levels withIntArray:linebreaks];
}

+ (IOSIntArray *)computeMultilineReorderingWithByteArray:(IOSByteArray *)levels
                                            withIntArray:(IOSIntArray *)linebreaks {
  
#line 922
  IOSIntArray *result = [IOSIntArray arrayWithLength:((IOSByteArray *) nil_chk(levels))->size_];
  
#line 924
  jint start = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(linebreaks))->size_; ++i) {
    jint limit = IOSIntArray_Get(linebreaks, i);
    
#line 928
    IOSByteArray *templevels = [IOSByteArray arrayWithLength:limit - start];
    [JavaLangSystem arraycopyWithId:levels withInt:start withId:templevels withInt:0 withInt:templevels->size_];
    
#line 931
    IOSIntArray *temporder = [ComItextpdfTextPdfBidiOrder computeReorderingWithByteArray:templevels];
    for (jint j = 0; j < ((IOSIntArray *) nil_chk(temporder))->size_; ++j) {
      *IOSIntArray_GetRef(result, start + j) = IOSIntArray_Get(temporder, j) + start;
    }
    
#line 936
    start = limit;
  }
  
#line 939
  return result;
}


#line 948
+ (IOSIntArray *)computeReorderingWithByteArray:(IOSByteArray *)levels {
  
#line 949
  jint lineLength = ((IOSByteArray *) nil_chk(levels))->size_;
  
#line 951
  IOSIntArray *result = [IOSIntArray arrayWithLength:lineLength];
  
#line 954
  for (jint i = 0; i < lineLength; ++i) {
    *IOSIntArray_GetRef(result, i) = i;
  }
  
#line 961
  jbyte highestLevel = 0;
  jbyte lowestOddLevel = 63;
  for (jint i = 0; i < lineLength; ++i) {
    jbyte level = IOSByteArray_Get(levels, i);
    if (level > highestLevel) {
      highestLevel = level;
    }
    if (((level & 1) != 0) && level < lowestOddLevel) {
      lowestOddLevel = level;
    }
  }
  
#line 973
  for (jint level = highestLevel; level >= lowestOddLevel; --level) {
    for (jint i = 0; i < lineLength; ++i) {
      if (IOSByteArray_Get(levels, i) >= level) {
        
#line 977
        jint start = i;
        jint limit = i + 1;
        while (limit < lineLength && IOSByteArray_Get(levels, limit) >= level) {
          ++limit;
        }
        
#line 984
        for (jint j = start, k = limit - 1; j < k; ++j, --k) {
          jint temp = IOSIntArray_Get(result, j);
          *IOSIntArray_GetRef(result, j) = IOSIntArray_Get(result, k);
          *IOSIntArray_GetRef(result, k) = temp;
        }
        
#line 991
        i = limit;
      }
    }
  }
  
#line 996
  return result;
}


#line 1002
- (jbyte)getBaseLevel {
  return paragraphEmbeddingLevel_;
}


#line 1011
+ (jboolean)isWhitespaceWithByte:(jbyte)biditype {
  
#line 1012
  switch (biditype) {
    case ComItextpdfTextPdfBidiOrder_LRE:
    case ComItextpdfTextPdfBidiOrder_RLE:
    case ComItextpdfTextPdfBidiOrder_LRO:
    case ComItextpdfTextPdfBidiOrder_RLO:
    case ComItextpdfTextPdfBidiOrder_PDF:
    case ComItextpdfTextPdfBidiOrder_BN:
    case ComItextpdfTextPdfBidiOrder_WS:
    return YES;
    default:
    return NO;
  }
}


#line 1029
+ (jbyte)typeForLevelWithInt:(jint)level {
  
#line 1030
  return ((level & (jint) 0x1) == 0) ? ComItextpdfTextPdfBidiOrder_L : ComItextpdfTextPdfBidiOrder_R;
}


#line 1037
- (jint)findRunLimitWithInt:(jint)index
                    withInt:(jint)limit
              withByteArray:(IOSByteArray *)validSet {
  
#line 1038
  --index;
  
#line 1040
  while (++index < limit) {
    {
      
#line 1041
      jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), index);
      for (jint i = 0; i < ((IOSByteArray *) nil_chk(validSet))->size_; ++i) {
        if (t == IOSByteArray_Get(validSet, i)) {
          goto continue_loop;
        }
      }
      
#line 1048
      return index;
    }
    continue_loop: ;
  }
  
#line 1050
  return limit;
}


#line 1057
- (jint)findRunStartWithInt:(jint)index
              withByteArray:(IOSByteArray *)validSet {
  
#line 1059
  while (--index >= 0) {
    {
      
#line 1060
      jbyte t = IOSByteArray_Get(nil_chk(resultTypes_), index);
      for (jint i = 0; i < ((IOSByteArray *) nil_chk(validSet))->size_; ++i) {
        if (t == IOSByteArray_Get(validSet, i)) {
          goto continue_loop;
        }
      }
      return index + 1;
    }
    continue_loop: ;
  }
  
#line 1068
  return 0;
}


#line 1074
- (void)setTypesWithInt:(jint)start
                withInt:(jint)limit
               withByte:(jbyte)newType {
  
#line 1075
  for (jint i = start; i < limit; ++i) {
    *IOSByteArray_GetRef(nil_chk(resultTypes_), i) = newType;
  }
}


#line 1083
- (void)setLevelsWithInt:(jint)start
                 withInt:(jint)limit
                withByte:(jbyte)newLevel {
  for (jint i = start; i < limit; ++i) {
    *IOSByteArray_GetRef(nil_chk(resultLevels_), i) = newLevel;
  }
}


#line 1094
+ (void)validateTypesWithByteArray:(IOSByteArray *)types {
  
#line 1095
  if (types == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"types.is.null" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  }
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(types))->size_; ++i) {
    if (IOSByteArray_Get(types, i) < ComItextpdfTextPdfBidiOrder_TYPE_MIN || IOSByteArray_Get(types, i) > ComItextpdfTextPdfBidiOrder_TYPE_MAX) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"illegal.type.value.at.1.2" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [NSString valueOfInt:i], [NSString valueOfInt:IOSByteArray_Get(types, i)] } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
  }
  for (jint i = 0; i < types->size_ - 1; ++i) {
    if (IOSByteArray_Get(types, i) == ComItextpdfTextPdfBidiOrder_B) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"b.type.before.end.of.paragraph.at.index.1" withInt:i]];
    }
  }
}


#line 1114
+ (void)validateParagraphEmbeddingLevelWithByte:(jbyte)paragraphEmbeddingLevel {
  
#line 1115
  if (paragraphEmbeddingLevel != -1 &&
#line 1116
  paragraphEmbeddingLevel != 0 &&
#line 1117
  paragraphEmbeddingLevel != 1) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"illegal.paragraph.embedding.level.1" withInt:paragraphEmbeddingLevel]];
  }
}


#line 1125
+ (void)validateLineBreaksWithIntArray:(IOSIntArray *)linebreaks
                               withInt:(jint)textLength {
  jint prev = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(linebreaks))->size_; ++i) {
    jint next = IOSIntArray_Get(linebreaks, i);
    if (next <= prev) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"bad.linebreak.1.at.index.2" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [NSString valueOfInt:next], [NSString valueOfInt:i] } count:2 type:[IOSClass classWithClass:[NSObject class]]]]];
    }
    prev = next;
  }
  if (prev != textLength) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"last.linebreak.must.be.at.1" withInt:textLength]];
  }
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfBidiOrder *)other {
  [super copyAllFieldsTo:other];
  other->embeddings_ = embeddings_;
  other->initialTypes_ = initialTypes_;
  other->paragraphEmbeddingLevel_ = paragraphEmbeddingLevel_;
  other->resultLevels_ = resultLevels_;
  other->resultTypes_ = resultTypes_;
  other->textLength_ = textLength_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfBidiOrder class]) {
    ComItextpdfTextPdfBidiOrder_rtypes_ = [IOSByteArray arrayWithLength:
#line 1139
    (jint) 0x10000];
    ComItextpdfTextPdfBidiOrder_baseTypes_ = [IOSCharArray arrayWithChars:(jchar[]){
#line 1142
      0, 8, (jchar) ComItextpdfTextPdfBidiOrder_BN, 9, 9, (jchar) ComItextpdfTextPdfBidiOrder_S, 10, 10, (jchar) ComItextpdfTextPdfBidiOrder_B, 11, 11, (jchar) ComItextpdfTextPdfBidiOrder_S, 12, 12, (jchar) ComItextpdfTextPdfBidiOrder_WS, 13, 13, (jchar) ComItextpdfTextPdfBidiOrder_B,
#line 1143
      14, 27, (jchar) ComItextpdfTextPdfBidiOrder_BN, 28, 30, (jchar) ComItextpdfTextPdfBidiOrder_B, 31, 31, (jchar) ComItextpdfTextPdfBidiOrder_S, 32, 32, (jchar) ComItextpdfTextPdfBidiOrder_WS, 33, 34, (jchar) ComItextpdfTextPdfBidiOrder_ON, 35, 37, (jchar) ComItextpdfTextPdfBidiOrder_ET,
#line 1144
      38, 42, (jchar) ComItextpdfTextPdfBidiOrder_ON, 43, 43, (jchar) ComItextpdfTextPdfBidiOrder_ET, 44, 44, (jchar) ComItextpdfTextPdfBidiOrder_CS, 45, 45, (jchar) ComItextpdfTextPdfBidiOrder_ET, 46, 46, (jchar) ComItextpdfTextPdfBidiOrder_CS, 47, 47, (jchar) ComItextpdfTextPdfBidiOrder_ES,
#line 1145
      48, 57, (jchar) ComItextpdfTextPdfBidiOrder_EN, 58, 58, (jchar) ComItextpdfTextPdfBidiOrder_CS, 59, 64, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65, 90, (jchar) ComItextpdfTextPdfBidiOrder_L, 91, 96, (jchar) ComItextpdfTextPdfBidiOrder_ON, 97, 122, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1146
      123, 126, (jchar) ComItextpdfTextPdfBidiOrder_ON, 127, 132, (jchar) ComItextpdfTextPdfBidiOrder_BN, 133, 133, (jchar) ComItextpdfTextPdfBidiOrder_B, 134, 159, (jchar) ComItextpdfTextPdfBidiOrder_BN, 160, 160, (jchar) ComItextpdfTextPdfBidiOrder_CS,
#line 1147
      161, 161, (jchar) ComItextpdfTextPdfBidiOrder_ON, 162, 165, (jchar) ComItextpdfTextPdfBidiOrder_ET, 166, 169, (jchar) ComItextpdfTextPdfBidiOrder_ON, 170, 170, (jchar) ComItextpdfTextPdfBidiOrder_L, 171, 175, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1148
      176, 177, (jchar) ComItextpdfTextPdfBidiOrder_ET, 178, 179, (jchar) ComItextpdfTextPdfBidiOrder_EN, 180, 180, (jchar) ComItextpdfTextPdfBidiOrder_ON, 181, 181, (jchar) ComItextpdfTextPdfBidiOrder_L, 182, 184, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1149
      185, 185, (jchar) ComItextpdfTextPdfBidiOrder_EN, 186, 186, (jchar) ComItextpdfTextPdfBidiOrder_L, 187, 191, (jchar) ComItextpdfTextPdfBidiOrder_ON, 192, 214, (jchar) ComItextpdfTextPdfBidiOrder_L, 215, 215, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1150
      216, 246, (jchar) ComItextpdfTextPdfBidiOrder_L, 247, 247, (jchar) ComItextpdfTextPdfBidiOrder_ON, 248, 696, (jchar) ComItextpdfTextPdfBidiOrder_L, 697, 698, (jchar) ComItextpdfTextPdfBidiOrder_ON, 699, 705, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1151
      706, 719, (jchar) ComItextpdfTextPdfBidiOrder_ON, 720, 721, (jchar) ComItextpdfTextPdfBidiOrder_L, 722, 735, (jchar) ComItextpdfTextPdfBidiOrder_ON, 736, 740, (jchar) ComItextpdfTextPdfBidiOrder_L, 741, 749, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1152
      750, 750, (jchar) ComItextpdfTextPdfBidiOrder_L, 751, 767, (jchar) ComItextpdfTextPdfBidiOrder_ON, 768, 855, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 856, 860, (jchar) ComItextpdfTextPdfBidiOrder_L, 861, 879, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1153
      880, 883, (jchar) ComItextpdfTextPdfBidiOrder_L, 884, 885, (jchar) ComItextpdfTextPdfBidiOrder_ON, 886, 893, (jchar) ComItextpdfTextPdfBidiOrder_L, 894, 894, (jchar) ComItextpdfTextPdfBidiOrder_ON, 895, 899, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1154
      900, 901, (jchar) ComItextpdfTextPdfBidiOrder_ON, 902, 902, (jchar) ComItextpdfTextPdfBidiOrder_L, 903, 903, (jchar) ComItextpdfTextPdfBidiOrder_ON, 904, 1013, (jchar) ComItextpdfTextPdfBidiOrder_L, 1014, 1014, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1155
      1015, 1154, (jchar) ComItextpdfTextPdfBidiOrder_L, 1155, 1158, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1159, 1159, (jchar) ComItextpdfTextPdfBidiOrder_L, 1160, 1161, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1156
      1162, 1417, (jchar) ComItextpdfTextPdfBidiOrder_L, 1418, 1418, (jchar) ComItextpdfTextPdfBidiOrder_ON, 1419, 1424, (jchar) ComItextpdfTextPdfBidiOrder_L, 1425, 1441, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1157
      1442, 1442, (jchar) ComItextpdfTextPdfBidiOrder_L, 1443, 1465, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1466, 1466, (jchar) ComItextpdfTextPdfBidiOrder_L, 1467, 1469, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1158
      1470, 1470, (jchar) ComItextpdfTextPdfBidiOrder_R, 1471, 1471, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1472, 1472, (jchar) ComItextpdfTextPdfBidiOrder_R, 1473, 1474, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1159
      1475, 1475, (jchar) ComItextpdfTextPdfBidiOrder_R, 1476, 1476, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1477, 1487, (jchar) ComItextpdfTextPdfBidiOrder_L, 1488, 1514, (jchar) ComItextpdfTextPdfBidiOrder_R,
#line 1160
      1515, 1519, (jchar) ComItextpdfTextPdfBidiOrder_L, 1520, 1524, (jchar) ComItextpdfTextPdfBidiOrder_R, 1525, 1535, (jchar) ComItextpdfTextPdfBidiOrder_L, 1536, 1539, (jchar) ComItextpdfTextPdfBidiOrder_AL,
#line 1161
      1540, 1547, (jchar) ComItextpdfTextPdfBidiOrder_L, 1548, 1548, (jchar) ComItextpdfTextPdfBidiOrder_CS, 1549, 1549, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1550, 1551, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1162
      1552, 1557, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1558, 1562, (jchar) ComItextpdfTextPdfBidiOrder_L, 1563, 1563, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1564, 1566, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1163
      1567, 1567, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1568, 1568, (jchar) ComItextpdfTextPdfBidiOrder_L, 1569, 1594, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1595, 1599, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1164
      1600, 1610, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1611, 1624, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1625, 1631, (jchar) ComItextpdfTextPdfBidiOrder_L, 1632, 1641, (jchar) ComItextpdfTextPdfBidiOrder_AN,
#line 1165
      1642, 1642, (jchar) ComItextpdfTextPdfBidiOrder_ET, 1643, 1644, (jchar) ComItextpdfTextPdfBidiOrder_AN, 1645, 1647, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1648, 1648, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1166
      1649, 1749, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1750, 1756, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1757, 1757, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1758, 1764, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1167
      1765, 1766, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1767, 1768, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1769, 1769, (jchar) ComItextpdfTextPdfBidiOrder_ON, 1770, 1773, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1168
      1774, 1775, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1776, 1785, (jchar) ComItextpdfTextPdfBidiOrder_EN, 1786, 1805, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1806, 1806, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1169
      1807, 1807, (jchar) ComItextpdfTextPdfBidiOrder_BN, 1808, 1808, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1809, 1809, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1810, 1839, (jchar) ComItextpdfTextPdfBidiOrder_AL,
#line 1170
      1840, 1866, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1867, 1868, (jchar) ComItextpdfTextPdfBidiOrder_L, 1869, 1871, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1872, 1919, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1171
      1920, 1957, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1958, 1968, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 1969, 1969, (jchar) ComItextpdfTextPdfBidiOrder_AL, 1970, 2304, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1172
      2305, 2306, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2307, 2363, (jchar) ComItextpdfTextPdfBidiOrder_L, 2364, 2364, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2365, 2368, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1173
      2369, 2376, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2377, 2380, (jchar) ComItextpdfTextPdfBidiOrder_L, 2381, 2381, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2382, 2384, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1174
      2385, 2388, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2389, 2401, (jchar) ComItextpdfTextPdfBidiOrder_L, 2402, 2403, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2404, 2432, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1175
      2433, 2433, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2434, 2491, (jchar) ComItextpdfTextPdfBidiOrder_L, 2492, 2492, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2493, 2496, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1176
      2497, 2500, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2501, 2508, (jchar) ComItextpdfTextPdfBidiOrder_L, 2509, 2509, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2510, 2529, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1177
      2530, 2531, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2532, 2545, (jchar) ComItextpdfTextPdfBidiOrder_L, 2546, 2547, (jchar) ComItextpdfTextPdfBidiOrder_ET, 2548, 2560, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1178
      2561, 2562, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2563, 2619, (jchar) ComItextpdfTextPdfBidiOrder_L, 2620, 2620, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2621, 2624, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1179
      2625, 2626, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2627, 2630, (jchar) ComItextpdfTextPdfBidiOrder_L, 2631, 2632, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2633, 2634, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1180
      2635, 2637, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2638, 2671, (jchar) ComItextpdfTextPdfBidiOrder_L, 2672, 2673, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2674, 2688, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1181
      2689, 2690, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2691, 2747, (jchar) ComItextpdfTextPdfBidiOrder_L, 2748, 2748, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2749, 2752, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1182
      2753, 2757, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2758, 2758, (jchar) ComItextpdfTextPdfBidiOrder_L, 2759, 2760, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2761, 2764, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1183
      2765, 2765, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2766, 2785, (jchar) ComItextpdfTextPdfBidiOrder_L, 2786, 2787, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2788, 2800, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1184
      2801, 2801, (jchar) ComItextpdfTextPdfBidiOrder_ET, 2802, 2816, (jchar) ComItextpdfTextPdfBidiOrder_L, 2817, 2817, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2818, 2875, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1185
      2876, 2876, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2877, 2878, (jchar) ComItextpdfTextPdfBidiOrder_L, 2879, 2879, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2880, 2880, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1186
      2881, 2883, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2884, 2892, (jchar) ComItextpdfTextPdfBidiOrder_L, 2893, 2893, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2894, 2901, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1187
      2902, 2902, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2903, 2945, (jchar) ComItextpdfTextPdfBidiOrder_L, 2946, 2946, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 2947, 3007, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1188
      3008, 3008, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3009, 3020, (jchar) ComItextpdfTextPdfBidiOrder_L, 3021, 3021, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3022, 3058, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1189
      3059, 3064, (jchar) ComItextpdfTextPdfBidiOrder_ON, 3065, 3065, (jchar) ComItextpdfTextPdfBidiOrder_ET, 3066, 3066, (jchar) ComItextpdfTextPdfBidiOrder_ON, 3067, 3133, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1190
      3134, 3136, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3137, 3141, (jchar) ComItextpdfTextPdfBidiOrder_L, 3142, 3144, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3145, 3145, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1191
      3146, 3149, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3150, 3156, (jchar) ComItextpdfTextPdfBidiOrder_L, 3157, 3158, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3159, 3259, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1192
      3260, 3260, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3261, 3275, (jchar) ComItextpdfTextPdfBidiOrder_L, 3276, 3277, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3278, 3392, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1193
      3393, 3395, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3396, 3404, (jchar) ComItextpdfTextPdfBidiOrder_L, 3405, 3405, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3406, 3529, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1194
      3530, 3530, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3531, 3537, (jchar) ComItextpdfTextPdfBidiOrder_L, 3538, 3540, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3541, 3541, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1195
      3542, 3542, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3543, 3632, (jchar) ComItextpdfTextPdfBidiOrder_L, 3633, 3633, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3634, 3635, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1196
      3636, 3642, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3643, 3646, (jchar) ComItextpdfTextPdfBidiOrder_L, 3647, 3647, (jchar) ComItextpdfTextPdfBidiOrder_ET, 3648, 3654, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1197
      3655, 3662, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3663, 3760, (jchar) ComItextpdfTextPdfBidiOrder_L, 3761, 3761, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3762, 3763, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1198
      3764, 3769, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3770, 3770, (jchar) ComItextpdfTextPdfBidiOrder_L, 3771, 3772, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3773, 3783, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1199
      3784, 3789, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3790, 3863, (jchar) ComItextpdfTextPdfBidiOrder_L, 3864, 3865, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3866, 3892, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1200
      3893, 3893, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3894, 3894, (jchar) ComItextpdfTextPdfBidiOrder_L, 3895, 3895, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3896, 3896, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1201
      3897, 3897, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3898, 3901, (jchar) ComItextpdfTextPdfBidiOrder_ON, 3902, 3952, (jchar) ComItextpdfTextPdfBidiOrder_L, 3953, 3966, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1202
      3967, 3967, (jchar) ComItextpdfTextPdfBidiOrder_L, 3968, 3972, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3973, 3973, (jchar) ComItextpdfTextPdfBidiOrder_L, 3974, 3975, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1203
      3976, 3983, (jchar) ComItextpdfTextPdfBidiOrder_L, 3984, 3991, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 3992, 3992, (jchar) ComItextpdfTextPdfBidiOrder_L, 3993, 4028, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1204
      4029, 4037, (jchar) ComItextpdfTextPdfBidiOrder_L, 4038, 4038, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 4039, 4140, (jchar) ComItextpdfTextPdfBidiOrder_L, 4141, 4144, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1205
      4145, 4145, (jchar) ComItextpdfTextPdfBidiOrder_L, 4146, 4146, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 4147, 4149, (jchar) ComItextpdfTextPdfBidiOrder_L, 4150, 4151, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1206
      4152, 4152, (jchar) ComItextpdfTextPdfBidiOrder_L, 4153, 4153, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 4154, 4183, (jchar) ComItextpdfTextPdfBidiOrder_L, 4184, 4185, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1207
      4186, 5759, (jchar) ComItextpdfTextPdfBidiOrder_L, 5760, 5760, (jchar) ComItextpdfTextPdfBidiOrder_WS, 5761, 5786, (jchar) ComItextpdfTextPdfBidiOrder_L, 5787, 5788, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1208
      5789, 5905, (jchar) ComItextpdfTextPdfBidiOrder_L, 5906, 5908, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 5909, 5937, (jchar) ComItextpdfTextPdfBidiOrder_L, 5938, 5940, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1209
      5941, 5969, (jchar) ComItextpdfTextPdfBidiOrder_L, 5970, 5971, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 5972, 6001, (jchar) ComItextpdfTextPdfBidiOrder_L, 6002, 6003, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1210
      6004, 6070, (jchar) ComItextpdfTextPdfBidiOrder_L, 6071, 6077, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 6078, 6085, (jchar) ComItextpdfTextPdfBidiOrder_L, 6086, 6086, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1211
      6087, 6088, (jchar) ComItextpdfTextPdfBidiOrder_L, 6089, 6099, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 6100, 6106, (jchar) ComItextpdfTextPdfBidiOrder_L, 6107, 6107, (jchar) ComItextpdfTextPdfBidiOrder_ET,
#line 1212
      6108, 6108, (jchar) ComItextpdfTextPdfBidiOrder_L, 6109, 6109, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 6110, 6127, (jchar) ComItextpdfTextPdfBidiOrder_L, 6128, 6137, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1213
      6138, 6143, (jchar) ComItextpdfTextPdfBidiOrder_L, 6144, 6154, (jchar) ComItextpdfTextPdfBidiOrder_ON, 6155, 6157, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 6158, 6158, (jchar) ComItextpdfTextPdfBidiOrder_WS,
#line 1214
      6159, 6312, (jchar) ComItextpdfTextPdfBidiOrder_L, 6313, 6313, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 6314, 6431, (jchar) ComItextpdfTextPdfBidiOrder_L, 6432, 6434, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1215
      6435, 6438, (jchar) ComItextpdfTextPdfBidiOrder_L, 6439, 6443, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 6444, 6449, (jchar) ComItextpdfTextPdfBidiOrder_L, 6450, 6450, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1216
      6451, 6456, (jchar) ComItextpdfTextPdfBidiOrder_L, 6457, 6459, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 6460, 6463, (jchar) ComItextpdfTextPdfBidiOrder_L, 6464, 6464, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1217
      6465, 6467, (jchar) ComItextpdfTextPdfBidiOrder_L, 6468, 6469, (jchar) ComItextpdfTextPdfBidiOrder_ON, 6470, 6623, (jchar) ComItextpdfTextPdfBidiOrder_L, 6624, 6655, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1218
      6656, 8124, (jchar) ComItextpdfTextPdfBidiOrder_L, 8125, 8125, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8126, 8126, (jchar) ComItextpdfTextPdfBidiOrder_L, 8127, 8129, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1219
      8130, 8140, (jchar) ComItextpdfTextPdfBidiOrder_L, 8141, 8143, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8144, 8156, (jchar) ComItextpdfTextPdfBidiOrder_L, 8157, 8159, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1220
      8160, 8172, (jchar) ComItextpdfTextPdfBidiOrder_L, 8173, 8175, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8176, 8188, (jchar) ComItextpdfTextPdfBidiOrder_L, 8189, 8190, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1221
      8191, 8191, (jchar) ComItextpdfTextPdfBidiOrder_L, 8192, 8202, (jchar) ComItextpdfTextPdfBidiOrder_WS, 8203, 8205, (jchar) ComItextpdfTextPdfBidiOrder_BN, 8206, 8206, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1222
      8207, 8207, (jchar) ComItextpdfTextPdfBidiOrder_R, 8208, 8231, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8232, 8232, (jchar) ComItextpdfTextPdfBidiOrder_WS, 8233, 8233, (jchar) ComItextpdfTextPdfBidiOrder_B,
#line 1223
      8234, 8234, (jchar) ComItextpdfTextPdfBidiOrder_LRE, 8235, 8235, (jchar) ComItextpdfTextPdfBidiOrder_RLE, 8236, 8236, (jchar) ComItextpdfTextPdfBidiOrder_PDF, 8237, 8237, (jchar) ComItextpdfTextPdfBidiOrder_LRO,
#line 1224
      8238, 8238, (jchar) ComItextpdfTextPdfBidiOrder_RLO, 8239, 8239, (jchar) ComItextpdfTextPdfBidiOrder_WS, 8240, 8244, (jchar) ComItextpdfTextPdfBidiOrder_ET, 8245, 8276, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1225
      8277, 8278, (jchar) ComItextpdfTextPdfBidiOrder_L, 8279, 8279, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8280, 8286, (jchar) ComItextpdfTextPdfBidiOrder_L, 8287, 8287, (jchar) ComItextpdfTextPdfBidiOrder_WS,
#line 1226
      8288, 8291, (jchar) ComItextpdfTextPdfBidiOrder_BN, 8292, 8297, (jchar) ComItextpdfTextPdfBidiOrder_L, 8298, 8303, (jchar) ComItextpdfTextPdfBidiOrder_BN, 8304, 8304, (jchar) ComItextpdfTextPdfBidiOrder_EN,
#line 1227
      8305, 8307, (jchar) ComItextpdfTextPdfBidiOrder_L, 8308, 8313, (jchar) ComItextpdfTextPdfBidiOrder_EN, 8314, 8315, (jchar) ComItextpdfTextPdfBidiOrder_ET, 8316, 8318, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1228
      8319, 8319, (jchar) ComItextpdfTextPdfBidiOrder_L, 8320, 8329, (jchar) ComItextpdfTextPdfBidiOrder_EN, 8330, 8331, (jchar) ComItextpdfTextPdfBidiOrder_ET, 8332, 8334, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1229
      8335, 8351, (jchar) ComItextpdfTextPdfBidiOrder_L, 8352, 8369, (jchar) ComItextpdfTextPdfBidiOrder_ET, 8370, 8399, (jchar) ComItextpdfTextPdfBidiOrder_L, 8400, 8426, (jchar) ComItextpdfTextPdfBidiOrder_NSM,
#line 1230
      8427, 8447, (jchar) ComItextpdfTextPdfBidiOrder_L, 8448, 8449, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8450, 8450, (jchar) ComItextpdfTextPdfBidiOrder_L, 8451, 8454, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1231
      8455, 8455, (jchar) ComItextpdfTextPdfBidiOrder_L, 8456, 8457, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8458, 8467, (jchar) ComItextpdfTextPdfBidiOrder_L, 8468, 8468, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1232
      8469, 8469, (jchar) ComItextpdfTextPdfBidiOrder_L, 8470, 8472, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8473, 8477, (jchar) ComItextpdfTextPdfBidiOrder_L, 8478, 8483, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1233
      8484, 8484, (jchar) ComItextpdfTextPdfBidiOrder_L, 8485, 8485, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8486, 8486, (jchar) ComItextpdfTextPdfBidiOrder_L, 8487, 8487, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1234
      8488, 8488, (jchar) ComItextpdfTextPdfBidiOrder_L, 8489, 8489, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8490, 8493, (jchar) ComItextpdfTextPdfBidiOrder_L, 8494, 8494, (jchar) ComItextpdfTextPdfBidiOrder_ET,
#line 1235
      8495, 8497, (jchar) ComItextpdfTextPdfBidiOrder_L, 8498, 8498, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8499, 8505, (jchar) ComItextpdfTextPdfBidiOrder_L, 8506, 8507, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1236
      8508, 8511, (jchar) ComItextpdfTextPdfBidiOrder_L, 8512, 8516, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8517, 8521, (jchar) ComItextpdfTextPdfBidiOrder_L, 8522, 8523, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1237
      8524, 8530, (jchar) ComItextpdfTextPdfBidiOrder_L, 8531, 8543, (jchar) ComItextpdfTextPdfBidiOrder_ON, 8544, 8591, (jchar) ComItextpdfTextPdfBidiOrder_L, 8592, 8721, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1238
      8722, 8723, (jchar) ComItextpdfTextPdfBidiOrder_ET, 8724, 9013, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9014, 9082, (jchar) ComItextpdfTextPdfBidiOrder_L, 9083, 9108, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1239
      9109, 9109, (jchar) ComItextpdfTextPdfBidiOrder_L, 9110, 9168, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9169, 9215, (jchar) ComItextpdfTextPdfBidiOrder_L, 9216, 9254, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1240
      9255, 9279, (jchar) ComItextpdfTextPdfBidiOrder_L, 9280, 9290, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9291, 9311, (jchar) ComItextpdfTextPdfBidiOrder_L, 9312, 9371, (jchar) ComItextpdfTextPdfBidiOrder_EN,
#line 1241
      9372, 9449, (jchar) ComItextpdfTextPdfBidiOrder_L, 9450, 9450, (jchar) ComItextpdfTextPdfBidiOrder_EN, 9451, 9751, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9752, 9752, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1242
      9753, 9853, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9854, 9855, (jchar) ComItextpdfTextPdfBidiOrder_L, 9856, 9873, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9874, 9887, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1243
      9888, 9889, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9890, 9984, (jchar) ComItextpdfTextPdfBidiOrder_L, 9985, 9988, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9989, 9989, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1244
      9990, 9993, (jchar) ComItextpdfTextPdfBidiOrder_ON, 9994, 9995, (jchar) ComItextpdfTextPdfBidiOrder_L, 9996, 10023, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10024, 10024, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1245
      10025, 10059, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10060, 10060, (jchar) ComItextpdfTextPdfBidiOrder_L, 10061, 10061, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10062, 10062, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1246
      10063, 10066, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10067, 10069, (jchar) ComItextpdfTextPdfBidiOrder_L, 10070, 10070, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10071, 10071, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1247
      10072, 10078, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10079, 10080, (jchar) ComItextpdfTextPdfBidiOrder_L, 10081, 10132, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10133, 10135, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1248
      10136, 10159, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10160, 10160, (jchar) ComItextpdfTextPdfBidiOrder_L, 10161, 10174, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10175, 10191, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1249
      10192, 10219, (jchar) ComItextpdfTextPdfBidiOrder_ON, 10220, 10223, (jchar) ComItextpdfTextPdfBidiOrder_L, 10224, 11021, (jchar) ComItextpdfTextPdfBidiOrder_ON, 11022, 11903, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1250
      11904, 11929, (jchar) ComItextpdfTextPdfBidiOrder_ON, 11930, 11930, (jchar) ComItextpdfTextPdfBidiOrder_L, 11931, 12019, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12020, 12031, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1251
      12032, 12245, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12246, 12271, (jchar) ComItextpdfTextPdfBidiOrder_L, 12272, 12283, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12284, 12287, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1252
      12288, 12288, (jchar) ComItextpdfTextPdfBidiOrder_WS, 12289, 12292, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12293, 12295, (jchar) ComItextpdfTextPdfBidiOrder_L, 12296, 12320, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1253
      12321, 12329, (jchar) ComItextpdfTextPdfBidiOrder_L, 12330, 12335, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 12336, 12336, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12337, 12341, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1254
      12342, 12343, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12344, 12348, (jchar) ComItextpdfTextPdfBidiOrder_L, 12349, 12351, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12352, 12440, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1255
      12441, 12442, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 12443, 12444, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12445, 12447, (jchar) ComItextpdfTextPdfBidiOrder_L, 12448, 12448, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1256
      12449, 12538, (jchar) ComItextpdfTextPdfBidiOrder_L, 12539, 12539, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12540, 12828, (jchar) ComItextpdfTextPdfBidiOrder_L, 12829, 12830, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1257
      12831, 12879, (jchar) ComItextpdfTextPdfBidiOrder_L, 12880, 12895, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12896, 12923, (jchar) ComItextpdfTextPdfBidiOrder_L, 12924, 12925, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1258
      12926, 12976, (jchar) ComItextpdfTextPdfBidiOrder_L, 12977, 12991, (jchar) ComItextpdfTextPdfBidiOrder_ON, 12992, 13003, (jchar) ComItextpdfTextPdfBidiOrder_L, 13004, 13007, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1259
      13008, 13174, (jchar) ComItextpdfTextPdfBidiOrder_L, 13175, 13178, (jchar) ComItextpdfTextPdfBidiOrder_ON, 13179, 13277, (jchar) ComItextpdfTextPdfBidiOrder_L, 13278, 13279, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1260
      13280, 13310, (jchar) ComItextpdfTextPdfBidiOrder_L, 13311, 13311, (jchar) ComItextpdfTextPdfBidiOrder_ON, 13312, 19903, (jchar) ComItextpdfTextPdfBidiOrder_L, 19904, 19967, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1261
      19968, 42127, (jchar) ComItextpdfTextPdfBidiOrder_L, 42128, 42182, (jchar) ComItextpdfTextPdfBidiOrder_ON, 42183, 64284, (jchar) ComItextpdfTextPdfBidiOrder_L, 64285, 64285, (jchar) ComItextpdfTextPdfBidiOrder_R,
#line 1262
      64286, 64286, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 64287, 64296, (jchar) ComItextpdfTextPdfBidiOrder_R, 64297, 64297, (jchar) ComItextpdfTextPdfBidiOrder_ET, 64298, 64310, (jchar) ComItextpdfTextPdfBidiOrder_R,
#line 1263
      64311, 64311, (jchar) ComItextpdfTextPdfBidiOrder_L, 64312, 64316, (jchar) ComItextpdfTextPdfBidiOrder_R, 64317, 64317, (jchar) ComItextpdfTextPdfBidiOrder_L, 64318, 64318, (jchar) ComItextpdfTextPdfBidiOrder_R,
#line 1264
      64319, 64319, (jchar) ComItextpdfTextPdfBidiOrder_L, 64320, 64321, (jchar) ComItextpdfTextPdfBidiOrder_R, 64322, 64322, (jchar) ComItextpdfTextPdfBidiOrder_L, 64323, 64324, (jchar) ComItextpdfTextPdfBidiOrder_R,
#line 1265
      64325, 64325, (jchar) ComItextpdfTextPdfBidiOrder_L, 64326, 64335, (jchar) ComItextpdfTextPdfBidiOrder_R, 64336, 64433, (jchar) ComItextpdfTextPdfBidiOrder_AL, 64434, 64466, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1266
      64467, 64829, (jchar) ComItextpdfTextPdfBidiOrder_AL, 64830, 64831, (jchar) ComItextpdfTextPdfBidiOrder_ON, 64832, 64847, (jchar) ComItextpdfTextPdfBidiOrder_L, 64848, 64911, (jchar) ComItextpdfTextPdfBidiOrder_AL,
#line 1267
      64912, 64913, (jchar) ComItextpdfTextPdfBidiOrder_L, 64914, 64967, (jchar) ComItextpdfTextPdfBidiOrder_AL, 64968, 65007, (jchar) ComItextpdfTextPdfBidiOrder_L, 65008, 65020, (jchar) ComItextpdfTextPdfBidiOrder_AL,
#line 1268
      65021, 65021, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65022, 65023, (jchar) ComItextpdfTextPdfBidiOrder_L, 65024, 65039, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 65040, 65055, (jchar) ComItextpdfTextPdfBidiOrder_L,
#line 1269
      65056, 65059, (jchar) ComItextpdfTextPdfBidiOrder_NSM, 65060, 65071, (jchar) ComItextpdfTextPdfBidiOrder_L, 65072, 65103, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65104, 65104, (jchar) ComItextpdfTextPdfBidiOrder_CS,
#line 1270
      65105, 65105, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65106, 65106, (jchar) ComItextpdfTextPdfBidiOrder_CS, 65107, 65107, (jchar) ComItextpdfTextPdfBidiOrder_L, 65108, 65108, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1271
      65109, 65109, (jchar) ComItextpdfTextPdfBidiOrder_CS, 65110, 65118, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65119, 65119, (jchar) ComItextpdfTextPdfBidiOrder_ET, 65120, 65121, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1272
      65122, 65123, (jchar) ComItextpdfTextPdfBidiOrder_ET, 65124, 65126, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65127, 65127, (jchar) ComItextpdfTextPdfBidiOrder_L, 65128, 65128, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1273
      65129, 65130, (jchar) ComItextpdfTextPdfBidiOrder_ET, 65131, 65131, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65132, 65135, (jchar) ComItextpdfTextPdfBidiOrder_L, 65136, 65140, (jchar) ComItextpdfTextPdfBidiOrder_AL,
#line 1274
      65141, 65141, (jchar) ComItextpdfTextPdfBidiOrder_L, 65142, 65276, (jchar) ComItextpdfTextPdfBidiOrder_AL, 65277, 65278, (jchar) ComItextpdfTextPdfBidiOrder_L, 65279, 65279, (jchar) ComItextpdfTextPdfBidiOrder_BN,
#line 1275
      65280, 65280, (jchar) ComItextpdfTextPdfBidiOrder_L, 65281, 65282, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65283, 65285, (jchar) ComItextpdfTextPdfBidiOrder_ET, 65286, 65290, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1276
      65291, 65291, (jchar) ComItextpdfTextPdfBidiOrder_ET, 65292, 65292, (jchar) ComItextpdfTextPdfBidiOrder_CS, 65293, 65293, (jchar) ComItextpdfTextPdfBidiOrder_ET, 65294, 65294, (jchar) ComItextpdfTextPdfBidiOrder_CS,
#line 1277
      65295, 65295, (jchar) ComItextpdfTextPdfBidiOrder_ES, 65296, 65305, (jchar) ComItextpdfTextPdfBidiOrder_EN, 65306, 65306, (jchar) ComItextpdfTextPdfBidiOrder_CS, 65307, 65312, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1278
      65313, 65338, (jchar) ComItextpdfTextPdfBidiOrder_L, 65339, 65344, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65345, 65370, (jchar) ComItextpdfTextPdfBidiOrder_L, 65371, 65381, (jchar) ComItextpdfTextPdfBidiOrder_ON,
#line 1279
      65382, 65503, (jchar) ComItextpdfTextPdfBidiOrder_L, 65504, 65505, (jchar) ComItextpdfTextPdfBidiOrder_ET, 65506, 65508, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65509, 65510, (jchar) ComItextpdfTextPdfBidiOrder_ET,
#line 1280
      65511, 65511, (jchar) ComItextpdfTextPdfBidiOrder_L, 65512, 65518, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65519, 65528, (jchar) ComItextpdfTextPdfBidiOrder_L, 65529, 65531, (jchar) ComItextpdfTextPdfBidiOrder_BN,
#line 1281
      65532, 65533, (jchar) ComItextpdfTextPdfBidiOrder_ON, 65534, 65535, (jchar) ComItextpdfTextPdfBidiOrder_L } count:1725];
      {
        
#line 1284
        for (jint k = 0; k < ComItextpdfTextPdfBidiOrder_baseTypes_->size_; ++k) {
          jint start = IOSCharArray_Get(ComItextpdfTextPdfBidiOrder_baseTypes_, k);
          jint end = IOSCharArray_Get(ComItextpdfTextPdfBidiOrder_baseTypes_, ++k);
          jbyte b = (jbyte) IOSCharArray_Get(ComItextpdfTextPdfBidiOrder_baseTypes_, ++k);
          while (start <= end)
#line 1289
          *IOSByteArray_GetRef(ComItextpdfTextPdfBidiOrder_rtypes_, start++) = b;
        }
      }
      ComItextpdfTextPdfBidiOrder_initialized = YES;
    }
  }

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithByteArray:", "BidiOrder", NULL, 0x1, NULL },
    { "initWithByteArray:withByte:", "BidiOrder", NULL, 0x1, NULL },
    { "initWithCharArray:withInt:withInt:withByte:", "BidiOrder", NULL, 0x1, NULL },
    { "getDirectionWithChar:", "getDirection", "B", 0x19, NULL },
    { "runAlgorithm", NULL, "V", 0x2, NULL },
    { "determineParagraphEmbeddingLevel", NULL, "V", 0x2, NULL },
    { "determineExplicitEmbeddingLevels", NULL, "V", 0x2, NULL },
    { "removeExplicitCodes", NULL, "I", 0x2, NULL },
    { "reinsertExplicitCodesWithInt:", "reinsertExplicitCodes", "I", 0x2, NULL },
    { "processEmbeddingsWithByteArray:withByte:", "processEmbeddings", "[B", 0xa, NULL },
    { "resolveWeakTypesWithInt:withInt:withByte:withByte:withByte:", "resolveWeakTypes", "V", 0x2, NULL },
    { "resolveNeutralTypesWithInt:withInt:withByte:withByte:withByte:", "resolveNeutralTypes", "V", 0x2, NULL },
    { "resolveImplicitLevelsWithInt:withInt:withByte:withByte:withByte:", "resolveImplicitLevels", "V", 0x2, NULL },
    { "getLevels", NULL, "[B", 0x1, NULL },
    { "getLevelsWithIntArray:", "getLevels", "[B", 0x1, NULL },
    { "getReorderingWithIntArray:", "getReordering", "[I", 0x1, NULL },
    { "computeMultilineReorderingWithByteArray:withIntArray:", "computeMultilineReordering", "[I", 0xa, NULL },
    { "computeReorderingWithByteArray:", "computeReordering", "[I", 0xa, NULL },
    { "getBaseLevel", NULL, "B", 0x1, NULL },
    { "isWhitespaceWithByte:", "isWhitespace", "Z", 0xa, NULL },
    { "typeForLevelWithInt:", "typeForLevel", "B", 0xa, NULL },
    { "findRunLimitWithInt:withInt:withByteArray:", "findRunLimit", "I", 0x2, NULL },
    { "findRunStartWithInt:withByteArray:", "findRunStart", "I", 0x2, NULL },
    { "setTypesWithInt:withInt:withByte:", "setTypes", "V", 0x2, NULL },
    { "setLevelsWithInt:withInt:withByte:", "setLevels", "V", 0x2, NULL },
    { "validateTypesWithByteArray:", "validateTypes", "V", 0xa, NULL },
    { "validateParagraphEmbeddingLevelWithByte:", "validateParagraphEmbeddingLevel", "V", 0xa, NULL },
    { "validateLineBreaksWithIntArray:withInt:", "validateLineBreaks", "V", 0xa, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "initialTypes_", NULL, 0x2, "[B", NULL,  },
    { "embeddings_", NULL, 0x2, "[B", NULL,  },
    { "paragraphEmbeddingLevel_", NULL, 0x2, "B", NULL,  },
    { "textLength_", NULL, 0x2, "I", NULL,  },
    { "resultTypes_", NULL, 0x2, "[B", NULL,  },
    { "resultLevels_", NULL, 0x2, "[B", NULL,  },
    { "L_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_L },
    { "LRE_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_LRE },
    { "LRO_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_LRO },
    { "R_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_R },
    { "AL_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_AL },
    { "RLE_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_RLE },
    { "RLO_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_RLO },
    { "PDF_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_PDF },
    { "EN_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_EN },
    { "ES_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_ES },
    { "ET_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_ET },
    { "AN_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_AN },
    { "CS_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_CS },
    { "NSM_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_NSM },
    { "BN_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_BN },
    { "B_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_B },
    { "S_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_S },
    { "WS_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_WS },
    { "ON_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_ON },
    { "TYPE_MIN_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_TYPE_MIN },
    { "TYPE_MAX_", NULL, 0x19, "B", NULL, .constantValue.asChar = ComItextpdfTextPdfBidiOrder_TYPE_MAX },
    { "rtypes_", NULL, 0x1a, "[B", &ComItextpdfTextPdfBidiOrder_rtypes_,  },
    { "baseTypes_", NULL, 0xa, "[C", &ComItextpdfTextPdfBidiOrder_baseTypes_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfBidiOrder = { "BidiOrder", "com.itextpdf.text.pdf", NULL, 0x11, 28, methods, 29, fields, 0, NULL};
  return &_ComItextpdfTextPdfBidiOrder;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/PdfShading.java
//

#ifndef _ComItextpdfTextPdfPdfShading_H_
#define _ComItextpdfTextPdfPdfShading_H_

#include "J2ObjC_header.h"

@class ComItextpdfTextBaseColor;
@class ComItextpdfTextPdfColorDetails;
@class ComItextpdfTextPdfPdfDictionary;
@class ComItextpdfTextPdfPdfFunction;
@class ComItextpdfTextPdfPdfIndirectReference;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfWriter;
@class IOSBooleanArray;
@class IOSFloatArray;

@interface ComItextpdfTextPdfPdfShading : NSObject {
 @public
  ComItextpdfTextPdfPdfDictionary *shading_;
  ComItextpdfTextPdfPdfWriter *writer_;
  jint shadingType_;
  ComItextpdfTextPdfColorDetails *colorDetails_;
  ComItextpdfTextPdfPdfName *shadingName_;
  ComItextpdfTextPdfPdfIndirectReference *shadingReference_;
  IOSFloatArray *bBox_;
  jboolean antiAlias_;
}

#pragma mark Public

- (void)addToBody;

+ (void)checkCompatibleColorsWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)c1
                             withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)c2;

- (IOSFloatArray *)getBBox;

+ (IOSFloatArray *)getColorArrayWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color;

- (ComItextpdfTextBaseColor *)getColorSpace;

- (jboolean)isAntiAlias;

- (void)setAntiAliasWithBoolean:(jboolean)antiAlias;

- (void)setBBoxWithFloatArray:(IOSFloatArray *)bBox;

+ (ComItextpdfTextPdfPdfShading *)simpleAxialWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                   withFloat:(jfloat)x0
                                                                   withFloat:(jfloat)y0
                                                                   withFloat:(jfloat)x1
                                                                   withFloat:(jfloat)y1
                                                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)startColor
                                                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)endColor;

+ (ComItextpdfTextPdfPdfShading *)simpleAxialWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                   withFloat:(jfloat)x0
                                                                   withFloat:(jfloat)y0
                                                                   withFloat:(jfloat)x1
                                                                   withFloat:(jfloat)y1
                                                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)startColor
                                                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)endColor
                                                                 withBoolean:(jboolean)extendStart
                                                                 withBoolean:(jboolean)extendEnd;

+ (ComItextpdfTextPdfPdfShading *)simpleRadialWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                    withFloat:(jfloat)x0
                                                                    withFloat:(jfloat)y0
                                                                    withFloat:(jfloat)r0
                                                                    withFloat:(jfloat)x1
                                                                    withFloat:(jfloat)y1
                                                                    withFloat:(jfloat)r1
                                                 withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)startColor
                                                 withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)endColor;

+ (ComItextpdfTextPdfPdfShading *)simpleRadialWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                                                    withFloat:(jfloat)x0
                                                                    withFloat:(jfloat)y0
                                                                    withFloat:(jfloat)r0
                                                                    withFloat:(jfloat)x1
                                                                    withFloat:(jfloat)y1
                                                                    withFloat:(jfloat)r1
                                                 withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)startColor
                                                 withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)endColor
                                                                  withBoolean:(jboolean)extendStart
                                                                  withBoolean:(jboolean)extendEnd;

+ (void)throwColorSpaceError;

+ (ComItextpdfTextPdfPdfShading *)type1WithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                          withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)colorSpace
                                                        withFloatArray:(IOSFloatArray *)domain
                                                        withFloatArray:(IOSFloatArray *)tMatrix
                                     withComItextpdfTextPdfPdfFunction:(ComItextpdfTextPdfPdfFunction *)function;

+ (ComItextpdfTextPdfPdfShading *)type2WithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                          withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)colorSpace
                                                        withFloatArray:(IOSFloatArray *)coords
                                                        withFloatArray:(IOSFloatArray *)domain
                                     withComItextpdfTextPdfPdfFunction:(ComItextpdfTextPdfPdfFunction *)function
                                                      withBooleanArray:(IOSBooleanArray *)extend;

+ (ComItextpdfTextPdfPdfShading *)type3WithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer
                                          withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)colorSpace
                                                        withFloatArray:(IOSFloatArray *)coords
                                                        withFloatArray:(IOSFloatArray *)domain
                                     withComItextpdfTextPdfPdfFunction:(ComItextpdfTextPdfPdfFunction *)function
                                                      withBooleanArray:(IOSBooleanArray *)extend;

#pragma mark Protected

- (instancetype)initWithComItextpdfTextPdfPdfWriter:(ComItextpdfTextPdfPdfWriter *)writer;

- (void)setColorSpaceWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color;

#pragma mark Package-Private

- (ComItextpdfTextPdfColorDetails *)getColorDetails;

- (ComItextpdfTextPdfPdfName *)getShadingName;

- (ComItextpdfTextPdfPdfIndirectReference *)getShadingReference;

- (ComItextpdfTextPdfPdfWriter *)getWriter;

- (void)setNameWithInt:(jint)number;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextPdfPdfShading)

J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfShading, shading_, ComItextpdfTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfShading, writer_, ComItextpdfTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfShading, colorDetails_, ComItextpdfTextPdfColorDetails *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfShading, shadingName_, ComItextpdfTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfShading, shadingReference_, ComItextpdfTextPdfPdfIndirectReference *)
J2OBJC_FIELD_SETTER(ComItextpdfTextPdfPdfShading, bBox_, IOSFloatArray *)

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfShading_initWithComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfPdfShading *self, ComItextpdfTextPdfPdfWriter *writer);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *new_ComItextpdfTextPdfPdfShading_initWithComItextpdfTextPdfPdfWriter_(ComItextpdfTextPdfPdfWriter *writer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfShading_throwColorSpaceError();

FOUNDATION_EXPORT void ComItextpdfTextPdfPdfShading_checkCompatibleColorsWithComItextpdfTextBaseColor_withComItextpdfTextBaseColor_(ComItextpdfTextBaseColor *c1, ComItextpdfTextBaseColor *c2);

FOUNDATION_EXPORT IOSFloatArray *ComItextpdfTextPdfPdfShading_getColorArrayWithComItextpdfTextBaseColor_(ComItextpdfTextBaseColor *color);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *ComItextpdfTextPdfPdfShading_type1WithComItextpdfTextPdfPdfWriter_withComItextpdfTextBaseColor_withFloatArray_withFloatArray_withComItextpdfTextPdfPdfFunction_(ComItextpdfTextPdfPdfWriter *writer, ComItextpdfTextBaseColor *colorSpace, IOSFloatArray *domain, IOSFloatArray *tMatrix, ComItextpdfTextPdfPdfFunction *function);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *ComItextpdfTextPdfPdfShading_type2WithComItextpdfTextPdfPdfWriter_withComItextpdfTextBaseColor_withFloatArray_withFloatArray_withComItextpdfTextPdfPdfFunction_withBooleanArray_(ComItextpdfTextPdfPdfWriter *writer, ComItextpdfTextBaseColor *colorSpace, IOSFloatArray *coords, IOSFloatArray *domain, ComItextpdfTextPdfPdfFunction *function, IOSBooleanArray *extend);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *ComItextpdfTextPdfPdfShading_type3WithComItextpdfTextPdfPdfWriter_withComItextpdfTextBaseColor_withFloatArray_withFloatArray_withComItextpdfTextPdfPdfFunction_withBooleanArray_(ComItextpdfTextPdfPdfWriter *writer, ComItextpdfTextBaseColor *colorSpace, IOSFloatArray *coords, IOSFloatArray *domain, ComItextpdfTextPdfPdfFunction *function, IOSBooleanArray *extend);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *ComItextpdfTextPdfPdfShading_simpleAxialWithComItextpdfTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComItextpdfTextBaseColor_withComItextpdfTextBaseColor_withBoolean_withBoolean_(ComItextpdfTextPdfPdfWriter *writer, jfloat x0, jfloat y0, jfloat x1, jfloat y1, ComItextpdfTextBaseColor *startColor, ComItextpdfTextBaseColor *endColor, jboolean extendStart, jboolean extendEnd);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *ComItextpdfTextPdfPdfShading_simpleAxialWithComItextpdfTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComItextpdfTextBaseColor_withComItextpdfTextBaseColor_(ComItextpdfTextPdfPdfWriter *writer, jfloat x0, jfloat y0, jfloat x1, jfloat y1, ComItextpdfTextBaseColor *startColor, ComItextpdfTextBaseColor *endColor);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *ComItextpdfTextPdfPdfShading_simpleRadialWithComItextpdfTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withComItextpdfTextBaseColor_withComItextpdfTextBaseColor_withBoolean_withBoolean_(ComItextpdfTextPdfPdfWriter *writer, jfloat x0, jfloat y0, jfloat r0, jfloat x1, jfloat y1, jfloat r1, ComItextpdfTextBaseColor *startColor, ComItextpdfTextBaseColor *endColor, jboolean extendStart, jboolean extendEnd);

FOUNDATION_EXPORT ComItextpdfTextPdfPdfShading *ComItextpdfTextPdfPdfShading_simpleRadialWithComItextpdfTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withComItextpdfTextBaseColor_withComItextpdfTextBaseColor_(ComItextpdfTextPdfPdfWriter *writer, jfloat x0, jfloat y0, jfloat r0, jfloat x1, jfloat y1, jfloat r1, ComItextpdfTextBaseColor *startColor, ComItextpdfTextBaseColor *endColor);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextPdfPdfShading)

#endif // _ComItextpdfTextPdfPdfShading_H_

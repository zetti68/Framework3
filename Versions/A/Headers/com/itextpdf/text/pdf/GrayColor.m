//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/GrayColor.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/pdf/GrayColor.java"

#include "com/itextpdf/text/pdf/ExtendedColor.h"
#include "com/itextpdf/text/pdf/GrayColor.h"
#include "java/lang/Float.h"

BOOL ComItextpdfTextPdfGrayColor_initialized = NO;


#line 51
@implementation ComItextpdfTextPdfGrayColor

ComItextpdfTextPdfGrayColor * ComItextpdfTextPdfGrayColor_GRAYBLACK_;
ComItextpdfTextPdfGrayColor * ComItextpdfTextPdfGrayColor_GRAYWHITE_;


#line 60
- (instancetype)initWithInt:(jint)intGray {
  return
#line 61
  [self initComItextpdfTextPdfGrayColorWithFloat:intGray / 255.0f];
}


#line 64
- (instancetype)initComItextpdfTextPdfGrayColorWithFloat:(jfloat)floatGray {
  if (self = [super initWithInt:ComItextpdfTextPdfExtendedColor_TYPE_GRAY withFloat:floatGray withFloat:floatGray withFloat:floatGray]) {
    
#line 66
    gray_ = [ComItextpdfTextPdfExtendedColor normalizeWithFloat:floatGray];
  }
  return self;
}

- (instancetype)initWithFloat:(jfloat)floatGray {
  return [self initComItextpdfTextPdfGrayColorWithFloat:
#line 64
floatGray];
}


#line 69
- (jfloat)getGray {
  
#line 70
  return gray_;
}

- (jboolean)isEqual:(id)obj {
  
#line 74
  return [obj isKindOfClass:[ComItextpdfTextPdfGrayColor class]] && ((ComItextpdfTextPdfGrayColor *) nil_chk(((ComItextpdfTextPdfGrayColor *) check_class_cast(obj, [ComItextpdfTextPdfGrayColor class]))))->gray_ == self->gray_;
}

- (NSUInteger)hash {
  
#line 78
  return [JavaLangFloat floatToIntBitsWithFloat:gray_];
}

- (void)copyAllFieldsTo:(ComItextpdfTextPdfGrayColor *)other {
  [super copyAllFieldsTo:other];
  other->gray_ = gray_;
}

+ (void)initialize {
  if (self == [ComItextpdfTextPdfGrayColor class]) {
    ComItextpdfTextPdfGrayColor_GRAYBLACK_ =
#line 57
    [[ComItextpdfTextPdfGrayColor alloc] initWithFloat:0.0f];
    ComItextpdfTextPdfGrayColor_GRAYWHITE_ =
#line 58
    [[ComItextpdfTextPdfGrayColor alloc] initWithFloat:1.0f];
    ComItextpdfTextPdfGrayColor_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "GrayColor", NULL, 0x1, NULL },
    { "initWithFloat:", "GrayColor", NULL, 0x1, NULL },
    { "getGray", NULL, "F", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = ComItextpdfTextPdfGrayColor_serialVersionUID },
    { "gray_", NULL, 0x2, "F", NULL,  },
    { "GRAYBLACK_", NULL, 0x19, "Lcom.itextpdf.text.pdf.GrayColor;", &ComItextpdfTextPdfGrayColor_GRAYBLACK_,  },
    { "GRAYWHITE_", NULL, 0x19, "Lcom.itextpdf.text.pdf.GrayColor;", &ComItextpdfTextPdfGrayColor_GRAYWHITE_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextPdfGrayColor = { "GrayColor", "com.itextpdf.text.pdf", NULL, 0x1, 5, methods, 4, fields, 0, NULL};
  return &_ComItextpdfTextPdfGrayColor;
}

@end

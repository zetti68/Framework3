//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/Document.java
//

#ifndef _ComItextpdfTextDocument_H_
#define _ComItextpdfTextDocument_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/text/DocListener.h"
#include "com/itextpdf/text/pdf/interfaces/IAccessibleElement.h"

@class ComItextpdfTextAccessibleElementId;
@class ComItextpdfTextPdfPdfName;
@class ComItextpdfTextPdfPdfObject;
@class ComItextpdfTextRectangle;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@protocol ComItextpdfTextElement;

@interface ComItextpdfTextDocument : NSObject < ComItextpdfTextDocListener, ComItextpdfTextPdfInterfacesIAccessibleElement > {
 @public
  JavaUtilArrayList *listeners_;
  jboolean open__;
  jboolean close__;
  ComItextpdfTextRectangle *pageSize_;
  jfloat marginLeft_;
  jfloat marginRight_;
  jfloat marginTop_;
  jfloat marginBottom_;
  jboolean marginMirroring_;
  jboolean marginMirroringTopBottom_;
  NSString *javaScript_onLoad_;
  NSString *javaScript_onUnLoad_;
  NSString *htmlStyleClass_;
  jint pageN_;
  jint chapternumber_;
  ComItextpdfTextPdfPdfName *role_;
  JavaUtilHashMap *accessibleAttributes_;
  ComItextpdfTextAccessibleElementId *id__;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)pageSize;

- (instancetype)initWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)pageSize
                                       withFloat:(jfloat)marginLeft
                                       withFloat:(jfloat)marginRight
                                       withFloat:(jfloat)marginTop
                                       withFloat:(jfloat)marginBottom;

- (jboolean)addWithComItextpdfTextElement:(id<ComItextpdfTextElement>)element;

- (jboolean)addAuthorWithNSString:(NSString *)author;

- (jboolean)addCreationDate;

- (jboolean)addCreatorWithNSString:(NSString *)creator;

- (void)addDocListenerWithComItextpdfTextDocListener:(id<ComItextpdfTextDocListener>)listener;

- (jboolean)addHeaderWithNSString:(NSString *)name
                     withNSString:(NSString *)content;

- (jboolean)addKeywordsWithNSString:(NSString *)keywords;

- (jboolean)addLanguageWithNSString:(NSString *)language;

- (jboolean)addProducer;

- (jboolean)addSubjectWithNSString:(NSString *)subject;

- (jboolean)addTitleWithNSString:(NSString *)title;

- (jfloat)bottom;

- (jfloat)bottomWithFloat:(jfloat)margin;

- (jfloat)bottomMargin;

- (void)close;

- (ComItextpdfTextPdfPdfObject *)getAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key;

- (JavaUtilHashMap *)getAccessibleAttributes;

- (NSString *)getHtmlStyleClass;

- (ComItextpdfTextAccessibleElementId *)getId;

- (NSString *)getJavaScript_onLoad;

- (NSString *)getJavaScript_onUnLoad;

- (jint)getPageNumber;

- (ComItextpdfTextRectangle *)getPageSize;

- (ComItextpdfTextPdfPdfName *)getRole;

- (jboolean)isInline;

- (jboolean)isMarginMirroring;

- (jboolean)isOpen;

- (jfloat)left;

- (jfloat)leftWithFloat:(jfloat)margin;

- (jfloat)leftMargin;

- (jboolean)newPage OBJC_METHOD_FAMILY_NONE;

- (void)open;

- (void)removeDocListenerWithComItextpdfTextDocListener:(id<ComItextpdfTextDocListener>)listener;

- (void)resetPageCount;

- (jfloat)right;

- (jfloat)rightWithFloat:(jfloat)margin;

- (jfloat)rightMargin;

- (void)setAccessibleAttributeWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)key
                            withComItextpdfTextPdfPdfObject:(ComItextpdfTextPdfPdfObject *)value;

- (void)setHtmlStyleClassWithNSString:(NSString *)htmlStyleClass;

- (void)setIdWithComItextpdfTextAccessibleElementId:(ComItextpdfTextAccessibleElementId *)id_;

- (void)setJavaScript_onLoadWithNSString:(NSString *)code;

- (void)setJavaScript_onUnLoadWithNSString:(NSString *)code;

- (jboolean)setMarginMirroringWithBoolean:(jboolean)marginMirroring;

- (jboolean)setMarginMirroringTopBottomWithBoolean:(jboolean)marginMirroringTopBottom;

- (jboolean)setMarginsWithFloat:(jfloat)marginLeft
                      withFloat:(jfloat)marginRight
                      withFloat:(jfloat)marginTop
                      withFloat:(jfloat)marginBottom;

- (void)setPageCountWithInt:(jint)pageN;

- (jboolean)setPageSizeWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)pageSize;

- (void)setRoleWithComItextpdfTextPdfPdfName:(ComItextpdfTextPdfPdfName *)role;

- (jfloat)top;

- (jfloat)topWithFloat:(jfloat)margin;

- (jfloat)topMargin;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfTextDocument)

J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, listeners_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, pageSize_, ComItextpdfTextRectangle *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, javaScript_onLoad_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, javaScript_onUnLoad_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, htmlStyleClass_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, role_, ComItextpdfTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, accessibleAttributes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComItextpdfTextDocument, id__, ComItextpdfTextAccessibleElementId *)

FOUNDATION_EXPORT jboolean ComItextpdfTextDocument_compress_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocument, compress_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(ComItextpdfTextDocument, compress_, jboolean)

FOUNDATION_EXPORT jboolean ComItextpdfTextDocument_plainRandomAccess_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocument, plainRandomAccess_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(ComItextpdfTextDocument, plainRandomAccess_, jboolean)

FOUNDATION_EXPORT jfloat ComItextpdfTextDocument_wmfFontCorrection_;
J2OBJC_STATIC_FIELD_GETTER(ComItextpdfTextDocument, wmfFontCorrection_, jfloat)
J2OBJC_STATIC_FIELD_REF_GETTER(ComItextpdfTextDocument, wmfFontCorrection_, jfloat)

FOUNDATION_EXPORT void ComItextpdfTextDocument_init(ComItextpdfTextDocument *self);

FOUNDATION_EXPORT ComItextpdfTextDocument *new_ComItextpdfTextDocument_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextDocument_initWithComItextpdfTextRectangle_(ComItextpdfTextDocument *self, ComItextpdfTextRectangle *pageSize);

FOUNDATION_EXPORT ComItextpdfTextDocument *new_ComItextpdfTextDocument_initWithComItextpdfTextRectangle_(ComItextpdfTextRectangle *pageSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfTextDocument_initWithComItextpdfTextRectangle_withFloat_withFloat_withFloat_withFloat_(ComItextpdfTextDocument *self, ComItextpdfTextRectangle *pageSize, jfloat marginLeft, jfloat marginRight, jfloat marginTop, jfloat marginBottom);

FOUNDATION_EXPORT ComItextpdfTextDocument *new_ComItextpdfTextDocument_initWithComItextpdfTextRectangle_withFloat_withFloat_withFloat_withFloat_(ComItextpdfTextRectangle *pageSize, jfloat marginLeft, jfloat marginRight, jfloat marginTop, jfloat marginBottom) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfTextDocument)

#endif // _ComItextpdfTextDocument_H_

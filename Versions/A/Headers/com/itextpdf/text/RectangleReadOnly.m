//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/RectangleReadOnly.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/RectangleReadOnly.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/Rectangle.h"
#include "com/itextpdf/text/RectangleReadOnly.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/UnsupportedOperationException.h"


#line 63
@implementation ComItextpdfTextRectangleReadOnly


#line 75
- (instancetype)initWithFloat:(jfloat)llx
                    withFloat:(jfloat)lly
                    withFloat:(jfloat)urx
                    withFloat:(jfloat)ury {
  return
#line 76
  [super initWithFloat:llx withFloat:lly withFloat:urx withFloat:ury];
}


#line 89
- (instancetype)initWithFloat:(jfloat)llx
                    withFloat:(jfloat)lly
                    withFloat:(jfloat)urx
                    withFloat:(jfloat)ury
                      withInt:(jint)rotation {
  if (self =
#line 90
  [super initWithFloat:llx withFloat:lly withFloat:urx withFloat:ury]) {
    
#line 91
    [super setRotationWithInt:rotation];
  }
  return self;
}


#line 101
- (instancetype)initWithFloat:(jfloat)urx
                    withFloat:(jfloat)ury {
  return
#line 102
  [super initWithFloat:0 withFloat:0 withFloat:urx withFloat:ury];
}


#line 114
- (instancetype)initWithFloat:(jfloat)urx
                    withFloat:(jfloat)ury
                      withInt:(jint)rotation {
  if (self =
#line 115
  [super initWithFloat:0 withFloat:0 withFloat:urx withFloat:ury]) {
    
#line 116
    [super setRotationWithInt:rotation];
  }
  return self;
}


#line 124
- (instancetype)initWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)rect {
  if (self =
#line 125
  [super initWithFloat:((ComItextpdfTextRectangle *) nil_chk(rect))->llx_ withFloat:rect->lly_ withFloat:rect->urx_ withFloat:rect->ury_]) {
    [super cloneNonPositionParametersWithComItextpdfTextRectangle:rect];
  }
  return self;
}


#line 132
- (void)throwReadOnlyError {
  @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"rectanglereadonly.this.rectangle.is.read.only" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
}


#line 142
- (void)setRotationWithInt:(jint)rotation {
  
#line 143
  [self throwReadOnlyError];
}


#line 154
- (void)setLeftWithFloat:(jfloat)llx {
  
#line 155
  [self throwReadOnlyError];
}


#line 165
- (void)setRightWithFloat:(jfloat)urx {
  
#line 166
  [self throwReadOnlyError];
}


#line 175
- (void)setTopWithFloat:(jfloat)ury {
  
#line 176
  [self throwReadOnlyError];
}


#line 185
- (void)setBottomWithFloat:(jfloat)lly {
  
#line 186
  [self throwReadOnlyError];
}


#line 194
- (void)normalize {
  
#line 195
  [self throwReadOnlyError];
}


#line 206
- (void)setBackgroundColorWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)value {
  
#line 207
  [self throwReadOnlyError];
}


#line 216
- (void)setGrayFillWithFloat:(jfloat)value {
  
#line 217
  [self throwReadOnlyError];
}


#line 232
- (void)setBorderWithInt:(jint)border {
  
#line 233
  [self throwReadOnlyError];
}


#line 242
- (void)setUseVariableBordersWithBoolean:(jboolean)useVariableBorders {
  
#line 243
  [self throwReadOnlyError];
}


#line 253
- (void)enableBorderSideWithInt:(jint)side {
  
#line 254
  [self throwReadOnlyError];
}


#line 264
- (void)disableBorderSideWithInt:(jint)side {
  
#line 265
  [self throwReadOnlyError];
}


#line 277
- (void)setBorderWidthWithFloat:(jfloat)borderWidth {
  
#line 278
  [self throwReadOnlyError];
}


#line 287
- (void)setBorderWidthLeftWithFloat:(jfloat)borderWidthLeft {
  
#line 288
  [self throwReadOnlyError];
}


#line 297
- (void)setBorderWidthRightWithFloat:(jfloat)borderWidthRight {
  
#line 298
  [self throwReadOnlyError];
}


#line 307
- (void)setBorderWidthTopWithFloat:(jfloat)borderWidthTop {
  
#line 308
  [self throwReadOnlyError];
}


#line 317
- (void)setBorderWidthBottomWithFloat:(jfloat)borderWidthBottom {
  
#line 318
  [self throwReadOnlyError];
}


#line 330
- (void)setBorderColorWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)borderColor {
  
#line 331
  [self throwReadOnlyError];
}


#line 340
- (void)setBorderColorLeftWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)borderColorLeft {
  
#line 341
  [self throwReadOnlyError];
}


#line 350
- (void)setBorderColorRightWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)borderColorRight {
  
#line 351
  [self throwReadOnlyError];
}


#line 360
- (void)setBorderColorTopWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)borderColorTop {
  
#line 361
  [self throwReadOnlyError];
}


#line 370
- (void)setBorderColorBottomWithComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)borderColorBottom {
  
#line 371
  [self throwReadOnlyError];
}


#line 383
- (void)cloneNonPositionParametersWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)rect {
  
#line 384
  [self throwReadOnlyError];
}


#line 394
- (void)softCloneNonPositionParametersWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)rect {
  
#line 395
  [self throwReadOnlyError];
}

- (NSString *)description {
  
#line 404
  JavaLangStringBuffer *buf = [[JavaLangStringBuffer alloc] initWithNSString:@"RectangleReadOnly: "];
  (void) [buf appendWithFloat:[self getWidth]];
  (void) [buf appendWithChar:'x'];
  (void) [buf appendWithFloat:[self getHeight]];
  (void) [buf appendWithNSString:@" (rot: "];
  (void) [buf appendWithInt:rotation_];
  (void) [buf appendWithNSString:@" degrees)"];
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFloat:withFloat:withFloat:withFloat:", "RectangleReadOnly", NULL, 0x1, NULL },
    { "initWithFloat:withFloat:withFloat:withFloat:withInt:", "RectangleReadOnly", NULL, 0x1, NULL },
    { "initWithFloat:withFloat:", "RectangleReadOnly", NULL, 0x1, NULL },
    { "initWithFloat:withFloat:withInt:", "RectangleReadOnly", NULL, 0x1, NULL },
    { "initWithComItextpdfTextRectangle:", "RectangleReadOnly", NULL, 0x1, NULL },
    { "throwReadOnlyError", NULL, "V", 0x2, NULL },
    { "setRotationWithInt:", "setRotation", "V", 0x1, NULL },
    { "setLeftWithFloat:", "setLeft", "V", 0x1, NULL },
    { "setRightWithFloat:", "setRight", "V", 0x1, NULL },
    { "setTopWithFloat:", "setTop", "V", 0x1, NULL },
    { "setBottomWithFloat:", "setBottom", "V", 0x1, NULL },
    { "normalize", NULL, "V", 0x1, NULL },
    { "setBackgroundColorWithComItextpdfTextBaseColor:", "setBackgroundColor", "V", 0x1, NULL },
    { "setGrayFillWithFloat:", "setGrayFill", "V", 0x1, NULL },
    { "setBorderWithInt:", "setBorder", "V", 0x1, NULL },
    { "setUseVariableBordersWithBoolean:", "setUseVariableBorders", "V", 0x1, NULL },
    { "enableBorderSideWithInt:", "enableBorderSide", "V", 0x1, NULL },
    { "disableBorderSideWithInt:", "disableBorderSide", "V", 0x1, NULL },
    { "setBorderWidthWithFloat:", "setBorderWidth", "V", 0x1, NULL },
    { "setBorderWidthLeftWithFloat:", "setBorderWidthLeft", "V", 0x1, NULL },
    { "setBorderWidthRightWithFloat:", "setBorderWidthRight", "V", 0x1, NULL },
    { "setBorderWidthTopWithFloat:", "setBorderWidthTop", "V", 0x1, NULL },
    { "setBorderWidthBottomWithFloat:", "setBorderWidthBottom", "V", 0x1, NULL },
    { "setBorderColorWithComItextpdfTextBaseColor:", "setBorderColor", "V", 0x1, NULL },
    { "setBorderColorLeftWithComItextpdfTextBaseColor:", "setBorderColorLeft", "V", 0x1, NULL },
    { "setBorderColorRightWithComItextpdfTextBaseColor:", "setBorderColorRight", "V", 0x1, NULL },
    { "setBorderColorTopWithComItextpdfTextBaseColor:", "setBorderColorTop", "V", 0x1, NULL },
    { "setBorderColorBottomWithComItextpdfTextBaseColor:", "setBorderColorBottom", "V", 0x1, NULL },
    { "cloneNonPositionParametersWithComItextpdfTextRectangle:", "cloneNonPositionParameters", "V", 0x1, NULL },
    { "softCloneNonPositionParametersWithComItextpdfTextRectangle:", "softCloneNonPositionParameters", "V", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComItextpdfTextRectangleReadOnly = { "RectangleReadOnly", "com.itextpdf.text", NULL, 0x1, 31, methods, 0, NULL, 0, NULL};
  return &_ComItextpdfTextRectangleReadOnly;
}

@end

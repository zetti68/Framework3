//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/FontFactory.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/FontFactory.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/text/BaseColor.h"
#include "com/itextpdf/text/Font.h"
#include "com/itextpdf/text/FontFactory.h"
#include "com/itextpdf/text/FontFactoryImp.h"
#include "com/itextpdf/text/error_messages/MessageLocalization.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Set.h"

BOOL ComItextpdfTextFontFactory_initialized = NO;


#line 60
@implementation ComItextpdfTextFontFactory

NSString * ComItextpdfTextFontFactory_COURIER_ = @"Courier";
NSString * ComItextpdfTextFontFactory_COURIER_BOLD_ = @"Courier-Bold";
NSString * ComItextpdfTextFontFactory_COURIER_OBLIQUE_ = @"Courier-Oblique";
NSString * ComItextpdfTextFontFactory_COURIER_BOLDOBLIQUE_ = @"Courier-BoldOblique";
NSString * ComItextpdfTextFontFactory_HELVETICA_ = @"Helvetica";
NSString * ComItextpdfTextFontFactory_HELVETICA_BOLD_ = @"Helvetica-Bold";
NSString * ComItextpdfTextFontFactory_HELVETICA_OBLIQUE_ = @"Helvetica-Oblique";
NSString * ComItextpdfTextFontFactory_HELVETICA_BOLDOBLIQUE_ = @"Helvetica-BoldOblique";
NSString * ComItextpdfTextFontFactory_SYMBOL_ = @"Symbol";
NSString * ComItextpdfTextFontFactory_TIMES_ = 
#line 90
@"Times";
NSString * ComItextpdfTextFontFactory_TIMES_ROMAN_ = @"Times-Roman";
NSString * ComItextpdfTextFontFactory_TIMES_BOLD_ = @"Times-Bold";
NSString * ComItextpdfTextFontFactory_TIMES_ITALIC_ = @"Times-Italic";
NSString * ComItextpdfTextFontFactory_TIMES_BOLDITALIC_ = @"Times-BoldItalic";
NSString * ComItextpdfTextFontFactory_ZAPFDINGBATS_ = @"ZapfDingbats";
ComItextpdfTextFontFactoryImp * ComItextpdfTextFontFactory_fontImp_;
NSString * ComItextpdfTextFontFactory_defaultEncoding_ = @"Cp1252";
jboolean ComItextpdfTextFontFactory_defaultEmbedding_ = NO;


#line 116
- (instancetype)init {
  return [super init];
}


#line 131
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                 withBoolean:(jboolean)embedded
                                   withFloat:(jfloat)size
                                     withInt:(jint)style
                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 132
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) getFontWithNSString:fontname withNSString:encoding withBoolean:embedded withFloat:size withInt:style withComItextpdfTextBaseColor:color];
}


#line 149
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                 withBoolean:(jboolean)embedded
                                   withFloat:(jfloat)size
                                     withInt:(jint)style
                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color
                                 withBoolean:(jboolean)cached {
  
#line 150
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) getFontWithNSString:fontname withNSString:encoding withBoolean:embedded withFloat:size withInt:style withComItextpdfTextBaseColor:color withBoolean:cached];
}


#line 164
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                 withBoolean:(jboolean)embedded
                                   withFloat:(jfloat)size
                                     withInt:(jint)style {
  
#line 165
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:encoding withBoolean:embedded withFloat:size withInt:style withComItextpdfTextBaseColor:nil];
}


#line 178
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                 withBoolean:(jboolean)embedded
                                   withFloat:(jfloat)size {
  
#line 179
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:encoding withBoolean:embedded withFloat:size withInt:ComItextpdfTextFont_UNDEFINED withComItextpdfTextBaseColor:nil];
}


#line 191
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                 withBoolean:(jboolean)embedded {
  
#line 192
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:encoding withBoolean:embedded withFloat:ComItextpdfTextFont_UNDEFINED withInt:ComItextpdfTextFont_UNDEFINED withComItextpdfTextBaseColor:nil];
}


#line 206
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                   withFloat:(jfloat)size
                                     withInt:(jint)style
                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 207
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:encoding withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:size withInt:style withComItextpdfTextBaseColor:color];
}


#line 220
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                   withFloat:(jfloat)size
                                     withInt:(jint)style {
  
#line 221
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:encoding withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:size withInt:style withComItextpdfTextBaseColor:nil];
}


#line 233
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding
                                   withFloat:(jfloat)size {
  
#line 234
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:encoding withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:size withInt:ComItextpdfTextFont_UNDEFINED withComItextpdfTextBaseColor:nil];
}


#line 245
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                withNSString:(NSString *)encoding {
  
#line 246
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:encoding withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:ComItextpdfTextFont_UNDEFINED withInt:ComItextpdfTextFont_UNDEFINED withComItextpdfTextBaseColor:nil];
}


#line 259
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                   withFloat:(jfloat)size
                                     withInt:(jint)style
                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 260
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:ComItextpdfTextFontFactory_defaultEncoding_ withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:size withInt:style withComItextpdfTextBaseColor:color];
}


#line 273
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                   withFloat:(jfloat)size
                withComItextpdfTextBaseColor:(ComItextpdfTextBaseColor *)color {
  
#line 274
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:ComItextpdfTextFontFactory_defaultEncoding_ withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:size withInt:ComItextpdfTextFont_UNDEFINED withComItextpdfTextBaseColor:color];
}


#line 286
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                   withFloat:(jfloat)size
                                     withInt:(jint)style {
  
#line 287
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:ComItextpdfTextFontFactory_defaultEncoding_ withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:size withInt:style withComItextpdfTextBaseColor:nil];
}


#line 298
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname
                                   withFloat:(jfloat)size {
  
#line 299
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:ComItextpdfTextFontFactory_defaultEncoding_ withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:size withInt:ComItextpdfTextFont_UNDEFINED withComItextpdfTextBaseColor:nil];
}


#line 309
+ (ComItextpdfTextFont *)getFontWithNSString:(NSString *)fontname {
  
#line 310
  return [ComItextpdfTextFontFactory getFontWithNSString:fontname withNSString:ComItextpdfTextFontFactory_defaultEncoding_ withBoolean:ComItextpdfTextFontFactory_defaultEmbedding_ withFloat:ComItextpdfTextFont_UNDEFINED withInt:ComItextpdfTextFont_UNDEFINED withComItextpdfTextBaseColor:nil];
}


#line 319
+ (void)registerFamilyWithNSString:(NSString *)familyName
                      withNSString:(NSString *)fullName
                      withNSString:(NSString *)path {
  
#line 320
  [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) registerFamilyWithNSString:familyName withNSString:fullName withNSString:path];
}


#line 329
+ (void)register__WithNSString:(NSString *)path {
  
#line 330
  [ComItextpdfTextFontFactory register__WithNSString:path withNSString:nil];
}


#line 340
+ (void)register__WithNSString:(NSString *)path
                  withNSString:(NSString *)alias {
  
#line 341
  [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) register__WithNSString:path withNSString:alias];
}


#line 348
+ (jint)registerDirectoryWithNSString:(NSString *)dir {
  
#line 349
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) registerDirectoryWithNSString:dir];
}


#line 359
+ (jint)registerDirectoryWithNSString:(NSString *)dir
                          withBoolean:(jboolean)scanSubdirectories {
  
#line 360
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) registerDirectoryWithNSString:dir withBoolean:scanSubdirectories];
}


#line 367
+ (jint)registerDirectories {
  
#line 368
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) registerDirectories];
}


#line 376
+ (id<JavaUtilSet>)getRegisteredFonts {
  
#line 377
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) getRegisteredFonts];
}


#line 385
+ (id<JavaUtilSet>)getRegisteredFamilies {
  
#line 386
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) getRegisteredFamilies];
}


#line 395
+ (jboolean)containsWithNSString:(NSString *)fontname {
  
#line 396
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) isRegisteredWithNSString:fontname];
}


#line 406
+ (jboolean)isRegisteredWithNSString:(NSString *)fontname {
  
#line 407
  return [((ComItextpdfTextFontFactoryImp *) nil_chk(ComItextpdfTextFontFactory_fontImp_)) isRegisteredWithNSString:fontname];
}


#line 414
+ (ComItextpdfTextFontFactoryImp *)getFontImp {
  
#line 415
  return ComItextpdfTextFontFactory_fontImp_;
}


#line 422
+ (void)setFontImpWithComItextpdfTextFontFactoryImp:(ComItextpdfTextFontFactoryImp *)fontImp {
  
#line 423
  if (fontImp == nil)
#line 424
  @throw [[JavaLangNullPointerException alloc] initWithNSString:[ComItextpdfTextError_messagesMessageLocalization getComposedMessageWithNSString:@"fontfactoryimp.cannot.be.null" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]]];
  ComItextpdfTextFontFactory_fontImp_ = fontImp;
}

+ (void)initialize {
  if (self == [ComItextpdfTextFontFactory class]) {
    ComItextpdfTextFontFactory_fontImp_ =
#line 107
    [[ComItextpdfTextFontFactoryImp alloc] init];
    ComItextpdfTextFontFactory_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FontFactory", NULL, 0x2, NULL },
    { "getFontWithNSString:withNSString:withBoolean:withFloat:withInt:withComItextpdfTextBaseColor:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:withBoolean:withFloat:withInt:withComItextpdfTextBaseColor:withBoolean:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:withBoolean:withFloat:withInt:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:withBoolean:withFloat:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:withBoolean:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:withFloat:withInt:withComItextpdfTextBaseColor:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:withFloat:withInt:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:withFloat:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withNSString:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withFloat:withInt:withComItextpdfTextBaseColor:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withFloat:withComItextpdfTextBaseColor:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withFloat:withInt:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:withFloat:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "getFontWithNSString:", "getFont", "Lcom.itextpdf.text.Font;", 0x9, NULL },
    { "registerFamilyWithNSString:withNSString:withNSString:", "registerFamily", "V", 0x9, NULL },
    { "register__WithNSString:", "register", "V", 0x9, NULL },
    { "register__WithNSString:withNSString:", "register", "V", 0x9, NULL },
    { "registerDirectoryWithNSString:", "registerDirectory", "I", 0x9, NULL },
    { "registerDirectoryWithNSString:withBoolean:", "registerDirectory", "I", 0x9, NULL },
    { "registerDirectories", NULL, "I", 0x9, NULL },
    { "getRegisteredFonts", NULL, "Ljava.util.Set;", 0x9, NULL },
    { "getRegisteredFamilies", NULL, "Ljava.util.Set;", 0x9, NULL },
    { "containsWithNSString:", "contains", "Z", 0x9, NULL },
    { "isRegisteredWithNSString:", "isRegistered", "Z", 0x9, NULL },
    { "getFontImp", NULL, "Lcom.itextpdf.text.FontFactoryImp;", 0x9, NULL },
    { "setFontImpWithComItextpdfTextFontFactoryImp:", "setFontImp", "V", 0x9, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "COURIER_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_COURIER_,  },
    { "COURIER_BOLD_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_COURIER_BOLD_,  },
    { "COURIER_OBLIQUE_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_COURIER_OBLIQUE_,  },
    { "COURIER_BOLDOBLIQUE_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_COURIER_BOLDOBLIQUE_,  },
    { "HELVETICA_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_HELVETICA_,  },
    { "HELVETICA_BOLD_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_HELVETICA_BOLD_,  },
    { "HELVETICA_OBLIQUE_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_HELVETICA_OBLIQUE_,  },
    { "HELVETICA_BOLDOBLIQUE_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_HELVETICA_BOLDOBLIQUE_,  },
    { "SYMBOL_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_SYMBOL_,  },
    { "TIMES_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_TIMES_,  },
    { "TIMES_ROMAN_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_TIMES_ROMAN_,  },
    { "TIMES_BOLD_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_TIMES_BOLD_,  },
    { "TIMES_ITALIC_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_TIMES_ITALIC_,  },
    { "TIMES_BOLDITALIC_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_TIMES_BOLDITALIC_,  },
    { "ZAPFDINGBATS_", NULL, 0x19, "Ljava.lang.String;", &ComItextpdfTextFontFactory_ZAPFDINGBATS_,  },
    { "fontImp_", NULL, 0xa, "Lcom.itextpdf.text.FontFactoryImp;", &ComItextpdfTextFontFactory_fontImp_,  },
    { "defaultEncoding_", NULL, 0x9, "Ljava.lang.String;", &ComItextpdfTextFontFactory_defaultEncoding_,  },
    { "defaultEmbedding_", NULL, 0x9, "Z", &ComItextpdfTextFontFactory_defaultEmbedding_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextFontFactory = { "FontFactory", "com.itextpdf.text", NULL, 0x11, 27, methods, 18, fields, 0, NULL};
  return &_ComItextpdfTextFontFactory;
}

@end

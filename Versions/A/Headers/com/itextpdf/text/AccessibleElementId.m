//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/AccessibleElementId.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/text/AccessibleElementId.java"

#include "com/itextpdf/text/AccessibleElementId.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Integer.h"


#line 47
@implementation ComItextpdfTextAccessibleElementId

jint ComItextpdfTextAccessibleElementId_id_counter_ = 0;


#line 52
- (instancetype)init {
  if (self = [super init]) {
    id__ = 0;
    
#line 53
    id__ = ++ComItextpdfTextAccessibleElementId_id_counter_;
  }
  return self;
}

- (NSString *)description {
  
#line 57
  return [JavaLangInteger toStringWithInt:id__];
}

- (NSUInteger)hash {
  
#line 61
  return id__;
}

- (jboolean)isEqual:(id)o {
  
#line 65
  return ([o isKindOfClass:[ComItextpdfTextAccessibleElementId class]]) && (id__ == ((ComItextpdfTextAccessibleElementId *) nil_chk(((ComItextpdfTextAccessibleElementId *) check_class_cast(o, [ComItextpdfTextAccessibleElementId class]))))->id__);
}


#line 68
- (jint)compareToWithId:(ComItextpdfTextAccessibleElementId *)elementId {
  if (elementId != nil && ![elementId isKindOfClass:[ComItextpdfTextAccessibleElementId class]]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  
#line 69
  if (id__ < ((ComItextpdfTextAccessibleElementId *) nil_chk(elementId))->id__)
#line 70
  return -1;
  else if (id__ > elementId->id__)
#line 72
  return 1;
  else
#line 74
  return 0;
}

- (void)copyAllFieldsTo:(ComItextpdfTextAccessibleElementId *)other {
  [super copyAllFieldsTo:other];
  other->id__ = id__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AccessibleElementId", NULL, 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "compareToWithComItextpdfTextAccessibleElementId:", "compareTo", "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "id_counter_", NULL, 0xa, "I", &ComItextpdfTextAccessibleElementId_id_counter_,  },
    { "id__", "id", 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfTextAccessibleElementId = { "AccessibleElementId", "com.itextpdf.text", NULL, 0x1, 5, methods, 2, fields, 0, NULL};
  return &_ComItextpdfTextAccessibleElementId;
}

@end

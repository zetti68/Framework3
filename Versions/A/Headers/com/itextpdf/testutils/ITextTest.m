//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/testutils/ITextTest.java
//
//  Created by Zetzsche on 30.09.14.
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/testutils/ITextTest.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/testutils/ITextTest.h"
#include "com/itextpdf/text/log/Logger.h"
#include "com/itextpdf/text/log/LoggerFactory.h"
#include "java/io/File.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"

BOOL ComItextpdfTestutilsITextTest_initialized = NO;


#line 53
@implementation ComItextpdfTestutilsITextTest

id<ComItextpdfTextLogLogger> ComItextpdfTestutilsITextTest_LOGGER_;

- (void)runTest {
  
#line 58
  [((id<ComItextpdfTextLogLogger>) nil_chk(ComItextpdfTestutilsITextTest_LOGGER_)) infoWithNSString:@"Starting test."];
  NSString *outPdf = [self getOutPdf];
  if (outPdf == nil || ((int) [outPdf length]) == 0)
#line 62
  @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"outPdf cannot be empty!"];
  [self makePdfWithNSString:outPdf];
  [self assertPdfWithNSString:outPdf];
  [self comparePdfWithNSString:outPdf withNSString:[self getCmpPdf]];
  [ComItextpdfTestutilsITextTest_LOGGER_ infoWithNSString:@"Test complete."];
}


#line 69
- (void)makePdfWithNSString:(NSString *)outPdf {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 76
- (NSString *)getOutPdf {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 78
- (void)assertPdfWithNSString:(NSString *)outPdf {
}


#line 82
- (void)comparePdfWithNSString:(NSString *)outPdf
                  withNSString:(NSString *)cmpPdf {
}


#line 91
- (NSString *)getCmpPdf {
  
#line 92
  return @"";
}


#line 95
- (void)deleteDirectoryWithJavaIoFile:(JavaIoFile *)path {
  
#line 96
  if (path == nil)
#line 97
  return;
  if ([((JavaIoFile *) nil_chk(path)) exists]) {
    {
      IOSObjectArray *a__ =
#line 99
      [path listFiles];
      JavaIoFile * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaIoFile * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaIoFile *f = (*b__++);
        
#line 100
        if ([((JavaIoFile *) nil_chk(f)) isDirectory]) {
          [self deleteDirectoryWithJavaIoFile:f];
          [f delete__];
        }
        else {
          
#line 104
          [f delete__];
        }
      }
    }
    
#line 107
    [path delete__];
  }
}


#line 111
- (void)deleteFilesWithJavaIoFile:(JavaIoFile *)path {
  
#line 112
  if (path != nil && [path exists]) {
    {
      IOSObjectArray *a__ =
#line 113
      [path listFiles];
      JavaIoFile * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaIoFile * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaIoFile *f = (*b__++);
        
#line 114
        [((JavaIoFile *) nil_chk(f)) delete__];
      }
    }
  }
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComItextpdfTestutilsITextTest class]) {
    ComItextpdfTestutilsITextTest_LOGGER_ =
#line 55
    [ComItextpdfTextLogLoggerFactory getLoggerWithNSString:[[IOSClass classWithClass:[ComItextpdfTestutilsITextTest class]] getName]];
    ComItextpdfTestutilsITextTest_initialized = YES;
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "runTest", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "makePdfWithNSString:", "makePdf", "V", 0x404, "Ljava.lang.Exception;" },
    { "getOutPdf", NULL, "Ljava.lang.String;", 0x404, NULL },
    { "assertPdfWithNSString:", "assertPdf", "V", 0x4, "Ljava.lang.Exception;" },
    { "comparePdfWithNSString:withNSString:", "comparePdf", "V", 0x4, "Ljava.lang.Exception;" },
    { "getCmpPdf", NULL, "Ljava.lang.String;", 0x4, NULL },
    { "deleteDirectoryWithJavaIoFile:", "deleteDirectory", "V", 0x4, NULL },
    { "deleteFilesWithJavaIoFile:", "deleteFiles", "V", 0x4, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "LOGGER_", NULL, 0x1a, "Lcom.itextpdf.text.log.Logger;", &ComItextpdfTestutilsITextTest_LOGGER_,  },
  };
  static J2ObjcClassInfo _ComItextpdfTestutilsITextTest = { "ITextTest", "com.itextpdf.testutils", NULL, 0x401, 9, methods, 1, fields, 0, NULL};
  return &_ComItextpdfTestutilsITextTest;
}

@end

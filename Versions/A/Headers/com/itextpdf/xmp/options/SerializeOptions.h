//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/options/SerializeOptions.java
//

#ifndef _ComItextpdfXmpOptionsSerializeOptions_H_
#define _ComItextpdfXmpOptionsSerializeOptions_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/xmp/options/Options.h"

#define ComItextpdfXmpOptionsSerializeOptions_OMIT_PACKET_WRAPPER 16
#define ComItextpdfXmpOptionsSerializeOptions_READONLY_PACKET 32
#define ComItextpdfXmpOptionsSerializeOptions_USE_COMPACT_FORMAT 64
#define ComItextpdfXmpOptionsSerializeOptions_USE_CANONICAL_FORMAT 128
#define ComItextpdfXmpOptionsSerializeOptions_INCLUDE_THUMBNAIL_PAD 256
#define ComItextpdfXmpOptionsSerializeOptions_EXACT_PACKET_LENGTH 512
#define ComItextpdfXmpOptionsSerializeOptions_OMIT_XMPMETA_ELEMENT 4096
#define ComItextpdfXmpOptionsSerializeOptions_SORT 8192
#define ComItextpdfXmpOptionsSerializeOptions_ENCODE_UTF8 0
#define ComItextpdfXmpOptionsSerializeOptions_ENCODE_UTF16BE 2
#define ComItextpdfXmpOptionsSerializeOptions_ENCODE_UTF16LE 3

@interface ComItextpdfXmpOptionsSerializeOptions : ComItextpdfXmpOptionsOptions

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)options;

- (id)clone;

- (jint)getBaseIndent;

- (jboolean)getEncodeUTF16BE;

- (jboolean)getEncodeUTF16LE;

- (NSString *)getEncoding;

- (jboolean)getExactPacketLength;

- (jboolean)getIncludeThumbnailPad;

- (NSString *)getIndent;

- (NSString *)getNewline;

- (jboolean)getOmitPacketWrapper;

- (jboolean)getOmitVersionAttribute;

- (jboolean)getOmitXmpMetaElement;

- (jint)getPadding;

- (jboolean)getReadOnlyPacket;

- (jboolean)getSort;

- (jboolean)getUseCanonicalFormat;

- (jboolean)getUseCompactFormat;

- (ComItextpdfXmpOptionsSerializeOptions *)setBaseIndentWithInt:(jint)baseIndent;

- (ComItextpdfXmpOptionsSerializeOptions *)setEncodeUTF16BEWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setEncodeUTF16LEWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setExactPacketLengthWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setIncludeThumbnailPadWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setIndentWithNSString:(NSString *)indent;

- (ComItextpdfXmpOptionsSerializeOptions *)setNewlineWithNSString:(NSString *)newline;

- (ComItextpdfXmpOptionsSerializeOptions *)setOmitPacketWrapperWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setOmitXmpMetaElementWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setPaddingWithInt:(jint)padding;

- (ComItextpdfXmpOptionsSerializeOptions *)setReadOnlyPacketWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setSortWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setUseCanonicalFormatWithBoolean:(jboolean)value;

- (ComItextpdfXmpOptionsSerializeOptions *)setUseCompactFormatWithBoolean:(jboolean)value;

#pragma mark Protected

- (NSString *)defineOptionNameWithInt:(jint)option;

- (jint)getValidOptions;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfXmpOptionsSerializeOptions)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, OMIT_PACKET_WRAPPER, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, READONLY_PACKET, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, USE_COMPACT_FORMAT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, USE_CANONICAL_FORMAT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, INCLUDE_THUMBNAIL_PAD, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, EXACT_PACKET_LENGTH, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, OMIT_XMPMETA_ELEMENT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, SORT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, ENCODE_UTF8, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, ENCODE_UTF16BE, jint)

J2OBJC_STATIC_FIELD_GETTER(ComItextpdfXmpOptionsSerializeOptions, ENCODE_UTF16LE, jint)

FOUNDATION_EXPORT void ComItextpdfXmpOptionsSerializeOptions_init(ComItextpdfXmpOptionsSerializeOptions *self);

FOUNDATION_EXPORT ComItextpdfXmpOptionsSerializeOptions *new_ComItextpdfXmpOptionsSerializeOptions_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfXmpOptionsSerializeOptions_initWithInt_(ComItextpdfXmpOptionsSerializeOptions *self, jint options);

FOUNDATION_EXPORT ComItextpdfXmpOptionsSerializeOptions *new_ComItextpdfXmpOptionsSerializeOptions_initWithInt_(jint options) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfXmpOptionsSerializeOptions)

#endif // _ComItextpdfXmpOptionsSerializeOptions_H_

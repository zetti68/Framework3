//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/impl/XMPNode.java
//

#ifndef _ComItextpdfXmpImplXMPNode_H_
#define _ComItextpdfXmpImplXMPNode_H_

@class ComItextpdfXmpOptionsPropertyOptions;
@class JavaLangStringBuffer;
@protocol JavaUtilList;

#import "JreEmulation.h"
#include "java/lang/Comparable.h"
#include "java/util/Iterator.h"

@interface ComItextpdfXmpImplXMPNode : NSObject < JavaLangComparable > {
 @public
  NSString *name_;
  NSString *value_;
  ComItextpdfXmpImplXMPNode *parent_;
  id<JavaUtilList> children_;
  id<JavaUtilList> qualifier_;
  ComItextpdfXmpOptionsPropertyOptions *options_;
  jboolean implicit_;
  jboolean hasAliases_;
  jboolean alias_;
  jboolean hasValueChild_;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value
withComItextpdfXmpOptionsPropertyOptions:(ComItextpdfXmpOptionsPropertyOptions *)options;

- (instancetype)initWithNSString:(NSString *)name
withComItextpdfXmpOptionsPropertyOptions:(ComItextpdfXmpOptionsPropertyOptions *)options;

- (void)clear;

- (ComItextpdfXmpImplXMPNode *)getParent;

- (ComItextpdfXmpImplXMPNode *)getChildWithInt:(jint)index;

- (void)addChildWithComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)node;

- (void)addChildWithInt:(jint)index
withComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)node;

- (void)replaceChildWithInt:(jint)index
withComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)node;

- (void)removeChildWithInt:(jint)itemIndex;

- (void)removeChildWithComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)node;

- (void)cleanupChildren;

- (void)removeChildren;

- (jint)getChildrenLength;

- (ComItextpdfXmpImplXMPNode *)findChildByNameWithNSString:(NSString *)expr;

- (ComItextpdfXmpImplXMPNode *)getQualifierWithInt:(jint)index;

- (jint)getQualifierLength;

- (void)addQualifierWithComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)qualNode;

- (void)removeQualifierWithComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)qualNode;

- (void)removeQualifiers;

- (ComItextpdfXmpImplXMPNode *)findQualifierByNameWithNSString:(NSString *)expr;

- (jboolean)hasChildren;

- (id<JavaUtilIterator>)iterateChildren;

- (jboolean)hasQualifier;

- (id<JavaUtilIterator>)iterateQualifier;

- (id)clone;

- (void)cloneSubtreeWithComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)destination;

- (NSString *)dumpNodeWithBoolean:(jboolean)recursive;

- (jint)compareToWithId:(id)xmpNode;

- (NSString *)getName;

- (void)setNameWithNSString:(NSString *)name;

- (NSString *)getValue;

- (void)setValueWithNSString:(NSString *)value;

- (ComItextpdfXmpOptionsPropertyOptions *)getOptions;

- (void)setOptionsWithComItextpdfXmpOptionsPropertyOptions:(ComItextpdfXmpOptionsPropertyOptions *)options;

- (jboolean)isImplicit;

- (void)setImplicitWithBoolean:(jboolean)implicit;

- (jboolean)getHasAliases;

- (void)setHasAliasesWithBoolean:(jboolean)hasAliases;

- (jboolean)isAlias;

- (void)setAliasWithBoolean:(jboolean)alias;

- (jboolean)getHasValueChild;

- (void)setHasValueChildWithBoolean:(jboolean)hasValueChild;

- (void)sort;

- (void)dumpNodeWithJavaLangStringBuffer:(JavaLangStringBuffer *)result
                             withBoolean:(jboolean)recursive
                                 withInt:(jint)indent
                                 withInt:(jint)index;

- (jboolean)isLanguageNode;

- (jboolean)isTypeNode;

- (id<JavaUtilList>)getChildren;

- (id<JavaUtilList>)getUnmodifiableChildren;

- (id<JavaUtilList>)getQualifier;

- (void)setParentWithComItextpdfXmpImplXMPNode:(ComItextpdfXmpImplXMPNode *)parent;

- (ComItextpdfXmpImplXMPNode *)findWithJavaUtilList:(id<JavaUtilList>)list
                                       withNSString:(NSString *)expr;

- (void)assertChildNotExistingWithNSString:(NSString *)childName;

- (void)assertQualifierNotExistingWithNSString:(NSString *)qualifierName;

- (void)copyAllFieldsTo:(ComItextpdfXmpImplXMPNode *)other;

@end

__attribute__((always_inline)) inline void ComItextpdfXmpImplXMPNode_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfXmpImplXMPNode, name_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfXmpImplXMPNode, value_, NSString *)
J2OBJC_FIELD_SETTER(ComItextpdfXmpImplXMPNode, parent_, ComItextpdfXmpImplXMPNode *)
J2OBJC_FIELD_SETTER(ComItextpdfXmpImplXMPNode, children_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComItextpdfXmpImplXMPNode, qualifier_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComItextpdfXmpImplXMPNode, options_, ComItextpdfXmpOptionsPropertyOptions *)

@interface ComItextpdfXmpImplXMPNode_$1 : NSObject < JavaUtilIterator > {
 @public
  id<JavaUtilIterator> val$it_;
}

- (jboolean)hasNext;

- (id)next;

- (void)remove;

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0;

@end

__attribute__((always_inline)) inline void ComItextpdfXmpImplXMPNode_$1_init() {}

J2OBJC_FIELD_SETTER(ComItextpdfXmpImplXMPNode_$1, val$it_, id<JavaUtilIterator>)

#endif // _ComItextpdfXmpImplXMPNode_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/impl/XMPDateTimeImpl.java
//

#ifndef _ComItextpdfXmpImplXMPDateTimeImpl_H_
#define _ComItextpdfXmpImplXMPDateTimeImpl_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/xmp/XMPDateTime.h"

@class JavaUtilCalendar;
@class JavaUtilDate;
@class JavaUtilTimeZone;

@interface ComItextpdfXmpImplXMPDateTimeImpl : NSObject < ComItextpdfXmpXMPDateTime >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilCalendar:(JavaUtilCalendar *)calendar;

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)date
                withJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone;

- (instancetype)initWithNSString:(NSString *)strValue;

- (jint)compareToWithId:(id)dt;

- (JavaUtilCalendar *)getCalendar;

- (jint)getDay;

- (jint)getHour;

- (NSString *)getISO8601String;

- (jint)getMinute;

- (jint)getMonth;

- (jint)getNanoSecond;

- (jint)getSecond;

- (JavaUtilTimeZone *)getTimeZone;

- (jint)getYear;

- (jboolean)hasDate;

- (jboolean)hasTime;

- (jboolean)hasTimeZone;

- (void)setDayWithInt:(jint)day;

- (void)setHourWithInt:(jint)hour;

- (void)setMinuteWithInt:(jint)minute;

- (void)setMonthWithInt:(jint)month;

- (void)setNanoSecondWithInt:(jint)nanoSecond;

- (void)setSecondWithInt:(jint)second;

- (void)setTimeZoneWithJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone;

- (void)setYearWithInt:(jint)year;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfXmpImplXMPDateTimeImpl)

FOUNDATION_EXPORT void ComItextpdfXmpImplXMPDateTimeImpl_init(ComItextpdfXmpImplXMPDateTimeImpl *self);

FOUNDATION_EXPORT ComItextpdfXmpImplXMPDateTimeImpl *new_ComItextpdfXmpImplXMPDateTimeImpl_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfXmpImplXMPDateTimeImpl_initWithJavaUtilCalendar_(ComItextpdfXmpImplXMPDateTimeImpl *self, JavaUtilCalendar *calendar);

FOUNDATION_EXPORT ComItextpdfXmpImplXMPDateTimeImpl *new_ComItextpdfXmpImplXMPDateTimeImpl_initWithJavaUtilCalendar_(JavaUtilCalendar *calendar) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfXmpImplXMPDateTimeImpl_initWithJavaUtilDate_withJavaUtilTimeZone_(ComItextpdfXmpImplXMPDateTimeImpl *self, JavaUtilDate *date, JavaUtilTimeZone *timeZone);

FOUNDATION_EXPORT ComItextpdfXmpImplXMPDateTimeImpl *new_ComItextpdfXmpImplXMPDateTimeImpl_initWithJavaUtilDate_withJavaUtilTimeZone_(JavaUtilDate *date, JavaUtilTimeZone *timeZone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfXmpImplXMPDateTimeImpl_initWithNSString_(ComItextpdfXmpImplXMPDateTimeImpl *self, NSString *strValue);

FOUNDATION_EXPORT ComItextpdfXmpImplXMPDateTimeImpl *new_ComItextpdfXmpImplXMPDateTimeImpl_initWithNSString_(NSString *strValue) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfXmpImplXMPDateTimeImpl)

#endif // _ComItextpdfXmpImplXMPDateTimeImpl_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/impl/XMPUtilsImpl.java
//

#ifndef _ComItextpdfXmpImplXMPUtilsImpl_H_
#define _ComItextpdfXmpImplXMPUtilsImpl_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/xmp/XMPConst.h"

@class ComItextpdfXmpOptionsPropertyOptions;
@protocol ComItextpdfXmpXMPMeta;

@interface ComItextpdfXmpImplXMPUtilsImpl : NSObject < ComItextpdfXmpXMPConst >

#pragma mark Public

+ (void)appendPropertiesWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)source
                        withComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)destination
                                      withBoolean:(jboolean)doAllProperties
                                      withBoolean:(jboolean)replaceOldValues
                                      withBoolean:(jboolean)deleteEmptyValues;

+ (NSString *)catenateArrayItemsWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp
                                             withNSString:(NSString *)schemaNS
                                             withNSString:(NSString *)arrayName
                                             withNSString:(NSString *)separator
                                             withNSString:(NSString *)quotes
                                              withBoolean:(jboolean)allowCommas;

+ (void)removePropertiesWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp
                                     withNSString:(NSString *)schemaNS
                                     withNSString:(NSString *)propName
                                      withBoolean:(jboolean)doAllProperties
                                      withBoolean:(jboolean)includeAliases;

+ (void)separateArrayItemsWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp
                                       withNSString:(NSString *)schemaNS
                                       withNSString:(NSString *)arrayName
                                       withNSString:(NSString *)catedStr
           withComItextpdfXmpOptionsPropertyOptions:(ComItextpdfXmpOptionsPropertyOptions *)arrayOptions
                                        withBoolean:(jboolean)preserveCommas;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfXmpImplXMPUtilsImpl)

FOUNDATION_EXPORT NSString *ComItextpdfXmpImplXMPUtilsImpl_catenateArrayItemsWithComItextpdfXmpXMPMeta_withNSString_withNSString_withNSString_withNSString_withBoolean_(id<ComItextpdfXmpXMPMeta> xmp, NSString *schemaNS, NSString *arrayName, NSString *separator, NSString *quotes, jboolean allowCommas);

FOUNDATION_EXPORT void ComItextpdfXmpImplXMPUtilsImpl_separateArrayItemsWithComItextpdfXmpXMPMeta_withNSString_withNSString_withNSString_withComItextpdfXmpOptionsPropertyOptions_withBoolean_(id<ComItextpdfXmpXMPMeta> xmp, NSString *schemaNS, NSString *arrayName, NSString *catedStr, ComItextpdfXmpOptionsPropertyOptions *arrayOptions, jboolean preserveCommas);

FOUNDATION_EXPORT void ComItextpdfXmpImplXMPUtilsImpl_removePropertiesWithComItextpdfXmpXMPMeta_withNSString_withNSString_withBoolean_withBoolean_(id<ComItextpdfXmpXMPMeta> xmp, NSString *schemaNS, NSString *propName, jboolean doAllProperties, jboolean includeAliases);

FOUNDATION_EXPORT void ComItextpdfXmpImplXMPUtilsImpl_appendPropertiesWithComItextpdfXmpXMPMeta_withComItextpdfXmpXMPMeta_withBoolean_withBoolean_withBoolean_(id<ComItextpdfXmpXMPMeta> source, id<ComItextpdfXmpXMPMeta> destination, jboolean doAllProperties, jboolean replaceOldValues, jboolean deleteEmptyValues);

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfXmpImplXMPUtilsImpl)

#endif // _ComItextpdfXmpImplXMPUtilsImpl_H_

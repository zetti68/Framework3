//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/XMPException.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/XMPException.java"

#include "com/itextpdf/xmp/XMPException.h"
#include "java/lang/Throwable.h"


#line 38
@implementation ComItextpdfXmpXMPException


#line 49
- (instancetype)initWithNSString:(NSString *)message
                         withInt:(jint)errorCode {
  if (self =
#line 51
  [super initWithNSString:message]) {
    
#line 52
    self->errorCode_ = errorCode;
  }
  return self;
}


#line 62
- (instancetype)initWithNSString:(NSString *)message
                         withInt:(jint)errorCode
           withJavaLangThrowable:(JavaLangThrowable *)t {
  if (self =
#line 64
  [super initWithNSString:message withJavaLangThrowable:t]) {
    
#line 65
    self->errorCode_ = errorCode;
  }
  return self;
}


#line 72
- (jint)getErrorCode {
  
#line 74
  return errorCode_;
}

- (void)copyAllFieldsTo:(ComItextpdfXmpXMPException *)other {
  [super copyAllFieldsTo:other];
  other->errorCode_ = errorCode_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "XMPException", NULL, 0x1, NULL },
    { "initWithNSString:withInt:withJavaLangThrowable:", "XMPException", NULL, 0x1, NULL },
    { "getErrorCode", NULL, "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "errorCode_", NULL, 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfXmpXMPException = { "XMPException", "com.itextpdf.xmp", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_ComItextpdfXmpXMPException;
}

@end

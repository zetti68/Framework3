//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/XMPMetaFactory.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/xmp/XMPMetaFactory.java"

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/itextpdf/xmp/XMPException.h"
#include "com/itextpdf/xmp/XMPMeta.h"
#include "com/itextpdf/xmp/XMPMetaFactory.h"
#include "com/itextpdf/xmp/XMPSchemaRegistry.h"
#include "com/itextpdf/xmp/XMPVersionInfo.h"
#include "com/itextpdf/xmp/impl/XMPMetaImpl.h"
#include "com/itextpdf/xmp/impl/XMPMetaParser.h"
#include "com/itextpdf/xmp/impl/XMPSchemaRegistryImpl.h"
#include "com/itextpdf/xmp/impl/XMPSerializerHelper.h"
#include "com/itextpdf/xmp/options/ParseOptions.h"
#include "com/itextpdf/xmp/options/SerializeOptions.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"

BOOL ComItextpdfXmpXMPMetaFactory_initialized = NO;


#line 49
@implementation ComItextpdfXmpXMPMetaFactory

id<ComItextpdfXmpXMPSchemaRegistry> ComItextpdfXmpXMPMetaFactory_schema_;
id<ComItextpdfXmpXMPVersionInfo> ComItextpdfXmpXMPMetaFactory_versionInfo_ = 
#line 57
nil;


#line 62
- (instancetype)init {
  return [super init];
}


#line 69
+ (id<ComItextpdfXmpXMPSchemaRegistry>)getSchemaRegistry {
  
#line 70
  return ComItextpdfXmpXMPMetaFactory_schema_;
}


#line 76
+ (id<ComItextpdfXmpXMPMeta>)create {
  
#line 77
  return [[ComItextpdfXmpImplXMPMetaImpl alloc] init];
}


#line 88
+ (id<ComItextpdfXmpXMPMeta>)parseWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  
#line 89
  return [ComItextpdfXmpXMPMetaFactory parseWithJavaIoInputStream:inArg withComItextpdfXmpOptionsParseOptions:nil];
}


#line 113
+ (id<ComItextpdfXmpXMPMeta>)parseWithJavaIoInputStream:(JavaIoInputStream *)inArg
                  withComItextpdfXmpOptionsParseOptions:(ComItextpdfXmpOptionsParseOptions *)options {
  
#line 115
  return [ComItextpdfXmpImplXMPMetaParser parseWithId:inArg withComItextpdfXmpOptionsParseOptions:options];
}


#line 126
+ (id<ComItextpdfXmpXMPMeta>)parseFromStringWithNSString:(NSString *)packet {
  
#line 127
  return [ComItextpdfXmpXMPMetaFactory parseFromStringWithNSString:packet withComItextpdfXmpOptionsParseOptions:nil];
}


#line 139
+ (id<ComItextpdfXmpXMPMeta>)parseFromStringWithNSString:(NSString *)packet
                   withComItextpdfXmpOptionsParseOptions:(ComItextpdfXmpOptionsParseOptions *)options {
  
#line 141
  return [ComItextpdfXmpImplXMPMetaParser parseWithId:packet withComItextpdfXmpOptionsParseOptions:options];
}


#line 152
+ (id<ComItextpdfXmpXMPMeta>)parseFromBufferWithByteArray:(IOSByteArray *)buffer {
  
#line 153
  return [ComItextpdfXmpXMPMetaFactory parseFromBufferWithByteArray:buffer withComItextpdfXmpOptionsParseOptions:nil];
}


#line 165
+ (id<ComItextpdfXmpXMPMeta>)parseFromBufferWithByteArray:(IOSByteArray *)buffer
                    withComItextpdfXmpOptionsParseOptions:(ComItextpdfXmpOptionsParseOptions *)options {
  
#line 167
  return [ComItextpdfXmpImplXMPMetaParser parseWithId:buffer withComItextpdfXmpOptionsParseOptions:options];
}


#line 178
+ (void)serializeWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp
                    withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  
#line 179
  [ComItextpdfXmpXMPMetaFactory serializeWithComItextpdfXmpXMPMeta:xmp withJavaIoOutputStream:outArg withComItextpdfXmpOptionsSerializeOptions:nil];
}


#line 190
+ (void)serializeWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp
                    withJavaIoOutputStream:(JavaIoOutputStream *)outArg
 withComItextpdfXmpOptionsSerializeOptions:(ComItextpdfXmpOptionsSerializeOptions *)options {
  
#line 192
  [ComItextpdfXmpXMPMetaFactory assertImplementationWithComItextpdfXmpXMPMeta:xmp];
  [ComItextpdfXmpImplXMPSerializerHelper serializeWithComItextpdfXmpImplXMPMetaImpl:(ComItextpdfXmpImplXMPMetaImpl *) check_class_cast(xmp, [ComItextpdfXmpImplXMPMetaImpl class]) withJavaIoOutputStream:outArg withComItextpdfXmpOptionsSerializeOptions:options];
}


#line 204
+ (IOSByteArray *)serializeToBufferWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp
                   withComItextpdfXmpOptionsSerializeOptions:(ComItextpdfXmpOptionsSerializeOptions *)options {
  
#line 206
  [ComItextpdfXmpXMPMetaFactory assertImplementationWithComItextpdfXmpXMPMeta:xmp];
  return [ComItextpdfXmpImplXMPSerializerHelper serializeToBufferWithComItextpdfXmpImplXMPMetaImpl:(ComItextpdfXmpImplXMPMetaImpl *) check_class_cast(xmp, [ComItextpdfXmpImplXMPMetaImpl class]) withComItextpdfXmpOptionsSerializeOptions:options];
}


#line 219
+ (NSString *)serializeToStringWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp
               withComItextpdfXmpOptionsSerializeOptions:(ComItextpdfXmpOptionsSerializeOptions *)options {
  
#line 221
  [ComItextpdfXmpXMPMetaFactory assertImplementationWithComItextpdfXmpXMPMeta:xmp];
  return [ComItextpdfXmpImplXMPSerializerHelper serializeToStringWithComItextpdfXmpImplXMPMetaImpl:(ComItextpdfXmpImplXMPMetaImpl *) check_class_cast(xmp, [ComItextpdfXmpImplXMPMetaImpl class]) withComItextpdfXmpOptionsSerializeOptions:options];
}


#line 228
+ (void)assertImplementationWithComItextpdfXmpXMPMeta:(id<ComItextpdfXmpXMPMeta>)xmp {
  
#line 229
  if (!([(id) xmp isKindOfClass:[ComItextpdfXmpImplXMPMetaImpl class]])) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"The serializing service works onlywith the XMPMeta implementation of this library"];
  }
}


#line 240
+ (void)reset {
  
#line 241
  ComItextpdfXmpXMPMetaFactory_schema_ = [[ComItextpdfXmpImplXMPSchemaRegistryImpl alloc] init];
}


#line 250
+ (id<ComItextpdfXmpXMPVersionInfo>)getVersionInfo {
  @synchronized([IOSClass classWithClass:[ComItextpdfXmpXMPMetaFactory class]]) {
    
#line 251
    if (ComItextpdfXmpXMPMetaFactory_versionInfo_ == nil) {
      @try {
        jint major = 5;
        jint minor = 1;
        jint micro = 0;
        jint engBuild = 3;
        jboolean debug = NO;
        
#line 260
        NSString *message = @"Adobe XMP Core 5.1.0-jc003";
        
#line 263
        ComItextpdfXmpXMPMetaFactory_versionInfo_ = [[ComItextpdfXmpXMPMetaFactory_$1 alloc] init];
      }
      @catch (
#line 293
      JavaLangThrowable *e) {
        
#line 295
        [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithId:e];
      }
    }
    return ComItextpdfXmpXMPMetaFactory_versionInfo_;
  }
}

+ (void)initialize {
  if (self == [ComItextpdfXmpXMPMetaFactory class]) {
    ComItextpdfXmpXMPMetaFactory_schema_ =
#line 53
    [[ComItextpdfXmpImplXMPSchemaRegistryImpl alloc] init];
    ComItextpdfXmpXMPMetaFactory_initialized = YES;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "XMPMetaFactory", NULL, 0x2, NULL },
    { "getSchemaRegistry", NULL, "Lcom.itextpdf.xmp.XMPSchemaRegistry;", 0x9, NULL },
    { "create", NULL, "Lcom.itextpdf.xmp.XMPMeta;", 0x9, NULL },
    { "parseWithJavaIoInputStream:", "parse", "Lcom.itextpdf.xmp.XMPMeta;", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "parseWithJavaIoInputStream:withComItextpdfXmpOptionsParseOptions:", "parse", "Lcom.itextpdf.xmp.XMPMeta;", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "parseFromStringWithNSString:", "parseFromString", "Lcom.itextpdf.xmp.XMPMeta;", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "parseFromStringWithNSString:withComItextpdfXmpOptionsParseOptions:", "parseFromString", "Lcom.itextpdf.xmp.XMPMeta;", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "parseFromBufferWithByteArray:", "parseFromBuffer", "Lcom.itextpdf.xmp.XMPMeta;", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "parseFromBufferWithByteArray:withComItextpdfXmpOptionsParseOptions:", "parseFromBuffer", "Lcom.itextpdf.xmp.XMPMeta;", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "serializeWithComItextpdfXmpXMPMeta:withJavaIoOutputStream:", "serialize", "V", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "serializeWithComItextpdfXmpXMPMeta:withJavaIoOutputStream:withComItextpdfXmpOptionsSerializeOptions:", "serialize", "V", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "serializeToBufferWithComItextpdfXmpXMPMeta:withComItextpdfXmpOptionsSerializeOptions:", "serializeToBuffer", "[B", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "serializeToStringWithComItextpdfXmpXMPMeta:withComItextpdfXmpOptionsSerializeOptions:", "serializeToString", "Ljava.lang.String;", 0x9, "Lcom.itextpdf.xmp.XMPException;" },
    { "assertImplementationWithComItextpdfXmpXMPMeta:", "assertImplementation", "V", 0xa, NULL },
    { "reset", NULL, "V", 0x9, NULL },
    { "getVersionInfo", NULL, "Lcom.itextpdf.xmp.XMPVersionInfo;", 0x29, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "schema_", NULL, 0xa, "Lcom.itextpdf.xmp.XMPSchemaRegistry;", &ComItextpdfXmpXMPMetaFactory_schema_,  },
    { "versionInfo_", NULL, 0xa, "Lcom.itextpdf.xmp.XMPVersionInfo;", &ComItextpdfXmpXMPMetaFactory_versionInfo_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfXmpXMPMetaFactory = { "XMPMetaFactory", "com.itextpdf.xmp", NULL, 0x11, 16, methods, 2, fields, 0, NULL};
  return &_ComItextpdfXmpXMPMetaFactory;
}

@end

@implementation ComItextpdfXmpXMPMetaFactory_$1


#line 264
- (jint)getMajor {
  
#line 265
  return 5;
}


#line 268
- (jint)getMinor {
  
#line 269
  return 1;
}


#line 272
- (jint)getMicro {
  
#line 273
  return 0;
}


#line 276
- (jboolean)isDebug {
  
#line 277
  return NO;
}


#line 280
- (jint)getBuild {
  
#line 281
  return 3;
}


#line 284
- (NSString *)getMessage {
  
#line 285
  return @"Adobe XMP Core 5.1.0-jc003";
}

- (NSString *)description {
  
#line 289
  return @"Adobe XMP Core 5.1.0-jc003";
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getMajor", NULL, "I", 0x1, NULL },
    { "getMinor", NULL, "I", 0x1, NULL },
    { "getMicro", NULL, "I", 0x1, NULL },
    { "isDebug", NULL, "Z", 0x1, NULL },
    { "getBuild", NULL, "I", 0x1, NULL },
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _ComItextpdfXmpXMPMetaFactory_$1 = { "$1", "com.itextpdf.xmp", "XMPMetaFactory", 0x8000, 8, methods, 0, NULL, 0, NULL};
  return &_ComItextpdfXmpXMPMetaFactory_$1;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/awt/geom/misc/Messages.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/awt/geom/misc/Messages.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/itextpdf/awt/geom/misc/Messages.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/MissingResourceException.h"
#include "java/util/ResourceBundle.h"


#line 48
@implementation ComItextpdfAwtGeomMiscMessages

JavaUtilResourceBundle * ComItextpdfAwtGeomMiscMessages_bundle_ = 
#line 51
nil;


#line 60
+ (NSString *)getStringWithNSString:(NSString *)msg {
  
#line 61
  if (ComItextpdfAwtGeomMiscMessages_bundle_ == nil)
#line 62
  return msg;
  @try {
    return [((JavaUtilResourceBundle *) nil_chk(ComItextpdfAwtGeomMiscMessages_bundle_)) getStringWithNSString:msg];
  }
  @catch (
#line 65
  JavaUtilMissingResourceException *e) {
    return JreStrcat("$$", @"Missing message: ", msg);
  }
}


#line 79
+ (NSString *)getStringWithNSString:(NSString *)msg
                             withId:(id)arg {
  
#line 80
  return [ComItextpdfAwtGeomMiscMessages getStringWithNSString:msg withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ arg } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}


#line 92
+ (NSString *)getStringWithNSString:(NSString *)msg
                            withInt:(jint)arg {
  
#line 93
  return [ComItextpdfAwtGeomMiscMessages getStringWithNSString:msg withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [JavaLangInteger toStringWithInt:arg] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}


#line 105
+ (NSString *)getStringWithNSString:(NSString *)msg
                           withChar:(jchar)arg {
  
#line 106
  return [ComItextpdfAwtGeomMiscMessages getStringWithNSString:msg withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [NSString valueOfChar:arg] } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}


#line 120
+ (NSString *)getStringWithNSString:(NSString *)msg
                             withId:(id)arg1
                             withId:(id)arg2 {
  
#line 121
  return [ComItextpdfAwtGeomMiscMessages getStringWithNSString:msg withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ arg1, arg2 } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
}


#line 133
+ (NSString *)getStringWithNSString:(NSString *)msg
                  withNSObjectArray:(IOSObjectArray *)args {
  
#line 134
  NSString *format = msg;
  
#line 136
  if (ComItextpdfAwtGeomMiscMessages_bundle_ != nil) {
    @try {
      format = [ComItextpdfAwtGeomMiscMessages_bundle_ getStringWithNSString:msg];
    }
    @catch (
#line 139
    JavaUtilMissingResourceException *e) {
    }
  }
  
#line 143
  return [ComItextpdfAwtGeomMiscMessages formatWithNSString:format withNSObjectArray:args];
}


#line 162
+ (NSString *)formatWithNSString:(NSString *)format
               withNSObjectArray:(IOSObjectArray *)args {
  
#line 163
  JavaLangStringBuilder *answer = [[JavaLangStringBuilder alloc] initWithInt:((jint) [((NSString *) nil_chk(format)) length]) +
#line 164
  (((IOSObjectArray *) nil_chk(args))->size_ * 20)];
  IOSObjectArray *argStrings = [IOSObjectArray arrayWithLength:args->size_ type:[IOSClass classWithClass:[NSString class]]];
  for (jint i = 0; i < args->size_; ++i) {
    if (IOSObjectArray_Get(args, i) == nil)
#line 168
    IOSObjectArray_Set(argStrings, i, @"<null>");
    else
#line 170
    IOSObjectArray_Set(argStrings, i, [nil_chk(IOSObjectArray_Get(args, i)) description]);
  }
  jint lastI = 0;
  for (jint i = [format indexOf:'{' fromIndex:0]; i >= 0; i = [format indexOf:'{' fromIndex:
#line 174
  lastI]) {
    if (i != 0 && [format charAtWithInt:i - 1] == '\\') {
      
#line 177
      if (i != 1)
#line 178
      (void) [answer appendWithNSString:[format substring:lastI endIndex:i - 1]];
      (void) [answer appendWithChar:'{'];
      lastI = i + 1;
    }
    else {
      if (i > ((jint) [format length]) - 3) {
        
#line 185
        (void) [answer appendWithNSString:[format substring:lastI endIndex:((jint) [format length])]];
        lastI = ((jint) [format length]);
      }
      else {
        
#line 188
        jint argnum = (jbyte) [JavaLangCharacter digitWithChar:[format charAtWithInt:i + 1] withInt:
#line 189
        10];
        if (argnum < 0 || [format charAtWithInt:i + 2] != '}') {
          
#line 192
          (void) [answer appendWithNSString:[format substring:lastI endIndex:i + 1]];
          lastI = i + 1;
        }
        else {
          (void) [answer appendWithNSString:[format substring:lastI endIndex:i]];
          if (argnum >= argStrings->size_)
#line 198
          (void) [answer appendWithNSString:@"<missing argument>"];
          else
#line 200
          (void) [answer appendWithNSString:IOSObjectArray_Get(argStrings, argnum)];
          lastI = i + 3;
        }
      }
    }
  }
  if (lastI < ((jint) [format length]))
#line 207
  (void) [answer appendWithNSString:[format substring:lastI endIndex:((jint) [format length])]];
  return [answer description];
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getStringWithNSString:", "getString", "Ljava.lang.String;", 0x9, NULL },
    { "getStringWithNSString:withId:", "getString", "Ljava.lang.String;", 0x9, NULL },
    { "getStringWithNSString:withInt:", "getString", "Ljava.lang.String;", 0x9, NULL },
    { "getStringWithNSString:withChar:", "getString", "Ljava.lang.String;", 0x9, NULL },
    { "getStringWithNSString:withId:withId:", "getString", "Ljava.lang.String;", 0x9, NULL },
    { "getStringWithNSString:withNSObjectArray:", "getString", "Ljava.lang.String;", 0x9, NULL },
    { "formatWithNSString:withNSObjectArray:", "format", "Ljava.lang.String;", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bundle_", NULL, 0xa, "Ljava.util.ResourceBundle;", &ComItextpdfAwtGeomMiscMessages_bundle_,  },
  };
  static const J2ObjcClassInfo _ComItextpdfAwtGeomMiscMessages = { "Messages", "com.itextpdf.awt.geom.misc", NULL, 0x1, 8, methods, 1, fields, 0, NULL};
  return &_ComItextpdfAwtGeomMiscMessages;
}

@end

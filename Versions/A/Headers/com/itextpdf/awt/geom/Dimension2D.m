//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/awt/geom/Dimension2D.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/awt/geom/Dimension2D.java"

#include "com/itextpdf/awt/geom/Dimension2D.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/InternalError.h"


#line 26
@implementation ComItextpdfAwtGeomDimension2D

- (instancetype)init {
  return [super init];
}


#line 31
- (jdouble)getWidth {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 33
- (jdouble)getHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 35
- (void)setSizeWithDouble:(jdouble)width
               withDouble:(jdouble)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 37
- (void)setSizeWithComItextpdfAwtGeomDimension2D:(ComItextpdfAwtGeomDimension2D *)d {
  
#line 38
  [self setSizeWithDouble:[((ComItextpdfAwtGeomDimension2D *) nil_chk(d)) getWidth] withDouble:[d getHeight]];
}


#line 42
- (id)clone {
  @try {
    return [super clone];
  }
  @catch (
#line 45
  JavaLangCloneNotSupportedException *e) {
    @throw [[JavaLangInternalError alloc] init];
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Dimension2D", NULL, 0x4, NULL },
    { "getWidth", NULL, "D", 0x401, NULL },
    { "getHeight", NULL, "D", 0x401, NULL },
    { "setSizeWithDouble:withDouble:", "setSize", "V", 0x401, NULL },
    { "setSizeWithComItextpdfAwtGeomDimension2D:", "setSize", "V", 0x1, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL },
  };
  static const J2ObjcClassInfo _ComItextpdfAwtGeomDimension2D = { "Dimension2D", "com.itextpdf.awt.geom", NULL, 0x401, 6, methods, 0, NULL, 0, NULL};
  return &_ComItextpdfAwtGeomDimension2D;
}

@end

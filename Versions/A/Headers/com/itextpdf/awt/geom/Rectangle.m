//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/awt/geom/Rectangle.java
//

#line 1 "/Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/awt/geom/Rectangle.java"

#include "IOSClass.h"
#include "com/itextpdf/awt/geom/Dimension.h"
#include "com/itextpdf/awt/geom/Point.h"
#include "com/itextpdf/awt/geom/Rectangle.h"
#include "com/itextpdf/awt/geom/Rectangle2D.h"
#include "com/itextpdf/text/Rectangle.h"
#include "java/lang/Math.h"


#line 28
@implementation ComItextpdfAwtGeomRectangle


#line 37
- (instancetype)init {
  if (self = [super init]) {
    
#line 38
    [self setBoundsWithInt:0 withInt:0 withInt:0 withInt:0];
  }
  return self;
}


#line 41
- (instancetype)initWithComItextpdfAwtGeomPoint:(ComItextpdfAwtGeomPoint *)p {
  if (self = [super init]) {
    
#line 42
    [self setBoundsWithDouble:((ComItextpdfAwtGeomPoint *) nil_chk(p))->x_ withDouble:p->y_ withDouble:0 withDouble:0];
  }
  return self;
}


#line 45
- (instancetype)initWithComItextpdfAwtGeomPoint:(ComItextpdfAwtGeomPoint *)p
                withComItextpdfAwtGeomDimension:(ComItextpdfAwtGeomDimension *)d {
  if (self = [super init]) {
    
#line 46
    [self setBoundsWithDouble:((ComItextpdfAwtGeomPoint *) nil_chk(p))->x_ withDouble:p->y_ withDouble:((ComItextpdfAwtGeomDimension *) nil_chk(d))->width_ withDouble:d->height_];
  }
  return self;
}


#line 49
- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)width
                    withDouble:(jdouble)height {
  if (self = [super init]) {
    
#line 50
    [self setBoundsWithDouble:x withDouble:y withDouble:width withDouble:height];
  }
  return self;
}


#line 53
- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  if (self = [super init]) {
    
#line 54
    [self setBoundsWithInt:0 withInt:0 withInt:width withInt:height];
  }
  return self;
}


#line 57
- (instancetype)initWithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *)r {
  if (self = [super init]) {
    
#line 58
    [self setBoundsWithDouble:((ComItextpdfAwtGeomRectangle *) nil_chk(r))->x_ withDouble:r->y_ withDouble:r->width_ withDouble:r->height_];
  }
  return self;
}


#line 61
- (instancetype)initWithComItextpdfTextRectangle:(ComItextpdfTextRectangle *)r {
  if (self = [super init]) {
    
#line 62
    [((ComItextpdfTextRectangle *) nil_chk(r)) normalize];
    
#line 63
    [self setBoundsWithDouble:[r getLeft] withDouble:[r getBottom] withDouble:[r getWidth] withDouble:[r getHeight]];
  }
  return self;
}


#line 66
- (instancetype)initWithComItextpdfAwtGeomDimension:(ComItextpdfAwtGeomDimension *)d {
  if (self = [super init]) {
    
#line 67
    [self setBoundsWithDouble:0 withDouble:0 withDouble:((ComItextpdfAwtGeomDimension *) nil_chk(d))->width_ withDouble:d->height_];
  }
  return self;
}


#line 71
- (jdouble)getX {
  
#line 72
  return x_;
}


#line 76
- (jdouble)getY {
  return y_;
}


#line 81
- (jdouble)getHeight {
  
#line 82
  return height_;
}


#line 86
- (jdouble)getWidth {
  return width_;
}


#line 91
- (jboolean)isEmpty {
  
#line 92
  return width_ <= 0 || height_ <= 0;
}


#line 95
- (ComItextpdfAwtGeomDimension *)getSize {
  
#line 96
  return [[ComItextpdfAwtGeomDimension alloc] initWithDouble:width_ withDouble:height_];
}


#line 99
- (void)setSizeWithInt:(jint)mx
               withInt:(jint)my {
  
#line 100
  [self setSizeWithDouble:(jdouble) mx withDouble:(jdouble) my];
}


#line 102
- (void)setSizeWithDouble:(jdouble)width
               withDouble:(jdouble)height {
  
#line 103
  self->width_ = width;
  self->height_ = height;
}


#line 107
- (void)setSizeWithComItextpdfAwtGeomDimension:(ComItextpdfAwtGeomDimension *)d {
  
#line 108
  [self setSizeWithDouble:((ComItextpdfAwtGeomDimension *) nil_chk(d))->width_ withDouble:d->height_];
}


#line 111
- (ComItextpdfAwtGeomPoint *)getLocation {
  
#line 112
  return [[ComItextpdfAwtGeomPoint alloc] initWithDouble:x_ withDouble:y_];
}


#line 115
- (void)setLocationWithInt:(jint)mx
                   withInt:(jint)my {
  
#line 116
  [self setLocationWithDouble:(jdouble) mx withDouble:(jdouble) my];
}


#line 118
- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  
#line 119
  self->x_ = x;
  self->y_ = y;
}


#line 123
- (void)setLocationWithComItextpdfAwtGeomPoint:(ComItextpdfAwtGeomPoint *)p {
  
#line 124
  [self setLocationWithDouble:((ComItextpdfAwtGeomPoint *) nil_chk(p))->x_ withDouble:p->y_];
}


#line 128
- (void)setRectWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)width
               withDouble:(jdouble)height {
  jint x1 = J2ObjCFpToInt([JavaLangMath floorWithDouble:x]);
  jint y1 = J2ObjCFpToInt([JavaLangMath floorWithDouble:y]);
  jint x2 = J2ObjCFpToInt([JavaLangMath ceilWithDouble:x + width]);
  jint y2 = J2ObjCFpToInt([JavaLangMath ceilWithDouble:y + height]);
  [self setBoundsWithInt:x1 withInt:y1 withInt:x2 - x1 withInt:y2 - y1];
}


#line 137
- (ComItextpdfAwtGeomRectangle *)getBounds {
  
#line 138
  return [[ComItextpdfAwtGeomRectangle alloc] initWithDouble:x_ withDouble:y_ withDouble:width_ withDouble:height_];
}


#line 142
- (ComItextpdfAwtGeomRectangle2D *)getBounds2D {
  return [self getBounds];
}

- (void)setBoundsWithInt:(jint)x
                 withInt:(jint)y
                 withInt:(jint)width
                 withInt:(jint)height {
  
#line 147
  [self setBoundsWithDouble:(jdouble) x withDouble:(jdouble) y withDouble:(jdouble) width withDouble:(jdouble) height];
}


#line 149
- (void)setBoundsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)width
                 withDouble:(jdouble)height {
  
#line 150
  self->x_ = x;
  self->y_ = y;
  self->height_ = height;
  self->width_ = width;
}


#line 156
- (void)setBoundsWithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *)r {
  
#line 157
  [self setBoundsWithDouble:((ComItextpdfAwtGeomRectangle *) nil_chk(r))->x_ withDouble:r->y_ withDouble:r->width_ withDouble:r->height_];
}


#line 160
- (void)growWithInt:(jint)mx
            withInt:(jint)my {
  
#line 161
  [self translateWithDouble:(jdouble) mx withDouble:(jdouble) my];
}


#line 163
- (void)growWithDouble:(jdouble)dx
            withDouble:(jdouble)dy {
  
#line 164
  x_ -= dx;
  y_ -= dy;
  width_ += dx + dx;
  height_ += dy + dy;
}


#line 170
- (void)translateWithInt:(jint)mx
                 withInt:(jint)my {
  
#line 171
  [self translateWithDouble:(jdouble) mx withDouble:(jdouble) my];
}


#line 173
- (void)translateWithDouble:(jdouble)mx
                 withDouble:(jdouble)my {
  
#line 174
  x_ += mx;
  y_ += my;
}


#line 178
- (void)addWithInt:(jint)px
           withInt:(jint)py {
  
#line 179
  [self addWithDouble:(jdouble) px withDouble:(jdouble) py];
}


#line 181
- (void)addWithDouble:(jdouble)px
           withDouble:(jdouble)py {
  
#line 182
  jdouble x1 = [JavaLangMath minWithDouble:x_ withDouble:px];
  jdouble x2 = [JavaLangMath maxWithDouble:x_ + width_ withDouble:px];
  jdouble y1 = [JavaLangMath minWithDouble:y_ withDouble:py];
  jdouble y2 = [JavaLangMath maxWithDouble:y_ + height_ withDouble:py];
  [self setBoundsWithDouble:x1 withDouble:y1 withDouble:x2 - x1 withDouble:y2 - y1];
}


#line 189
- (void)addWithComItextpdfAwtGeomPoint:(ComItextpdfAwtGeomPoint *)p {
  
#line 190
  [self addWithDouble:((ComItextpdfAwtGeomPoint *) nil_chk(p))->x_ withDouble:p->y_];
}


#line 193
- (void)addWithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *)r {
  
#line 194
  jdouble x1 = [JavaLangMath minWithDouble:x_ withDouble:((ComItextpdfAwtGeomRectangle *) nil_chk(r))->x_];
  jdouble x2 = [JavaLangMath maxWithDouble:x_ + width_ withDouble:r->x_ + r->width_];
  jdouble y1 = [JavaLangMath minWithDouble:y_ withDouble:r->y_];
  jdouble y2 = [JavaLangMath maxWithDouble:y_ + height_ withDouble:r->y_ + r->height_];
  [self setBoundsWithDouble:x1 withDouble:y1 withDouble:x2 - x1 withDouble:y2 - y1];
}


#line 201
- (jboolean)containsWithInt:(jint)px
                    withInt:(jint)py {
  
#line 202
  return [self containsWithDouble:(jdouble) px withDouble:(jdouble) py];
}


#line 204
- (jboolean)containsWithDouble:(jdouble)px
                    withDouble:(jdouble)py {
  
#line 205
  if ([self isEmpty]) {
    return NO;
  }
  if (px < x_ || py < y_) {
    return NO;
  }
  px -= x_;
  py -= y_;
  return px < width_ && py < height_;
}


#line 216
- (jboolean)containsWithComItextpdfAwtGeomPoint:(ComItextpdfAwtGeomPoint *)p {
  
#line 217
  return [self containsWithDouble:((ComItextpdfAwtGeomPoint *) nil_chk(p))->x_ withDouble:p->y_];
}


#line 220
- (jboolean)containsWithInt:(jint)rx
                    withInt:(jint)ry
                    withInt:(jint)rw
                    withInt:(jint)rh {
  
#line 221
  return [self containsWithInt:rx withInt:ry] && [self containsWithInt:rx + rw - 1 withInt:ry + rh - 1];
}


#line 224
- (jboolean)containsWithDouble:(jdouble)rx
                    withDouble:(jdouble)ry
                    withDouble:(jdouble)rw
                    withDouble:(jdouble)rh {
  
#line 225
  return [self containsWithDouble:rx withDouble:ry] && [self containsWithDouble:rx + rw - 0.01 withDouble:ry + rh - 0.01];
}


#line 228
- (jboolean)containsWithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *)r {
  
#line 229
  return [self containsWithDouble:((ComItextpdfAwtGeomRectangle *) nil_chk(r))->x_ withDouble:r->y_ withDouble:r->width_ withDouble:r->height_];
}


#line 233
- (ComItextpdfAwtGeomRectangle2D *)createIntersectionWithComItextpdfAwtGeomRectangle2D:(ComItextpdfAwtGeomRectangle2D *)r {
  if ([r isKindOfClass:[ComItextpdfAwtGeomRectangle class]]) {
    return [self intersectionWithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *) check_class_cast(r, [ComItextpdfAwtGeomRectangle class])];
  }
  ComItextpdfAwtGeomRectangle2D *dst = [[ComItextpdfAwtGeomRectangle2D_Double alloc] init];
  [ComItextpdfAwtGeomRectangle2D intersectWithComItextpdfAwtGeomRectangle2D:self withComItextpdfAwtGeomRectangle2D:r withComItextpdfAwtGeomRectangle2D:dst];
  return dst;
}

- (ComItextpdfAwtGeomRectangle *)intersectionWithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *)r {
  
#line 243
  jdouble x1 = [JavaLangMath maxWithDouble:x_ withDouble:((ComItextpdfAwtGeomRectangle *) nil_chk(r))->x_];
  jdouble y1 = [JavaLangMath maxWithDouble:y_ withDouble:r->y_];
  jdouble x2 = [JavaLangMath minWithDouble:x_ + width_ withDouble:r->x_ + r->width_];
  jdouble y2 = [JavaLangMath minWithDouble:y_ + height_ withDouble:r->y_ + r->height_];
  return [[ComItextpdfAwtGeomRectangle alloc] initWithDouble:x1 withDouble:y1 withDouble:x2 - x1 withDouble:y2 - y1];
}


#line 250
- (jboolean)intersectsWithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *)r {
  
#line 251
  return ![((ComItextpdfAwtGeomRectangle *) nil_chk([self intersectionWithComItextpdfAwtGeomRectangle:r])) isEmpty];
}


#line 255
- (jint)outcodeWithDouble:(jdouble)px
               withDouble:(jdouble)py {
  jint code = 0;
  
#line 258
  if (width_ <= 0) {
    code |= ComItextpdfAwtGeomRectangle2D_OUT_LEFT | ComItextpdfAwtGeomRectangle2D_OUT_RIGHT;
  }
  else if (px < x_) {
    code |= ComItextpdfAwtGeomRectangle2D_OUT_LEFT;
  }
  else if (px > x_ + width_) {
    code |= ComItextpdfAwtGeomRectangle2D_OUT_RIGHT;
  }
  
#line 268
  if (height_ <= 0) {
    code |= ComItextpdfAwtGeomRectangle2D_OUT_TOP | ComItextpdfAwtGeomRectangle2D_OUT_BOTTOM;
  }
  else if (py < y_) {
    code |= ComItextpdfAwtGeomRectangle2D_OUT_TOP;
  }
  else if (py > y_ + height_) {
    code |= ComItextpdfAwtGeomRectangle2D_OUT_BOTTOM;
  }
  
#line 278
  return code;
}


#line 282
- (ComItextpdfAwtGeomRectangle2D *)createUnionWithComItextpdfAwtGeomRectangle2D:(ComItextpdfAwtGeomRectangle2D *)r {
  
#line 283
  if ([r isKindOfClass:[ComItextpdfAwtGeomRectangle class]]) {
    return [self union__WithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *) check_class_cast(r, [ComItextpdfAwtGeomRectangle class])];
  }
  ComItextpdfAwtGeomRectangle2D *dst = [[ComItextpdfAwtGeomRectangle2D_Double alloc] init];
  [ComItextpdfAwtGeomRectangle2D union__WithComItextpdfAwtGeomRectangle2D:self withComItextpdfAwtGeomRectangle2D:r withComItextpdfAwtGeomRectangle2D:dst];
  return dst;
}


#line 291
- (ComItextpdfAwtGeomRectangle *)union__WithComItextpdfAwtGeomRectangle:(ComItextpdfAwtGeomRectangle *)r {
  
#line 292
  ComItextpdfAwtGeomRectangle *dst = [[ComItextpdfAwtGeomRectangle alloc] initWithComItextpdfAwtGeomRectangle:self];
  [dst addWithComItextpdfAwtGeomRectangle:r];
  return dst;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([obj isKindOfClass:[ComItextpdfAwtGeomRectangle class]]) {
    ComItextpdfAwtGeomRectangle *r = (ComItextpdfAwtGeomRectangle *) check_class_cast(obj, [ComItextpdfAwtGeomRectangle class]);
    return ((ComItextpdfAwtGeomRectangle *) nil_chk(r))->x_ == x_ && r->y_ == y_ && r->width_ == width_ && r->height_ == height_;
  }
  return NO;
}

- (NSString *)description {
  
#line 313
  return JreStrcat("$$D$D$D$DC", [[self getClass] getName], @"[x=", x_, @",y=", y_, @",width=",
#line 314
  width_, @",height=", height_, ']');
}

- (void)copyAllFieldsTo:(ComItextpdfAwtGeomRectangle *)other {
  [super copyAllFieldsTo:other];
  other->height_ = height_;
  other->width_ = width_;
  other->x_ = x_;
  other->y_ = y_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Rectangle", NULL, 0x1, NULL },
    { "initWithComItextpdfAwtGeomPoint:", "Rectangle", NULL, 0x1, NULL },
    { "initWithComItextpdfAwtGeomPoint:withComItextpdfAwtGeomDimension:", "Rectangle", NULL, 0x1, NULL },
    { "initWithDouble:withDouble:withDouble:withDouble:", "Rectangle", NULL, 0x1, NULL },
    { "initWithInt:withInt:", "Rectangle", NULL, 0x1, NULL },
    { "initWithComItextpdfAwtGeomRectangle:", "Rectangle", NULL, 0x1, NULL },
    { "initWithComItextpdfTextRectangle:", "Rectangle", NULL, 0x1, NULL },
    { "initWithComItextpdfAwtGeomDimension:", "Rectangle", NULL, 0x1, NULL },
    { "getX", NULL, "D", 0x1, NULL },
    { "getY", NULL, "D", 0x1, NULL },
    { "getHeight", NULL, "D", 0x1, NULL },
    { "getWidth", NULL, "D", 0x1, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL },
    { "getSize", NULL, "Lcom.itextpdf.awt.geom.Dimension;", 0x1, NULL },
    { "setSizeWithInt:withInt:", "setSize", "V", 0x1, NULL },
    { "setSizeWithDouble:withDouble:", "setSize", "V", 0x1, NULL },
    { "setSizeWithComItextpdfAwtGeomDimension:", "setSize", "V", 0x1, NULL },
    { "getLocation", NULL, "Lcom.itextpdf.awt.geom.Point;", 0x1, NULL },
    { "setLocationWithInt:withInt:", "setLocation", "V", 0x1, NULL },
    { "setLocationWithDouble:withDouble:", "setLocation", "V", 0x1, NULL },
    { "setLocationWithComItextpdfAwtGeomPoint:", "setLocation", "V", 0x1, NULL },
    { "setRectWithDouble:withDouble:withDouble:withDouble:", "setRect", "V", 0x1, NULL },
    { "getBounds", NULL, "Lcom.itextpdf.awt.geom.Rectangle;", 0x1, NULL },
    { "getBounds2D", NULL, "Lcom.itextpdf.awt.geom.Rectangle2D;", 0x1, NULL },
    { "setBoundsWithInt:withInt:withInt:withInt:", "setBounds", "V", 0x1, NULL },
    { "setBoundsWithDouble:withDouble:withDouble:withDouble:", "setBounds", "V", 0x1, NULL },
    { "setBoundsWithComItextpdfAwtGeomRectangle:", "setBounds", "V", 0x1, NULL },
    { "growWithInt:withInt:", "grow", "V", 0x1, NULL },
    { "growWithDouble:withDouble:", "grow", "V", 0x1, NULL },
    { "translateWithInt:withInt:", "translate", "V", 0x1, NULL },
    { "translateWithDouble:withDouble:", "translate", "V", 0x1, NULL },
    { "addWithInt:withInt:", "add", "V", 0x1, NULL },
    { "addWithDouble:withDouble:", "add", "V", 0x1, NULL },
    { "addWithComItextpdfAwtGeomPoint:", "add", "V", 0x1, NULL },
    { "addWithComItextpdfAwtGeomRectangle:", "add", "V", 0x1, NULL },
    { "containsWithInt:withInt:", "contains", "Z", 0x1, NULL },
    { "containsWithDouble:withDouble:", "contains", "Z", 0x1, NULL },
    { "containsWithComItextpdfAwtGeomPoint:", "contains", "Z", 0x1, NULL },
    { "containsWithInt:withInt:withInt:withInt:", "contains", "Z", 0x1, NULL },
    { "containsWithDouble:withDouble:withDouble:withDouble:", "contains", "Z", 0x1, NULL },
    { "containsWithComItextpdfAwtGeomRectangle:", "contains", "Z", 0x1, NULL },
    { "createIntersectionWithComItextpdfAwtGeomRectangle2D:", "createIntersection", "Lcom.itextpdf.awt.geom.Rectangle2D;", 0x1, NULL },
    { "intersectionWithComItextpdfAwtGeomRectangle:", "intersection", "Lcom.itextpdf.awt.geom.Rectangle;", 0x1, NULL },
    { "intersectsWithComItextpdfAwtGeomRectangle:", "intersects", "Z", 0x1, NULL },
    { "outcodeWithDouble:withDouble:", "outcode", "I", 0x1, NULL },
    { "createUnionWithComItextpdfAwtGeomRectangle2D:", "createUnion", "Lcom.itextpdf.awt.geom.Rectangle2D;", 0x1, NULL },
    { "union__WithComItextpdfAwtGeomRectangle:", "union", "Lcom.itextpdf.awt.geom.Rectangle;", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = ComItextpdfAwtGeomRectangle_serialVersionUID },
    { "x_", NULL, 0x1, "D", NULL,  },
    { "y_", NULL, 0x1, "D", NULL,  },
    { "width_", NULL, 0x1, "D", NULL,  },
    { "height_", NULL, 0x1, "D", NULL,  },
  };
  static const J2ObjcClassInfo _ComItextpdfAwtGeomRectangle = { "Rectangle", "com.itextpdf.awt.geom", NULL, 0x1, 49, methods, 5, fields, 0, NULL};
  return &_ComItextpdfAwtGeomRectangle;
}

@end

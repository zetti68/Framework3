//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/SimarisCurves/com.itextpdf/src/com/itextpdf/awt/geom/FlatteningPathIterator.java
//

#ifndef _ComItextpdfAwtGeomFlatteningPathIterator_H_
#define _ComItextpdfAwtGeomFlatteningPathIterator_H_

#include "J2ObjC_header.h"
#include "com/itextpdf/awt/geom/PathIterator.h"

@class IOSDoubleArray;
@class IOSFloatArray;

@interface ComItextpdfAwtGeomFlatteningPathIterator : NSObject < ComItextpdfAwtGeomPathIterator > {
 @public
  jint bufType_;
  jint bufLimit_;
  jint bufSize_;
  jint bufIndex_;
  jint bufSubdiv_;
  IOSDoubleArray *buf_;
  jboolean bufEmpty_;
  id<ComItextpdfAwtGeomPathIterator> p_;
  jdouble flatness_;
  jdouble flatness2_;
  jdouble px_;
  jdouble py_;
  IOSDoubleArray *coords_;
}

#pragma mark Public

- (instancetype)initWithComItextpdfAwtGeomPathIterator:(id<ComItextpdfAwtGeomPathIterator>)path
                                            withDouble:(jdouble)flatness;

- (instancetype)initWithComItextpdfAwtGeomPathIterator:(id<ComItextpdfAwtGeomPathIterator>)path
                                            withDouble:(jdouble)flatness
                                               withInt:(jint)limit;

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jdouble)getFlatness;

- (jint)getRecursionLimit;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

#pragma mark Package-Private

- (void)evaluate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComItextpdfAwtGeomFlatteningPathIterator)

J2OBJC_FIELD_SETTER(ComItextpdfAwtGeomFlatteningPathIterator, buf_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(ComItextpdfAwtGeomFlatteningPathIterator, p_, id<ComItextpdfAwtGeomPathIterator>)
J2OBJC_FIELD_SETTER(ComItextpdfAwtGeomFlatteningPathIterator, coords_, IOSDoubleArray *)

FOUNDATION_EXPORT void ComItextpdfAwtGeomFlatteningPathIterator_initWithComItextpdfAwtGeomPathIterator_withDouble_(ComItextpdfAwtGeomFlatteningPathIterator *self, id<ComItextpdfAwtGeomPathIterator> path, jdouble flatness);

FOUNDATION_EXPORT ComItextpdfAwtGeomFlatteningPathIterator *new_ComItextpdfAwtGeomFlatteningPathIterator_initWithComItextpdfAwtGeomPathIterator_withDouble_(id<ComItextpdfAwtGeomPathIterator> path, jdouble flatness) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComItextpdfAwtGeomFlatteningPathIterator_initWithComItextpdfAwtGeomPathIterator_withDouble_withInt_(ComItextpdfAwtGeomFlatteningPathIterator *self, id<ComItextpdfAwtGeomPathIterator> path, jdouble flatness, jint limit);

FOUNDATION_EXPORT ComItextpdfAwtGeomFlatteningPathIterator *new_ComItextpdfAwtGeomFlatteningPathIterator_initWithComItextpdfAwtGeomPathIterator_withDouble_withInt_(id<ComItextpdfAwtGeomPathIterator> path, jdouble flatness, jint limit) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComItextpdfAwtGeomFlatteningPathIterator)

#endif // _ComItextpdfAwtGeomFlatteningPathIterator_H_
